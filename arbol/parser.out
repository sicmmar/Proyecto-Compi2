Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    r_int

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    instruccion -> SHOW ptcoma
Rule 16    instruccion -> use id ptcoma
Rule 17    CASE -> case LISTAWHEN ELSE end
Rule 18    CASE -> case LISTAWHEN end
Rule 19    LISTAWHEN -> LISTAWHEN WHEN
Rule 20    LISTAWHEN -> WHEN
Rule 21    WHEN -> when LEXP then LEXP
Rule 22    ELSE -> else LEXP
Rule 23    INSERT -> insert into id values para LEXP parc
Rule 24    INSERT -> insert into id para LEXP parc values para LEXP parc
Rule 25    DROP -> drop all para parc
Rule 26    DROP -> drop table id
Rule 27    DROP -> drop databases id
Rule 28    DROP -> drop databases if exist id
Rule 29    ALTER -> alter databases id RO
Rule 30    ALTER -> alter table id LOP
Rule 31    RO -> rename to id
Rule 32    RO -> owner to id
Rule 33    LOP -> LOP coma OP
Rule 34    LOP -> OP
Rule 35    OP -> add column id TIPO
Rule 36    OP -> add check para CONDCHECK parc
Rule 37    OP -> add constraint id check para CONDCHECK parc
Rule 38    OP -> add constraint id unique para LEXP parc
Rule 39    OP -> add unique para LEXP parc
Rule 40    OP -> add foreign key para LEXP parc references id para LEXP parc
Rule 41    OP -> add constraint id foreign key para LEXP parc references id para LEXP parc
Rule 42    OP -> alter column id set not null
Rule 43    OP -> alter column id set null
Rule 44    OP -> drop constraint id
Rule 45    OP -> drop column LEXP
Rule 46    OP -> drop check id
Rule 47    OP -> rename column id to id
Rule 48    OP -> alter column id type TIPO
Rule 49    SHOWDB -> show dbs
Rule 50    SHOW -> show tables para id parc
Rule 51    SHOW -> show collection para parc
Rule 52    CREATEDB -> create RD if not exist id
Rule 53    CREATEDB -> create RD if not exist id OPCCDB
Rule 54    CREATEDB -> create RD id
Rule 55    CREATEDB -> create RD id OPCCDB
Rule 56    OPCCDB -> PROPIETARIO
Rule 57    OPCCDB -> MODO
Rule 58    OPCCDB -> PROPIETARIO MODO
Rule 59    RD -> or replace databases
Rule 60    RD -> databases
Rule 61    PROPIETARIO -> owner igual id
Rule 62    PROPIETARIO -> owner id
Rule 63    PROPIETARIO -> owner igual cadena
Rule 64    PROPIETARIO -> owner cadena
Rule 65    PROPIETARIO -> owner igual cadenaString
Rule 66    PROPIETARIO -> owner cadenaString
Rule 67    MODO -> mode igual int
Rule 68    MODO -> mode int
Rule 69    CREATETABLE -> create table id para LDEF parc ptcoma
Rule 70    CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 71    LDEF -> LDEF coma COLDEF
Rule 72    LDEF -> COLDEF
Rule 73    COLDEF -> OPCONST
Rule 74    COLDEF -> constraint id OPCONST
Rule 75    COLDEF -> id TIPO
Rule 76    COLDEF -> id TIPO LOPCOLUMN
Rule 77    LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 78    LOPCOLUMN -> OPCOLUMN
Rule 79    OPCOLUMN -> constraint id unique
Rule 80    OPCOLUMN -> not null
Rule 81    OPCOLUMN -> primary key
Rule 82    OPCOLUMN -> null
Rule 83    OPCOLUMN -> unique
Rule 84    OPCOLUMN -> references id
Rule 85    OPCOLUMN -> constraint id check para CONDCHECK parc
Rule 86    OPCOLUMN -> check para CONDCHECK parc
Rule 87    OPCOLUMN -> default EXP
Rule 88    OPCONST -> primary key para LEXP parc
Rule 89    OPCONST -> foreign key para LEXP parc references id para LEXP parc
Rule 90    OPCONST -> check para CONDCHECK parc
Rule 91    OPCONST -> unique para LEXP parc
Rule 92    CONDCHECK -> EXP mayor EXP
Rule 93    CONDCHECK -> EXP menor EXP
Rule 94    CONDCHECK -> EXP mayor_igual EXP
Rule 95    CONDCHECK -> EXP menor_igual EXP
Rule 96    CONDCHECK -> EXP igual EXP
Rule 97    CONDCHECK -> EXP diferente1 EXP
Rule 98    CONDCHECK -> EXP diferente2 EXP
Rule 99    HERENCIA -> inherits para LEXP parc
Rule 100   CREATETYPE -> create type id as enum para LEXP parc
Rule 101   SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 102   SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 103   SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 104   LIMIT -> limit int
Rule 105   LIMIT -> limit all
Rule 106   LIMIT -> offset int
Rule 107   LIMIT -> limit int offset int
Rule 108   LIMIT -> offset int limit int
Rule 109   LIMIT -> limit all offset int
Rule 110   LIMIT -> offset int limit all
Rule 111   LIMIT -> <empty>
Rule 112   WHERE -> where EXP
Rule 113   WHERE -> <empty>
Rule 114   WHERE -> where EXIST
Rule 115   COMBINING -> union LEXP
Rule 116   COMBINING -> union all LEXP
Rule 117   COMBINING -> intersect LEXP
Rule 118   COMBINING -> except LEXP
Rule 119   COMBINING -> <empty>
Rule 120   GROUP -> group by LEXP
Rule 121   GROUP -> <empty>
Rule 122   HAVING -> having EXP
Rule 123   HAVING -> <empty>
Rule 124   ORDER -> order by LEXP ORD
Rule 125   ORDER -> order by LEXP
Rule 126   ORDER -> <empty>
Rule 127   ORD -> asc
Rule 128   ORD -> desc
Rule 129   UPDATE -> update id set LCAMPOS where LEXP
Rule 130   LCAMPOS -> LCAMPOS id igual EXP
Rule 131   LCAMPOS -> id igual EXP
Rule 132   DELETE -> delete r_from EXP WHERE
Rule 133   EXIST -> exist para SELECT parc
Rule 134   EXIST -> not exist para SELECT parc
Rule 135   LEXP -> LEXP coma EXP
Rule 136   LEXP -> EXP
Rule 137   TIPO -> decimal para LEXP parc
Rule 138   TIPO -> numeric para LEXP parc
Rule 139   TIPO -> varchar para int parc
Rule 140   TIPO -> timestamp para int parc
Rule 141   TIPO -> character para int parc
Rule 142   TIPO -> interval para int parc
Rule 143   TIPO -> char para int parc
Rule 144   TIPO -> time para int parc
Rule 145   TIPO -> character varying para int parc
Rule 146   TIPO -> interval cadena
Rule 147   TIPO -> timestamp para int parc without time zone
Rule 148   TIPO -> timestamp para int parc with time zone
Rule 149   TIPO -> time para int parc without time zone
Rule 150   TIPO -> time para int parc with time zone
Rule 151   TIPO -> interval para int parc cadena
Rule 152   TIPO -> smallint
Rule 153   TIPO -> integer
Rule 154   TIPO -> bigint
Rule 155   TIPO -> real
Rule 156   TIPO -> double precision
Rule 157   TIPO -> money
Rule 158   TIPO -> text
Rule 159   TIPO -> timestamp
Rule 160   TIPO -> date
Rule 161   TIPO -> time
Rule 162   TIPO -> interval
Rule 163   TIPO -> boolean
Rule 164   TIPO -> decimal
Rule 165   TIPO -> numeric
Rule 166   TIPO -> id
Rule 167   TIPO -> timestamp without time zone
Rule 168   TIPO -> timestamp with time zone
Rule 169   TIPO -> time without time zone
Rule 170   TIPO -> time with time zone
Rule 171   FIELDS -> year
Rule 172   FIELDS -> month
Rule 173   FIELDS -> day
Rule 174   FIELDS -> hour
Rule 175   FIELDS -> minute
Rule 176   FIELDS -> second
Rule 177   EXP -> EXP mas EXP
Rule 178   EXP -> EXP menos EXP
Rule 179   EXP -> EXP multiplicacion EXP
Rule 180   EXP -> EXP division EXP
Rule 181   EXP -> EXP modulo EXP
Rule 182   EXP -> EXP elevado EXP
Rule 183   EXP -> EXP and EXP
Rule 184   EXP -> EXP or EXP
Rule 185   EXP -> EXP mayor EXP
Rule 186   EXP -> EXP menor EXP
Rule 187   EXP -> EXP mayor_igual EXP
Rule 188   EXP -> EXP menor_igual EXP
Rule 189   EXP -> EXP igual EXP
Rule 190   EXP -> EXP diferente1 EXP
Rule 191   EXP -> EXP diferente2 EXP
Rule 192   EXP -> EXP between EXP
Rule 193   EXP -> EXP is not null
Rule 194   EXP -> EXP is not true
Rule 195   EXP -> EXP is not false
Rule 196   EXP -> EXP is not unknown
Rule 197   EXP -> EXP not like cadena
Rule 198   EXP -> EXP is null
Rule 199   EXP -> EXP is true
Rule 200   EXP -> EXP is unknown
Rule 201   EXP -> EXP as cadena
Rule 202   EXP -> EXP as id
Rule 203   EXP -> EXP as cadenaString
Rule 204   EXP -> EXP like cadena
Rule 205   EXP -> EXP is false
Rule 206   EXP -> EXP isnull
Rule 207   EXP -> EXP notnull
Rule 208   EXP -> EXP cadenaString
Rule 209   EXP -> EXP id
Rule 210   EXP -> EXP cadena
Rule 211   EXP -> mas EXP
Rule 212   EXP -> menos EXP
Rule 213   EXP -> not EXP
Rule 214   EXP -> EXP not between EXP
Rule 215   EXP -> EXP between symetric EXP
Rule 216   EXP -> EXP in para LEXP parc
Rule 217   EXP -> EXP not in para LEXP parc
Rule 218   EXP -> EXP is not distinct r_from EXP
Rule 219   EXP -> EXP is distinct r_from EXP
Rule 220   EXP -> EXP not between symetric EXP
Rule 221   EXP -> SELECT
Rule 222   EXP -> CASE
Rule 223   EXP -> para EXP parc
Rule 224   EXP -> id para parc
Rule 225   EXP -> id para LEXP parc
Rule 226   EXP -> any para LEXP parc
Rule 227   EXP -> all para LEXP parc
Rule 228   EXP -> some para LEXP parc
Rule 229   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 230   EXP -> cadena as TIPO
Rule 231   EXP -> int
Rule 232   EXP -> decimales
Rule 233   EXP -> cadena
Rule 234   EXP -> cadenaString
Rule 235   EXP -> true
Rule 236   EXP -> false
Rule 237   EXP -> id
Rule 238   EXP -> multiplicacion
Rule 239   EXP -> null
Rule 240   EXP -> idPunto
Rule 241   EXP -> default
Rule 242   EXP -> current_time
Rule 243   EXP -> current_date
Rule 244   EXP -> timestamp cadena
Rule 245   EXP -> interval cadena

Terminals, with rules where they appear

add                  : 35 36 37 38 39 40 41
all                  : 25 105 109 110 116 227
alter                : 29 30 42 43 48
and                  : 183
any                  : 226
as                   : 100 201 202 203 230
asc                  : 127
between              : 192 214 215 220
bigint               : 154
boolean              : 163
by                   : 120 124 125
cadena               : 63 64 146 151 197 201 204 210 229 230 233 244 245
cadenaString         : 65 66 203 208 234
case                 : 17 18
char                 : 143
character            : 141 145
check                : 36 37 46 85 86 90
collection           : 51
column               : 35 42 43 45 47 48
coma                 : 33 71 135
constraint           : 37 38 41 44 74 79 85
create               : 52 53 54 55 69 70 100
current_date         : 243
current_time         : 242
databases            : 27 28 29 59 60
date                 : 160
day                  : 173
dbs                  : 49
decimal              : 137 164
decimales            : 232
default              : 87 241
delete               : 132
desc                 : 128
diferente1           : 97 190
diferente2           : 98 191
distinct             : 101 218 219
division             : 180
double               : 156
drop                 : 25 26 27 28 44 45 46
elevado              : 182
else                 : 22
end                  : 17 18
enum                 : 100
error                : 
except               : 118
exist                : 28 52 53 133 134
extract              : 229
false                : 195 205 236
foreign              : 40 41 89
group                : 120
having               : 122
hour                 : 174
id                   : 16 23 24 26 27 28 29 30 31 32 35 37 38 40 41 41 42 43 44 46 47 47 48 50 52 53 54 55 61 62 69 70 74 75 76 79 84 85 89 100 129 130 131 166 202 209 224 225 237
idPunto              : 240
if                   : 28 52 53
igual                : 61 63 65 67 96 130 131 189
in                   : 216 217
inherits             : 99
insert               : 23 24
int                  : 67 68 104 106 107 107 108 108 109 110 139 140 141 142 143 144 145 147 148 149 150 151 231
integer              : 153
intersect            : 117
interval             : 142 146 151 162 245
into                 : 23 24
is                   : 193 194 195 196 198 199 200 205 218 219
isnull               : 206
key                  : 40 41 81 88 89
like                 : 197 204
limit                : 104 105 107 108 109 110
mas                  : 177 211
mayor                : 92 185
mayor_igual          : 94 187
menor                : 93 186
menor_igual          : 95 188
menos                : 178 212
minute               : 175
mode                 : 67 68
modulo               : 181
money                : 157
month                : 172
multiplicacion       : 179 238
not                  : 42 52 53 80 134 193 194 195 196 197 213 214 217 218 220
notnull              : 207
null                 : 42 43 80 82 193 198 239
numeric              : 138 165
offset               : 106 107 108 109 110
or                   : 59 184
order                : 124 125
owner                : 32 61 62 63 64 65 66
para                 : 23 24 24 25 36 37 38 39 40 40 41 41 50 51 69 70 85 86 88 89 89 90 91 99 100 133 134 137 138 139 140 141 142 143 144 145 147 148 149 150 151 216 217 223 224 225 226 227 228 229
parc                 : 23 24 24 25 36 37 38 39 40 40 41 41 50 51 69 70 85 86 88 89 89 90 91 99 100 133 134 137 138 139 140 141 142 143 144 145 147 148 149 150 151 216 217 223 224 225 226 227 228 229
precision            : 156
primary              : 81 88
ptcoma               : 4 6 7 8 9 10 11 13 14 15 16 69 70
r_from               : 101 102 132 218 219 229
r_int                : 
real                 : 155
references           : 40 41 84 89
rename               : 31 47
replace              : 59
second               : 176
select               : 101 102 103
set                  : 42 43 129
show                 : 49 50 51
smallint             : 152
some                 : 228
symetric             : 215 220
table                : 26 30 69 70
tables               : 50
text                 : 158
then                 : 21
time                 : 144 147 148 149 149 150 150 161 167 168 169 169 170 170
timestamp            : 140 147 148 159 167 168 229 244
to                   : 31 32 47
true                 : 194 199 235
type                 : 48 100
union                : 115 116
unique               : 38 39 79 83 91
unknown              : 196 200
update               : 129
use                  : 16
values               : 23 24
varchar              : 139
varying              : 145
when                 : 21
where                : 112 114 129
with                 : 148 150 168 170
without              : 147 149 167 169
year                 : 171
zone                 : 147 148 149 150 167 168 169 170

Nonterminals, with rules where they appear

ALTER                : 8
CASE                 : 12 222
COLDEF               : 71 72
COMBINING            : 101 102 103
CONDCHECK            : 36 37 85 86 90
CREATEDB             : 13
CREATETABLE          : 5
CREATETYPE           : 11
DELETE               : 7
DROP                 : 9
ELSE                 : 17
EXIST                : 114
EXP                  : 87 92 92 93 93 94 94 95 95 96 96 97 97 98 98 112 122 130 131 132 135 136 177 177 178 178 179 179 180 180 181 181 182 182 183 183 184 184 185 185 186 186 187 187 188 188 189 189 190 190 191 191 192 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 214 215 215 216 217 218 218 219 219 220 220 223
FIELDS               : 229
GROUP                : 101 102 103
HAVING               : 101 102 103
HERENCIA             : 70
INSERT               : 10
LCAMPOS              : 129 130
LDEF                 : 69 70 71
LEXP                 : 21 21 22 23 24 24 38 39 40 40 41 41 45 88 89 89 91 99 100 101 101 102 102 103 115 116 117 118 120 124 125 129 135 137 138 216 217 225 226 227 228
LIMIT                : 101 102 103
LISTAWHEN            : 17 18 19
LOP                  : 30 33
LOPCOLUMN            : 76 77
MODO                 : 57 58
OP                   : 33 34
OPCCDB               : 53 55
OPCOLUMN             : 77 78
OPCONST              : 73 74
ORD                  : 124
ORDER                : 101 102 103
PROPIETARIO          : 56 58
RD                   : 52 53 54 55
RO                   : 29
SELECT               : 4 133 134 221
SHOW                 : 15
SHOWDB               : 14
TIPO                 : 35 48 75 76 230
UPDATE               : 6
WHEN                 : 19 20
WHERE                : 101 102 103 132
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (69) CREATETABLE -> . create table id para LDEF parc ptcoma
    (70) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (129) UPDATE -> . update id set LCAMPOS where LEXP
    (132) DELETE -> . delete r_from EXP WHERE
    (29) ALTER -> . alter databases id RO
    (30) ALTER -> . alter table id LOP
    (25) DROP -> . drop all para parc
    (26) DROP -> . drop table id
    (27) DROP -> . drop databases id
    (28) DROP -> . drop databases if exist id
    (23) INSERT -> . insert into id values para LEXP parc
    (24) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (100) CREATETYPE -> . create type id as enum para LEXP parc
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end
    (52) CREATEDB -> . create RD if not exist id
    (53) CREATEDB -> . create RD if not exist id OPCCDB
    (54) CREATEDB -> . create RD id
    (55) CREATEDB -> . create RD id OPCCDB
    (49) SHOWDB -> . show dbs
    (50) SHOW -> . show tables para id parc
    (51) SHOW -> . show collection para parc

    use             shift and go to state 16
    select          shift and go to state 17
    create          shift and go to state 18
    update          shift and go to state 19
    delete          shift and go to state 20
    alter           shift and go to state 21
    drop            shift and go to state 22
    insert          shift and go to state 23
    case            shift and go to state 24
    show            shift and go to state 25

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (69) CREATETABLE -> . create table id para LDEF parc ptcoma
    (70) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (129) UPDATE -> . update id set LCAMPOS where LEXP
    (132) DELETE -> . delete r_from EXP WHERE
    (29) ALTER -> . alter databases id RO
    (30) ALTER -> . alter table id LOP
    (25) DROP -> . drop all para parc
    (26) DROP -> . drop table id
    (27) DROP -> . drop databases id
    (28) DROP -> . drop databases if exist id
    (23) INSERT -> . insert into id values para LEXP parc
    (24) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (100) CREATETYPE -> . create type id as enum para LEXP parc
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end
    (52) CREATEDB -> . create RD if not exist id
    (53) CREATEDB -> . create RD if not exist id OPCCDB
    (54) CREATEDB -> . create RD id
    (55) CREATEDB -> . create RD id OPCCDB
    (49) SHOWDB -> . show dbs
    (50) SHOW -> . show tables para id parc
    (51) SHOW -> . show collection para parc

    $end            reduce using rule 1 (init -> instrucciones .)
    use             shift and go to state 16
    select          shift and go to state 17
    create          shift and go to state 18
    update          shift and go to state 19
    delete          shift and go to state 20
    alter           shift and go to state 21
    drop            shift and go to state 22
    insert          shift and go to state 23
    case            shift and go to state 24
    show            shift and go to state 25

    instruccion                    shift and go to state 26
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15

state 3

    (3) instrucciones -> instruccion .

    use             reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 27


state 5

    (5) instruccion -> CREATETABLE .

    use             reduce using rule 5 (instruccion -> CREATETABLE .)
    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 28


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 29


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 30


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 31


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 32


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 33


state 12

    (12) instruccion -> CASE .

    use             reduce using rule 12 (instruccion -> CASE .)
    select          reduce using rule 12 (instruccion -> CASE .)
    create          reduce using rule 12 (instruccion -> CASE .)
    update          reduce using rule 12 (instruccion -> CASE .)
    delete          reduce using rule 12 (instruccion -> CASE .)
    alter           reduce using rule 12 (instruccion -> CASE .)
    drop            reduce using rule 12 (instruccion -> CASE .)
    insert          reduce using rule 12 (instruccion -> CASE .)
    case            reduce using rule 12 (instruccion -> CASE .)
    show            reduce using rule 12 (instruccion -> CASE .)
    $end            reduce using rule 12 (instruccion -> CASE .)


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 34


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 35


state 15

    (15) instruccion -> SHOW . ptcoma

    ptcoma          shift and go to state 36


state 16

    (16) instruccion -> use . id ptcoma

    id              shift and go to state 37


state 17

    (101) SELECT -> select . distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> select . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> select . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    distinct        shift and go to state 38
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 39
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 18

    (69) CREATETABLE -> create . table id para LDEF parc ptcoma
    (70) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (100) CREATETYPE -> create . type id as enum para LEXP parc
    (52) CREATEDB -> create . RD if not exist id
    (53) CREATEDB -> create . RD if not exist id OPCCDB
    (54) CREATEDB -> create . RD id
    (55) CREATEDB -> create . RD id OPCCDB
    (59) RD -> . or replace databases
    (60) RD -> . databases

    table           shift and go to state 66
    type            shift and go to state 67
    or              shift and go to state 69
    databases       shift and go to state 70

    RD                             shift and go to state 68

state 19

    (129) UPDATE -> update . id set LCAMPOS where LEXP

    id              shift and go to state 71


state 20

    (132) DELETE -> delete . r_from EXP WHERE

    r_from          shift and go to state 72


state 21

    (29) ALTER -> alter . databases id RO
    (30) ALTER -> alter . table id LOP

    databases       shift and go to state 73
    table           shift and go to state 74


state 22

    (25) DROP -> drop . all para parc
    (26) DROP -> drop . table id
    (27) DROP -> drop . databases id
    (28) DROP -> drop . databases if exist id

    all             shift and go to state 75
    table           shift and go to state 76
    databases       shift and go to state 77


state 23

    (23) INSERT -> insert . into id values para LEXP parc
    (24) INSERT -> insert . into id para LEXP parc values para LEXP parc

    into            shift and go to state 78


state 24

    (17) CASE -> case . LISTAWHEN ELSE end
    (18) CASE -> case . LISTAWHEN end
    (19) LISTAWHEN -> . LISTAWHEN WHEN
    (20) LISTAWHEN -> . WHEN
    (21) WHEN -> . when LEXP then LEXP

    when            shift and go to state 81

    LISTAWHEN                      shift and go to state 79
    WHEN                           shift and go to state 80

state 25

    (49) SHOWDB -> show . dbs
    (50) SHOW -> show . tables para id parc
    (51) SHOW -> show . collection para parc

    dbs             shift and go to state 82
    tables          shift and go to state 83
    collection      shift and go to state 84


state 26

    (2) instrucciones -> instrucciones instruccion .

    use             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 27

    (4) instruccion -> SELECT ptcoma .

    use             reduce using rule 4 (instruccion -> SELECT ptcoma .)
    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 28

    (6) instruccion -> UPDATE ptcoma .

    use             reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 29

    (7) instruccion -> DELETE ptcoma .

    use             reduce using rule 7 (instruccion -> DELETE ptcoma .)
    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 30

    (8) instruccion -> ALTER ptcoma .

    use             reduce using rule 8 (instruccion -> ALTER ptcoma .)
    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 31

    (9) instruccion -> DROP ptcoma .

    use             reduce using rule 9 (instruccion -> DROP ptcoma .)
    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 32

    (10) instruccion -> INSERT ptcoma .

    use             reduce using rule 10 (instruccion -> INSERT ptcoma .)
    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 33

    (11) instruccion -> CREATETYPE ptcoma .

    use             reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 34

    (13) instruccion -> CREATEDB ptcoma .

    use             reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 35

    (14) instruccion -> SHOWDB ptcoma .

    use             reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 36

    (15) instruccion -> SHOW ptcoma .

    use             reduce using rule 15 (instruccion -> SHOW ptcoma .)
    select          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    create          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    update          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    delete          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    alter           reduce using rule 15 (instruccion -> SHOW ptcoma .)
    drop            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    insert          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    case            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    show            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    $end            reduce using rule 15 (instruccion -> SHOW ptcoma .)


state 37

    (16) instruccion -> use id . ptcoma

    ptcoma          shift and go to state 85


state 38

    (101) SELECT -> select distinct . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 86
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 39

    (102) SELECT -> select LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> select LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> LEXP . coma EXP
    (112) WHERE -> . where EXP
    (113) WHERE -> .
    (114) WHERE -> . where EXIST

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    r_from          shift and go to state 87
    coma            shift and go to state 89
    where           shift and go to state 90
    group           reduce using rule 113 (WHERE -> .)
    having          reduce using rule 113 (WHERE -> .)
    union           reduce using rule 113 (WHERE -> .)
    intersect       reduce using rule 113 (WHERE -> .)
    except          reduce using rule 113 (WHERE -> .)
    order           reduce using rule 113 (WHERE -> .)
    limit           reduce using rule 113 (WHERE -> .)
    offset          reduce using rule 113 (WHERE -> .)
    ptcoma          reduce using rule 113 (WHERE -> .)
    mas             reduce using rule 113 (WHERE -> .)
    menos           reduce using rule 113 (WHERE -> .)
    multiplicacion  reduce using rule 113 (WHERE -> .)
    division        reduce using rule 113 (WHERE -> .)
    modulo          reduce using rule 113 (WHERE -> .)
    elevado         reduce using rule 113 (WHERE -> .)
    and             reduce using rule 113 (WHERE -> .)
    or              reduce using rule 113 (WHERE -> .)
    mayor           reduce using rule 113 (WHERE -> .)
    menor           reduce using rule 113 (WHERE -> .)
    mayor_igual     reduce using rule 113 (WHERE -> .)
    menor_igual     reduce using rule 113 (WHERE -> .)
    igual           reduce using rule 113 (WHERE -> .)
    diferente1      reduce using rule 113 (WHERE -> .)
    diferente2      reduce using rule 113 (WHERE -> .)
    between         reduce using rule 113 (WHERE -> .)
    is              reduce using rule 113 (WHERE -> .)
    not             reduce using rule 113 (WHERE -> .)
    as              reduce using rule 113 (WHERE -> .)
    like            reduce using rule 113 (WHERE -> .)
    isnull          reduce using rule 113 (WHERE -> .)
    notnull         reduce using rule 113 (WHERE -> .)
    cadenaString    reduce using rule 113 (WHERE -> .)
    id              reduce using rule 113 (WHERE -> .)
    cadena          reduce using rule 113 (WHERE -> .)
    in              reduce using rule 113 (WHERE -> .)
    parc            reduce using rule 113 (WHERE -> .)
    then            reduce using rule 113 (WHERE -> .)
    end             reduce using rule 113 (WHERE -> .)
    else            reduce using rule 113 (WHERE -> .)
    when            reduce using rule 113 (WHERE -> .)
    constraint      reduce using rule 113 (WHERE -> .)
    primary         reduce using rule 113 (WHERE -> .)
    null            reduce using rule 113 (WHERE -> .)
    unique          reduce using rule 113 (WHERE -> .)
    references      reduce using rule 113 (WHERE -> .)
    check           reduce using rule 113 (WHERE -> .)
    default         reduce using rule 113 (WHERE -> .)
    asc             reduce using rule 113 (WHERE -> .)
    desc            reduce using rule 113 (WHERE -> .)

  ! r_from          [ reduce using rule 113 (WHERE -> .) ]
  ! coma            [ reduce using rule 113 (WHERE -> .) ]
  ! where           [ reduce using rule 113 (WHERE -> .) ]

    WHERE                          shift and go to state 88

state 40

    (136) LEXP -> EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for like resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
    r_from          reduce using rule 136 (LEXP -> EXP .)
    coma            reduce using rule 136 (LEXP -> EXP .)
    where           reduce using rule 136 (LEXP -> EXP .)
    group           reduce using rule 136 (LEXP -> EXP .)
    having          reduce using rule 136 (LEXP -> EXP .)
    union           reduce using rule 136 (LEXP -> EXP .)
    intersect       reduce using rule 136 (LEXP -> EXP .)
    except          reduce using rule 136 (LEXP -> EXP .)
    order           reduce using rule 136 (LEXP -> EXP .)
    limit           reduce using rule 136 (LEXP -> EXP .)
    offset          reduce using rule 136 (LEXP -> EXP .)
    ptcoma          reduce using rule 136 (LEXP -> EXP .)
    parc            reduce using rule 136 (LEXP -> EXP .)
    then            reduce using rule 136 (LEXP -> EXP .)
    end             reduce using rule 136 (LEXP -> EXP .)
    else            reduce using rule 136 (LEXP -> EXP .)
    when            reduce using rule 136 (LEXP -> EXP .)
    constraint      reduce using rule 136 (LEXP -> EXP .)
    primary         reduce using rule 136 (LEXP -> EXP .)
    null            reduce using rule 136 (LEXP -> EXP .)
    unique          reduce using rule 136 (LEXP -> EXP .)
    references      reduce using rule 136 (LEXP -> EXP .)
    check           reduce using rule 136 (LEXP -> EXP .)
    default         reduce using rule 136 (LEXP -> EXP .)
    asc             reduce using rule 136 (LEXP -> EXP .)
    desc            reduce using rule 136 (LEXP -> EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116

  ! mas             [ reduce using rule 136 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 136 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 136 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 136 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 136 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 136 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 136 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 136 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 136 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 136 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 136 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 136 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 136 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 136 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 136 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 136 (LEXP -> EXP .) ]
  ! as              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! like            [ reduce using rule 136 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 136 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 136 (LEXP -> EXP .) ]
  ! cadenaString    [ reduce using rule 136 (LEXP -> EXP .) ]
  ! id              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! cadena          [ reduce using rule 136 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 136 (LEXP -> EXP .) ]


state 41

    (211) EXP -> mas . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 117
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 42

    (212) EXP -> menos . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 118
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 43

    (238) EXP -> multiplicacion .

    r_from          reduce using rule 238 (EXP -> multiplicacion .)
    coma            reduce using rule 238 (EXP -> multiplicacion .)
    where           reduce using rule 238 (EXP -> multiplicacion .)
    group           reduce using rule 238 (EXP -> multiplicacion .)
    having          reduce using rule 238 (EXP -> multiplicacion .)
    union           reduce using rule 238 (EXP -> multiplicacion .)
    intersect       reduce using rule 238 (EXP -> multiplicacion .)
    except          reduce using rule 238 (EXP -> multiplicacion .)
    order           reduce using rule 238 (EXP -> multiplicacion .)
    limit           reduce using rule 238 (EXP -> multiplicacion .)
    offset          reduce using rule 238 (EXP -> multiplicacion .)
    ptcoma          reduce using rule 238 (EXP -> multiplicacion .)
    mas             reduce using rule 238 (EXP -> multiplicacion .)
    menos           reduce using rule 238 (EXP -> multiplicacion .)
    multiplicacion  reduce using rule 238 (EXP -> multiplicacion .)
    division        reduce using rule 238 (EXP -> multiplicacion .)
    modulo          reduce using rule 238 (EXP -> multiplicacion .)
    elevado         reduce using rule 238 (EXP -> multiplicacion .)
    and             reduce using rule 238 (EXP -> multiplicacion .)
    or              reduce using rule 238 (EXP -> multiplicacion .)
    mayor           reduce using rule 238 (EXP -> multiplicacion .)
    menor           reduce using rule 238 (EXP -> multiplicacion .)
    mayor_igual     reduce using rule 238 (EXP -> multiplicacion .)
    menor_igual     reduce using rule 238 (EXP -> multiplicacion .)
    igual           reduce using rule 238 (EXP -> multiplicacion .)
    diferente1      reduce using rule 238 (EXP -> multiplicacion .)
    diferente2      reduce using rule 238 (EXP -> multiplicacion .)
    between         reduce using rule 238 (EXP -> multiplicacion .)
    is              reduce using rule 238 (EXP -> multiplicacion .)
    not             reduce using rule 238 (EXP -> multiplicacion .)
    as              reduce using rule 238 (EXP -> multiplicacion .)
    like            reduce using rule 238 (EXP -> multiplicacion .)
    isnull          reduce using rule 238 (EXP -> multiplicacion .)
    notnull         reduce using rule 238 (EXP -> multiplicacion .)
    cadenaString    reduce using rule 238 (EXP -> multiplicacion .)
    id              reduce using rule 238 (EXP -> multiplicacion .)
    cadena          reduce using rule 238 (EXP -> multiplicacion .)
    in              reduce using rule 238 (EXP -> multiplicacion .)
    parc            reduce using rule 238 (EXP -> multiplicacion .)
    then            reduce using rule 238 (EXP -> multiplicacion .)
    end             reduce using rule 238 (EXP -> multiplicacion .)
    else            reduce using rule 238 (EXP -> multiplicacion .)
    when            reduce using rule 238 (EXP -> multiplicacion .)
    constraint      reduce using rule 238 (EXP -> multiplicacion .)
    primary         reduce using rule 238 (EXP -> multiplicacion .)
    null            reduce using rule 238 (EXP -> multiplicacion .)
    unique          reduce using rule 238 (EXP -> multiplicacion .)
    references      reduce using rule 238 (EXP -> multiplicacion .)
    check           reduce using rule 238 (EXP -> multiplicacion .)
    default         reduce using rule 238 (EXP -> multiplicacion .)
    asc             reduce using rule 238 (EXP -> multiplicacion .)
    desc            reduce using rule 238 (EXP -> multiplicacion .)


state 44

    (213) EXP -> not . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 119
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 45

    (239) EXP -> null .

    r_from          reduce using rule 239 (EXP -> null .)
    coma            reduce using rule 239 (EXP -> null .)
    where           reduce using rule 239 (EXP -> null .)
    group           reduce using rule 239 (EXP -> null .)
    having          reduce using rule 239 (EXP -> null .)
    union           reduce using rule 239 (EXP -> null .)
    intersect       reduce using rule 239 (EXP -> null .)
    except          reduce using rule 239 (EXP -> null .)
    order           reduce using rule 239 (EXP -> null .)
    limit           reduce using rule 239 (EXP -> null .)
    offset          reduce using rule 239 (EXP -> null .)
    ptcoma          reduce using rule 239 (EXP -> null .)
    mas             reduce using rule 239 (EXP -> null .)
    menos           reduce using rule 239 (EXP -> null .)
    multiplicacion  reduce using rule 239 (EXP -> null .)
    division        reduce using rule 239 (EXP -> null .)
    modulo          reduce using rule 239 (EXP -> null .)
    elevado         reduce using rule 239 (EXP -> null .)
    and             reduce using rule 239 (EXP -> null .)
    or              reduce using rule 239 (EXP -> null .)
    mayor           reduce using rule 239 (EXP -> null .)
    menor           reduce using rule 239 (EXP -> null .)
    mayor_igual     reduce using rule 239 (EXP -> null .)
    menor_igual     reduce using rule 239 (EXP -> null .)
    igual           reduce using rule 239 (EXP -> null .)
    diferente1      reduce using rule 239 (EXP -> null .)
    diferente2      reduce using rule 239 (EXP -> null .)
    between         reduce using rule 239 (EXP -> null .)
    is              reduce using rule 239 (EXP -> null .)
    not             reduce using rule 239 (EXP -> null .)
    as              reduce using rule 239 (EXP -> null .)
    like            reduce using rule 239 (EXP -> null .)
    isnull          reduce using rule 239 (EXP -> null .)
    notnull         reduce using rule 239 (EXP -> null .)
    cadenaString    reduce using rule 239 (EXP -> null .)
    id              reduce using rule 239 (EXP -> null .)
    cadena          reduce using rule 239 (EXP -> null .)
    in              reduce using rule 239 (EXP -> null .)
    parc            reduce using rule 239 (EXP -> null .)
    then            reduce using rule 239 (EXP -> null .)
    end             reduce using rule 239 (EXP -> null .)
    else            reduce using rule 239 (EXP -> null .)
    when            reduce using rule 239 (EXP -> null .)
    constraint      reduce using rule 239 (EXP -> null .)
    primary         reduce using rule 239 (EXP -> null .)
    null            reduce using rule 239 (EXP -> null .)
    unique          reduce using rule 239 (EXP -> null .)
    references      reduce using rule 239 (EXP -> null .)
    check           reduce using rule 239 (EXP -> null .)
    default         reduce using rule 239 (EXP -> null .)
    asc             reduce using rule 239 (EXP -> null .)
    desc            reduce using rule 239 (EXP -> null .)


state 46

    (235) EXP -> true .

    r_from          reduce using rule 235 (EXP -> true .)
    coma            reduce using rule 235 (EXP -> true .)
    where           reduce using rule 235 (EXP -> true .)
    group           reduce using rule 235 (EXP -> true .)
    having          reduce using rule 235 (EXP -> true .)
    union           reduce using rule 235 (EXP -> true .)
    intersect       reduce using rule 235 (EXP -> true .)
    except          reduce using rule 235 (EXP -> true .)
    order           reduce using rule 235 (EXP -> true .)
    limit           reduce using rule 235 (EXP -> true .)
    offset          reduce using rule 235 (EXP -> true .)
    ptcoma          reduce using rule 235 (EXP -> true .)
    mas             reduce using rule 235 (EXP -> true .)
    menos           reduce using rule 235 (EXP -> true .)
    multiplicacion  reduce using rule 235 (EXP -> true .)
    division        reduce using rule 235 (EXP -> true .)
    modulo          reduce using rule 235 (EXP -> true .)
    elevado         reduce using rule 235 (EXP -> true .)
    and             reduce using rule 235 (EXP -> true .)
    or              reduce using rule 235 (EXP -> true .)
    mayor           reduce using rule 235 (EXP -> true .)
    menor           reduce using rule 235 (EXP -> true .)
    mayor_igual     reduce using rule 235 (EXP -> true .)
    menor_igual     reduce using rule 235 (EXP -> true .)
    igual           reduce using rule 235 (EXP -> true .)
    diferente1      reduce using rule 235 (EXP -> true .)
    diferente2      reduce using rule 235 (EXP -> true .)
    between         reduce using rule 235 (EXP -> true .)
    is              reduce using rule 235 (EXP -> true .)
    not             reduce using rule 235 (EXP -> true .)
    as              reduce using rule 235 (EXP -> true .)
    like            reduce using rule 235 (EXP -> true .)
    isnull          reduce using rule 235 (EXP -> true .)
    notnull         reduce using rule 235 (EXP -> true .)
    cadenaString    reduce using rule 235 (EXP -> true .)
    id              reduce using rule 235 (EXP -> true .)
    cadena          reduce using rule 235 (EXP -> true .)
    in              reduce using rule 235 (EXP -> true .)
    parc            reduce using rule 235 (EXP -> true .)
    then            reduce using rule 235 (EXP -> true .)
    end             reduce using rule 235 (EXP -> true .)
    else            reduce using rule 235 (EXP -> true .)
    when            reduce using rule 235 (EXP -> true .)
    constraint      reduce using rule 235 (EXP -> true .)
    primary         reduce using rule 235 (EXP -> true .)
    null            reduce using rule 235 (EXP -> true .)
    unique          reduce using rule 235 (EXP -> true .)
    references      reduce using rule 235 (EXP -> true .)
    check           reduce using rule 235 (EXP -> true .)
    default         reduce using rule 235 (EXP -> true .)
    asc             reduce using rule 235 (EXP -> true .)
    desc            reduce using rule 235 (EXP -> true .)


state 47

    (236) EXP -> false .

    r_from          reduce using rule 236 (EXP -> false .)
    coma            reduce using rule 236 (EXP -> false .)
    where           reduce using rule 236 (EXP -> false .)
    group           reduce using rule 236 (EXP -> false .)
    having          reduce using rule 236 (EXP -> false .)
    union           reduce using rule 236 (EXP -> false .)
    intersect       reduce using rule 236 (EXP -> false .)
    except          reduce using rule 236 (EXP -> false .)
    order           reduce using rule 236 (EXP -> false .)
    limit           reduce using rule 236 (EXP -> false .)
    offset          reduce using rule 236 (EXP -> false .)
    ptcoma          reduce using rule 236 (EXP -> false .)
    mas             reduce using rule 236 (EXP -> false .)
    menos           reduce using rule 236 (EXP -> false .)
    multiplicacion  reduce using rule 236 (EXP -> false .)
    division        reduce using rule 236 (EXP -> false .)
    modulo          reduce using rule 236 (EXP -> false .)
    elevado         reduce using rule 236 (EXP -> false .)
    and             reduce using rule 236 (EXP -> false .)
    or              reduce using rule 236 (EXP -> false .)
    mayor           reduce using rule 236 (EXP -> false .)
    menor           reduce using rule 236 (EXP -> false .)
    mayor_igual     reduce using rule 236 (EXP -> false .)
    menor_igual     reduce using rule 236 (EXP -> false .)
    igual           reduce using rule 236 (EXP -> false .)
    diferente1      reduce using rule 236 (EXP -> false .)
    diferente2      reduce using rule 236 (EXP -> false .)
    between         reduce using rule 236 (EXP -> false .)
    is              reduce using rule 236 (EXP -> false .)
    not             reduce using rule 236 (EXP -> false .)
    as              reduce using rule 236 (EXP -> false .)
    like            reduce using rule 236 (EXP -> false .)
    isnull          reduce using rule 236 (EXP -> false .)
    notnull         reduce using rule 236 (EXP -> false .)
    cadenaString    reduce using rule 236 (EXP -> false .)
    id              reduce using rule 236 (EXP -> false .)
    cadena          reduce using rule 236 (EXP -> false .)
    in              reduce using rule 236 (EXP -> false .)
    parc            reduce using rule 236 (EXP -> false .)
    then            reduce using rule 236 (EXP -> false .)
    end             reduce using rule 236 (EXP -> false .)
    else            reduce using rule 236 (EXP -> false .)
    when            reduce using rule 236 (EXP -> false .)
    constraint      reduce using rule 236 (EXP -> false .)
    primary         reduce using rule 236 (EXP -> false .)
    null            reduce using rule 236 (EXP -> false .)
    unique          reduce using rule 236 (EXP -> false .)
    references      reduce using rule 236 (EXP -> false .)
    check           reduce using rule 236 (EXP -> false .)
    default         reduce using rule 236 (EXP -> false .)
    asc             reduce using rule 236 (EXP -> false .)
    desc            reduce using rule 236 (EXP -> false .)


state 48

    (230) EXP -> cadena . as TIPO
    (233) EXP -> cadena .

  ! shift/reduce conflict for as resolved as shift
    as              shift and go to state 120
    r_from          reduce using rule 233 (EXP -> cadena .)
    coma            reduce using rule 233 (EXP -> cadena .)
    where           reduce using rule 233 (EXP -> cadena .)
    group           reduce using rule 233 (EXP -> cadena .)
    having          reduce using rule 233 (EXP -> cadena .)
    union           reduce using rule 233 (EXP -> cadena .)
    intersect       reduce using rule 233 (EXP -> cadena .)
    except          reduce using rule 233 (EXP -> cadena .)
    order           reduce using rule 233 (EXP -> cadena .)
    limit           reduce using rule 233 (EXP -> cadena .)
    offset          reduce using rule 233 (EXP -> cadena .)
    ptcoma          reduce using rule 233 (EXP -> cadena .)
    mas             reduce using rule 233 (EXP -> cadena .)
    menos           reduce using rule 233 (EXP -> cadena .)
    multiplicacion  reduce using rule 233 (EXP -> cadena .)
    division        reduce using rule 233 (EXP -> cadena .)
    modulo          reduce using rule 233 (EXP -> cadena .)
    elevado         reduce using rule 233 (EXP -> cadena .)
    and             reduce using rule 233 (EXP -> cadena .)
    or              reduce using rule 233 (EXP -> cadena .)
    mayor           reduce using rule 233 (EXP -> cadena .)
    menor           reduce using rule 233 (EXP -> cadena .)
    mayor_igual     reduce using rule 233 (EXP -> cadena .)
    menor_igual     reduce using rule 233 (EXP -> cadena .)
    igual           reduce using rule 233 (EXP -> cadena .)
    diferente1      reduce using rule 233 (EXP -> cadena .)
    diferente2      reduce using rule 233 (EXP -> cadena .)
    between         reduce using rule 233 (EXP -> cadena .)
    is              reduce using rule 233 (EXP -> cadena .)
    not             reduce using rule 233 (EXP -> cadena .)
    like            reduce using rule 233 (EXP -> cadena .)
    isnull          reduce using rule 233 (EXP -> cadena .)
    notnull         reduce using rule 233 (EXP -> cadena .)
    cadenaString    reduce using rule 233 (EXP -> cadena .)
    id              reduce using rule 233 (EXP -> cadena .)
    cadena          reduce using rule 233 (EXP -> cadena .)
    in              reduce using rule 233 (EXP -> cadena .)
    parc            reduce using rule 233 (EXP -> cadena .)
    then            reduce using rule 233 (EXP -> cadena .)
    end             reduce using rule 233 (EXP -> cadena .)
    else            reduce using rule 233 (EXP -> cadena .)
    when            reduce using rule 233 (EXP -> cadena .)
    constraint      reduce using rule 233 (EXP -> cadena .)
    primary         reduce using rule 233 (EXP -> cadena .)
    null            reduce using rule 233 (EXP -> cadena .)
    unique          reduce using rule 233 (EXP -> cadena .)
    references      reduce using rule 233 (EXP -> cadena .)
    check           reduce using rule 233 (EXP -> cadena .)
    default         reduce using rule 233 (EXP -> cadena .)
    asc             reduce using rule 233 (EXP -> cadena .)
    desc            reduce using rule 233 (EXP -> cadena .)

  ! as              [ reduce using rule 233 (EXP -> cadena .) ]


state 49

    (224) EXP -> id . para parc
    (225) EXP -> id . para LEXP parc
    (237) EXP -> id .

    para            shift and go to state 121
    r_from          reduce using rule 237 (EXP -> id .)
    coma            reduce using rule 237 (EXP -> id .)
    where           reduce using rule 237 (EXP -> id .)
    group           reduce using rule 237 (EXP -> id .)
    having          reduce using rule 237 (EXP -> id .)
    union           reduce using rule 237 (EXP -> id .)
    intersect       reduce using rule 237 (EXP -> id .)
    except          reduce using rule 237 (EXP -> id .)
    order           reduce using rule 237 (EXP -> id .)
    limit           reduce using rule 237 (EXP -> id .)
    offset          reduce using rule 237 (EXP -> id .)
    ptcoma          reduce using rule 237 (EXP -> id .)
    mas             reduce using rule 237 (EXP -> id .)
    menos           reduce using rule 237 (EXP -> id .)
    multiplicacion  reduce using rule 237 (EXP -> id .)
    division        reduce using rule 237 (EXP -> id .)
    modulo          reduce using rule 237 (EXP -> id .)
    elevado         reduce using rule 237 (EXP -> id .)
    and             reduce using rule 237 (EXP -> id .)
    or              reduce using rule 237 (EXP -> id .)
    mayor           reduce using rule 237 (EXP -> id .)
    menor           reduce using rule 237 (EXP -> id .)
    mayor_igual     reduce using rule 237 (EXP -> id .)
    menor_igual     reduce using rule 237 (EXP -> id .)
    igual           reduce using rule 237 (EXP -> id .)
    diferente1      reduce using rule 237 (EXP -> id .)
    diferente2      reduce using rule 237 (EXP -> id .)
    between         reduce using rule 237 (EXP -> id .)
    is              reduce using rule 237 (EXP -> id .)
    not             reduce using rule 237 (EXP -> id .)
    as              reduce using rule 237 (EXP -> id .)
    like            reduce using rule 237 (EXP -> id .)
    isnull          reduce using rule 237 (EXP -> id .)
    notnull         reduce using rule 237 (EXP -> id .)
    cadenaString    reduce using rule 237 (EXP -> id .)
    id              reduce using rule 237 (EXP -> id .)
    cadena          reduce using rule 237 (EXP -> id .)
    in              reduce using rule 237 (EXP -> id .)
    parc            reduce using rule 237 (EXP -> id .)
    then            reduce using rule 237 (EXP -> id .)
    end             reduce using rule 237 (EXP -> id .)
    else            reduce using rule 237 (EXP -> id .)
    when            reduce using rule 237 (EXP -> id .)
    constraint      reduce using rule 237 (EXP -> id .)
    primary         reduce using rule 237 (EXP -> id .)
    null            reduce using rule 237 (EXP -> id .)
    unique          reduce using rule 237 (EXP -> id .)
    references      reduce using rule 237 (EXP -> id .)
    check           reduce using rule 237 (EXP -> id .)
    default         reduce using rule 237 (EXP -> id .)
    asc             reduce using rule 237 (EXP -> id .)
    desc            reduce using rule 237 (EXP -> id .)


state 50

    (234) EXP -> cadenaString .

    r_from          reduce using rule 234 (EXP -> cadenaString .)
    coma            reduce using rule 234 (EXP -> cadenaString .)
    where           reduce using rule 234 (EXP -> cadenaString .)
    group           reduce using rule 234 (EXP -> cadenaString .)
    having          reduce using rule 234 (EXP -> cadenaString .)
    union           reduce using rule 234 (EXP -> cadenaString .)
    intersect       reduce using rule 234 (EXP -> cadenaString .)
    except          reduce using rule 234 (EXP -> cadenaString .)
    order           reduce using rule 234 (EXP -> cadenaString .)
    limit           reduce using rule 234 (EXP -> cadenaString .)
    offset          reduce using rule 234 (EXP -> cadenaString .)
    ptcoma          reduce using rule 234 (EXP -> cadenaString .)
    mas             reduce using rule 234 (EXP -> cadenaString .)
    menos           reduce using rule 234 (EXP -> cadenaString .)
    multiplicacion  reduce using rule 234 (EXP -> cadenaString .)
    division        reduce using rule 234 (EXP -> cadenaString .)
    modulo          reduce using rule 234 (EXP -> cadenaString .)
    elevado         reduce using rule 234 (EXP -> cadenaString .)
    and             reduce using rule 234 (EXP -> cadenaString .)
    or              reduce using rule 234 (EXP -> cadenaString .)
    mayor           reduce using rule 234 (EXP -> cadenaString .)
    menor           reduce using rule 234 (EXP -> cadenaString .)
    mayor_igual     reduce using rule 234 (EXP -> cadenaString .)
    menor_igual     reduce using rule 234 (EXP -> cadenaString .)
    igual           reduce using rule 234 (EXP -> cadenaString .)
    diferente1      reduce using rule 234 (EXP -> cadenaString .)
    diferente2      reduce using rule 234 (EXP -> cadenaString .)
    between         reduce using rule 234 (EXP -> cadenaString .)
    is              reduce using rule 234 (EXP -> cadenaString .)
    not             reduce using rule 234 (EXP -> cadenaString .)
    as              reduce using rule 234 (EXP -> cadenaString .)
    like            reduce using rule 234 (EXP -> cadenaString .)
    isnull          reduce using rule 234 (EXP -> cadenaString .)
    notnull         reduce using rule 234 (EXP -> cadenaString .)
    cadenaString    reduce using rule 234 (EXP -> cadenaString .)
    id              reduce using rule 234 (EXP -> cadenaString .)
    cadena          reduce using rule 234 (EXP -> cadenaString .)
    in              reduce using rule 234 (EXP -> cadenaString .)
    parc            reduce using rule 234 (EXP -> cadenaString .)
    then            reduce using rule 234 (EXP -> cadenaString .)
    end             reduce using rule 234 (EXP -> cadenaString .)
    else            reduce using rule 234 (EXP -> cadenaString .)
    when            reduce using rule 234 (EXP -> cadenaString .)
    constraint      reduce using rule 234 (EXP -> cadenaString .)
    primary         reduce using rule 234 (EXP -> cadenaString .)
    null            reduce using rule 234 (EXP -> cadenaString .)
    unique          reduce using rule 234 (EXP -> cadenaString .)
    references      reduce using rule 234 (EXP -> cadenaString .)
    check           reduce using rule 234 (EXP -> cadenaString .)
    default         reduce using rule 234 (EXP -> cadenaString .)
    asc             reduce using rule 234 (EXP -> cadenaString .)
    desc            reduce using rule 234 (EXP -> cadenaString .)


state 51

    (223) EXP -> para . EXP parc
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 122
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 52

    (221) EXP -> SELECT .

    r_from          reduce using rule 221 (EXP -> SELECT .)
    coma            reduce using rule 221 (EXP -> SELECT .)
    where           reduce using rule 221 (EXP -> SELECT .)
    group           reduce using rule 221 (EXP -> SELECT .)
    having          reduce using rule 221 (EXP -> SELECT .)
    union           reduce using rule 221 (EXP -> SELECT .)
    intersect       reduce using rule 221 (EXP -> SELECT .)
    except          reduce using rule 221 (EXP -> SELECT .)
    order           reduce using rule 221 (EXP -> SELECT .)
    limit           reduce using rule 221 (EXP -> SELECT .)
    offset          reduce using rule 221 (EXP -> SELECT .)
    ptcoma          reduce using rule 221 (EXP -> SELECT .)
    mas             reduce using rule 221 (EXP -> SELECT .)
    menos           reduce using rule 221 (EXP -> SELECT .)
    multiplicacion  reduce using rule 221 (EXP -> SELECT .)
    division        reduce using rule 221 (EXP -> SELECT .)
    modulo          reduce using rule 221 (EXP -> SELECT .)
    elevado         reduce using rule 221 (EXP -> SELECT .)
    and             reduce using rule 221 (EXP -> SELECT .)
    or              reduce using rule 221 (EXP -> SELECT .)
    mayor           reduce using rule 221 (EXP -> SELECT .)
    menor           reduce using rule 221 (EXP -> SELECT .)
    mayor_igual     reduce using rule 221 (EXP -> SELECT .)
    menor_igual     reduce using rule 221 (EXP -> SELECT .)
    igual           reduce using rule 221 (EXP -> SELECT .)
    diferente1      reduce using rule 221 (EXP -> SELECT .)
    diferente2      reduce using rule 221 (EXP -> SELECT .)
    between         reduce using rule 221 (EXP -> SELECT .)
    is              reduce using rule 221 (EXP -> SELECT .)
    not             reduce using rule 221 (EXP -> SELECT .)
    as              reduce using rule 221 (EXP -> SELECT .)
    like            reduce using rule 221 (EXP -> SELECT .)
    isnull          reduce using rule 221 (EXP -> SELECT .)
    notnull         reduce using rule 221 (EXP -> SELECT .)
    cadenaString    reduce using rule 221 (EXP -> SELECT .)
    id              reduce using rule 221 (EXP -> SELECT .)
    cadena          reduce using rule 221 (EXP -> SELECT .)
    in              reduce using rule 221 (EXP -> SELECT .)
    parc            reduce using rule 221 (EXP -> SELECT .)
    then            reduce using rule 221 (EXP -> SELECT .)
    end             reduce using rule 221 (EXP -> SELECT .)
    else            reduce using rule 221 (EXP -> SELECT .)
    when            reduce using rule 221 (EXP -> SELECT .)
    constraint      reduce using rule 221 (EXP -> SELECT .)
    primary         reduce using rule 221 (EXP -> SELECT .)
    null            reduce using rule 221 (EXP -> SELECT .)
    unique          reduce using rule 221 (EXP -> SELECT .)
    references      reduce using rule 221 (EXP -> SELECT .)
    check           reduce using rule 221 (EXP -> SELECT .)
    default         reduce using rule 221 (EXP -> SELECT .)
    asc             reduce using rule 221 (EXP -> SELECT .)
    desc            reduce using rule 221 (EXP -> SELECT .)


state 53

    (222) EXP -> CASE .

    r_from          reduce using rule 222 (EXP -> CASE .)
    coma            reduce using rule 222 (EXP -> CASE .)
    where           reduce using rule 222 (EXP -> CASE .)
    group           reduce using rule 222 (EXP -> CASE .)
    having          reduce using rule 222 (EXP -> CASE .)
    union           reduce using rule 222 (EXP -> CASE .)
    intersect       reduce using rule 222 (EXP -> CASE .)
    except          reduce using rule 222 (EXP -> CASE .)
    order           reduce using rule 222 (EXP -> CASE .)
    limit           reduce using rule 222 (EXP -> CASE .)
    offset          reduce using rule 222 (EXP -> CASE .)
    ptcoma          reduce using rule 222 (EXP -> CASE .)
    mas             reduce using rule 222 (EXP -> CASE .)
    menos           reduce using rule 222 (EXP -> CASE .)
    multiplicacion  reduce using rule 222 (EXP -> CASE .)
    division        reduce using rule 222 (EXP -> CASE .)
    modulo          reduce using rule 222 (EXP -> CASE .)
    elevado         reduce using rule 222 (EXP -> CASE .)
    and             reduce using rule 222 (EXP -> CASE .)
    or              reduce using rule 222 (EXP -> CASE .)
    mayor           reduce using rule 222 (EXP -> CASE .)
    menor           reduce using rule 222 (EXP -> CASE .)
    mayor_igual     reduce using rule 222 (EXP -> CASE .)
    menor_igual     reduce using rule 222 (EXP -> CASE .)
    igual           reduce using rule 222 (EXP -> CASE .)
    diferente1      reduce using rule 222 (EXP -> CASE .)
    diferente2      reduce using rule 222 (EXP -> CASE .)
    between         reduce using rule 222 (EXP -> CASE .)
    is              reduce using rule 222 (EXP -> CASE .)
    not             reduce using rule 222 (EXP -> CASE .)
    as              reduce using rule 222 (EXP -> CASE .)
    like            reduce using rule 222 (EXP -> CASE .)
    isnull          reduce using rule 222 (EXP -> CASE .)
    notnull         reduce using rule 222 (EXP -> CASE .)
    cadenaString    reduce using rule 222 (EXP -> CASE .)
    id              reduce using rule 222 (EXP -> CASE .)
    cadena          reduce using rule 222 (EXP -> CASE .)
    in              reduce using rule 222 (EXP -> CASE .)
    parc            reduce using rule 222 (EXP -> CASE .)
    then            reduce using rule 222 (EXP -> CASE .)
    end             reduce using rule 222 (EXP -> CASE .)
    else            reduce using rule 222 (EXP -> CASE .)
    when            reduce using rule 222 (EXP -> CASE .)
    constraint      reduce using rule 222 (EXP -> CASE .)
    primary         reduce using rule 222 (EXP -> CASE .)
    null            reduce using rule 222 (EXP -> CASE .)
    unique          reduce using rule 222 (EXP -> CASE .)
    references      reduce using rule 222 (EXP -> CASE .)
    check           reduce using rule 222 (EXP -> CASE .)
    default         reduce using rule 222 (EXP -> CASE .)
    asc             reduce using rule 222 (EXP -> CASE .)
    desc            reduce using rule 222 (EXP -> CASE .)


state 54

    (226) EXP -> any . para LEXP parc

    para            shift and go to state 123


state 55

    (227) EXP -> all . para LEXP parc

    para            shift and go to state 124


state 56

    (228) EXP -> some . para LEXP parc

    para            shift and go to state 125


state 57

    (229) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 126


state 58

    (244) EXP -> timestamp . cadena

    cadena          shift and go to state 127


state 59

    (231) EXP -> int .

    r_from          reduce using rule 231 (EXP -> int .)
    coma            reduce using rule 231 (EXP -> int .)
    where           reduce using rule 231 (EXP -> int .)
    group           reduce using rule 231 (EXP -> int .)
    having          reduce using rule 231 (EXP -> int .)
    union           reduce using rule 231 (EXP -> int .)
    intersect       reduce using rule 231 (EXP -> int .)
    except          reduce using rule 231 (EXP -> int .)
    order           reduce using rule 231 (EXP -> int .)
    limit           reduce using rule 231 (EXP -> int .)
    offset          reduce using rule 231 (EXP -> int .)
    ptcoma          reduce using rule 231 (EXP -> int .)
    mas             reduce using rule 231 (EXP -> int .)
    menos           reduce using rule 231 (EXP -> int .)
    multiplicacion  reduce using rule 231 (EXP -> int .)
    division        reduce using rule 231 (EXP -> int .)
    modulo          reduce using rule 231 (EXP -> int .)
    elevado         reduce using rule 231 (EXP -> int .)
    and             reduce using rule 231 (EXP -> int .)
    or              reduce using rule 231 (EXP -> int .)
    mayor           reduce using rule 231 (EXP -> int .)
    menor           reduce using rule 231 (EXP -> int .)
    mayor_igual     reduce using rule 231 (EXP -> int .)
    menor_igual     reduce using rule 231 (EXP -> int .)
    igual           reduce using rule 231 (EXP -> int .)
    diferente1      reduce using rule 231 (EXP -> int .)
    diferente2      reduce using rule 231 (EXP -> int .)
    between         reduce using rule 231 (EXP -> int .)
    is              reduce using rule 231 (EXP -> int .)
    not             reduce using rule 231 (EXP -> int .)
    as              reduce using rule 231 (EXP -> int .)
    like            reduce using rule 231 (EXP -> int .)
    isnull          reduce using rule 231 (EXP -> int .)
    notnull         reduce using rule 231 (EXP -> int .)
    cadenaString    reduce using rule 231 (EXP -> int .)
    id              reduce using rule 231 (EXP -> int .)
    cadena          reduce using rule 231 (EXP -> int .)
    in              reduce using rule 231 (EXP -> int .)
    parc            reduce using rule 231 (EXP -> int .)
    then            reduce using rule 231 (EXP -> int .)
    end             reduce using rule 231 (EXP -> int .)
    else            reduce using rule 231 (EXP -> int .)
    when            reduce using rule 231 (EXP -> int .)
    constraint      reduce using rule 231 (EXP -> int .)
    primary         reduce using rule 231 (EXP -> int .)
    null            reduce using rule 231 (EXP -> int .)
    unique          reduce using rule 231 (EXP -> int .)
    references      reduce using rule 231 (EXP -> int .)
    check           reduce using rule 231 (EXP -> int .)
    default         reduce using rule 231 (EXP -> int .)
    asc             reduce using rule 231 (EXP -> int .)
    desc            reduce using rule 231 (EXP -> int .)


state 60

    (232) EXP -> decimales .

    r_from          reduce using rule 232 (EXP -> decimales .)
    coma            reduce using rule 232 (EXP -> decimales .)
    where           reduce using rule 232 (EXP -> decimales .)
    group           reduce using rule 232 (EXP -> decimales .)
    having          reduce using rule 232 (EXP -> decimales .)
    union           reduce using rule 232 (EXP -> decimales .)
    intersect       reduce using rule 232 (EXP -> decimales .)
    except          reduce using rule 232 (EXP -> decimales .)
    order           reduce using rule 232 (EXP -> decimales .)
    limit           reduce using rule 232 (EXP -> decimales .)
    offset          reduce using rule 232 (EXP -> decimales .)
    ptcoma          reduce using rule 232 (EXP -> decimales .)
    mas             reduce using rule 232 (EXP -> decimales .)
    menos           reduce using rule 232 (EXP -> decimales .)
    multiplicacion  reduce using rule 232 (EXP -> decimales .)
    division        reduce using rule 232 (EXP -> decimales .)
    modulo          reduce using rule 232 (EXP -> decimales .)
    elevado         reduce using rule 232 (EXP -> decimales .)
    and             reduce using rule 232 (EXP -> decimales .)
    or              reduce using rule 232 (EXP -> decimales .)
    mayor           reduce using rule 232 (EXP -> decimales .)
    menor           reduce using rule 232 (EXP -> decimales .)
    mayor_igual     reduce using rule 232 (EXP -> decimales .)
    menor_igual     reduce using rule 232 (EXP -> decimales .)
    igual           reduce using rule 232 (EXP -> decimales .)
    diferente1      reduce using rule 232 (EXP -> decimales .)
    diferente2      reduce using rule 232 (EXP -> decimales .)
    between         reduce using rule 232 (EXP -> decimales .)
    is              reduce using rule 232 (EXP -> decimales .)
    not             reduce using rule 232 (EXP -> decimales .)
    as              reduce using rule 232 (EXP -> decimales .)
    like            reduce using rule 232 (EXP -> decimales .)
    isnull          reduce using rule 232 (EXP -> decimales .)
    notnull         reduce using rule 232 (EXP -> decimales .)
    cadenaString    reduce using rule 232 (EXP -> decimales .)
    id              reduce using rule 232 (EXP -> decimales .)
    cadena          reduce using rule 232 (EXP -> decimales .)
    in              reduce using rule 232 (EXP -> decimales .)
    parc            reduce using rule 232 (EXP -> decimales .)
    then            reduce using rule 232 (EXP -> decimales .)
    end             reduce using rule 232 (EXP -> decimales .)
    else            reduce using rule 232 (EXP -> decimales .)
    when            reduce using rule 232 (EXP -> decimales .)
    constraint      reduce using rule 232 (EXP -> decimales .)
    primary         reduce using rule 232 (EXP -> decimales .)
    null            reduce using rule 232 (EXP -> decimales .)
    unique          reduce using rule 232 (EXP -> decimales .)
    references      reduce using rule 232 (EXP -> decimales .)
    check           reduce using rule 232 (EXP -> decimales .)
    default         reduce using rule 232 (EXP -> decimales .)
    asc             reduce using rule 232 (EXP -> decimales .)
    desc            reduce using rule 232 (EXP -> decimales .)


state 61

    (240) EXP -> idPunto .

    r_from          reduce using rule 240 (EXP -> idPunto .)
    coma            reduce using rule 240 (EXP -> idPunto .)
    where           reduce using rule 240 (EXP -> idPunto .)
    group           reduce using rule 240 (EXP -> idPunto .)
    having          reduce using rule 240 (EXP -> idPunto .)
    union           reduce using rule 240 (EXP -> idPunto .)
    intersect       reduce using rule 240 (EXP -> idPunto .)
    except          reduce using rule 240 (EXP -> idPunto .)
    order           reduce using rule 240 (EXP -> idPunto .)
    limit           reduce using rule 240 (EXP -> idPunto .)
    offset          reduce using rule 240 (EXP -> idPunto .)
    ptcoma          reduce using rule 240 (EXP -> idPunto .)
    mas             reduce using rule 240 (EXP -> idPunto .)
    menos           reduce using rule 240 (EXP -> idPunto .)
    multiplicacion  reduce using rule 240 (EXP -> idPunto .)
    division        reduce using rule 240 (EXP -> idPunto .)
    modulo          reduce using rule 240 (EXP -> idPunto .)
    elevado         reduce using rule 240 (EXP -> idPunto .)
    and             reduce using rule 240 (EXP -> idPunto .)
    or              reduce using rule 240 (EXP -> idPunto .)
    mayor           reduce using rule 240 (EXP -> idPunto .)
    menor           reduce using rule 240 (EXP -> idPunto .)
    mayor_igual     reduce using rule 240 (EXP -> idPunto .)
    menor_igual     reduce using rule 240 (EXP -> idPunto .)
    igual           reduce using rule 240 (EXP -> idPunto .)
    diferente1      reduce using rule 240 (EXP -> idPunto .)
    diferente2      reduce using rule 240 (EXP -> idPunto .)
    between         reduce using rule 240 (EXP -> idPunto .)
    is              reduce using rule 240 (EXP -> idPunto .)
    not             reduce using rule 240 (EXP -> idPunto .)
    as              reduce using rule 240 (EXP -> idPunto .)
    like            reduce using rule 240 (EXP -> idPunto .)
    isnull          reduce using rule 240 (EXP -> idPunto .)
    notnull         reduce using rule 240 (EXP -> idPunto .)
    cadenaString    reduce using rule 240 (EXP -> idPunto .)
    id              reduce using rule 240 (EXP -> idPunto .)
    cadena          reduce using rule 240 (EXP -> idPunto .)
    in              reduce using rule 240 (EXP -> idPunto .)
    parc            reduce using rule 240 (EXP -> idPunto .)
    then            reduce using rule 240 (EXP -> idPunto .)
    end             reduce using rule 240 (EXP -> idPunto .)
    else            reduce using rule 240 (EXP -> idPunto .)
    when            reduce using rule 240 (EXP -> idPunto .)
    constraint      reduce using rule 240 (EXP -> idPunto .)
    primary         reduce using rule 240 (EXP -> idPunto .)
    null            reduce using rule 240 (EXP -> idPunto .)
    unique          reduce using rule 240 (EXP -> idPunto .)
    references      reduce using rule 240 (EXP -> idPunto .)
    check           reduce using rule 240 (EXP -> idPunto .)
    default         reduce using rule 240 (EXP -> idPunto .)
    asc             reduce using rule 240 (EXP -> idPunto .)
    desc            reduce using rule 240 (EXP -> idPunto .)


state 62

    (241) EXP -> default .

    r_from          reduce using rule 241 (EXP -> default .)
    coma            reduce using rule 241 (EXP -> default .)
    where           reduce using rule 241 (EXP -> default .)
    group           reduce using rule 241 (EXP -> default .)
    having          reduce using rule 241 (EXP -> default .)
    union           reduce using rule 241 (EXP -> default .)
    intersect       reduce using rule 241 (EXP -> default .)
    except          reduce using rule 241 (EXP -> default .)
    order           reduce using rule 241 (EXP -> default .)
    limit           reduce using rule 241 (EXP -> default .)
    offset          reduce using rule 241 (EXP -> default .)
    ptcoma          reduce using rule 241 (EXP -> default .)
    mas             reduce using rule 241 (EXP -> default .)
    menos           reduce using rule 241 (EXP -> default .)
    multiplicacion  reduce using rule 241 (EXP -> default .)
    division        reduce using rule 241 (EXP -> default .)
    modulo          reduce using rule 241 (EXP -> default .)
    elevado         reduce using rule 241 (EXP -> default .)
    and             reduce using rule 241 (EXP -> default .)
    or              reduce using rule 241 (EXP -> default .)
    mayor           reduce using rule 241 (EXP -> default .)
    menor           reduce using rule 241 (EXP -> default .)
    mayor_igual     reduce using rule 241 (EXP -> default .)
    menor_igual     reduce using rule 241 (EXP -> default .)
    igual           reduce using rule 241 (EXP -> default .)
    diferente1      reduce using rule 241 (EXP -> default .)
    diferente2      reduce using rule 241 (EXP -> default .)
    between         reduce using rule 241 (EXP -> default .)
    is              reduce using rule 241 (EXP -> default .)
    not             reduce using rule 241 (EXP -> default .)
    as              reduce using rule 241 (EXP -> default .)
    like            reduce using rule 241 (EXP -> default .)
    isnull          reduce using rule 241 (EXP -> default .)
    notnull         reduce using rule 241 (EXP -> default .)
    cadenaString    reduce using rule 241 (EXP -> default .)
    id              reduce using rule 241 (EXP -> default .)
    cadena          reduce using rule 241 (EXP -> default .)
    in              reduce using rule 241 (EXP -> default .)
    parc            reduce using rule 241 (EXP -> default .)
    then            reduce using rule 241 (EXP -> default .)
    end             reduce using rule 241 (EXP -> default .)
    else            reduce using rule 241 (EXP -> default .)
    when            reduce using rule 241 (EXP -> default .)
    constraint      reduce using rule 241 (EXP -> default .)
    primary         reduce using rule 241 (EXP -> default .)
    null            reduce using rule 241 (EXP -> default .)
    unique          reduce using rule 241 (EXP -> default .)
    references      reduce using rule 241 (EXP -> default .)
    check           reduce using rule 241 (EXP -> default .)
    default         reduce using rule 241 (EXP -> default .)
    asc             reduce using rule 241 (EXP -> default .)
    desc            reduce using rule 241 (EXP -> default .)


state 63

    (242) EXP -> current_time .

    r_from          reduce using rule 242 (EXP -> current_time .)
    coma            reduce using rule 242 (EXP -> current_time .)
    where           reduce using rule 242 (EXP -> current_time .)
    group           reduce using rule 242 (EXP -> current_time .)
    having          reduce using rule 242 (EXP -> current_time .)
    union           reduce using rule 242 (EXP -> current_time .)
    intersect       reduce using rule 242 (EXP -> current_time .)
    except          reduce using rule 242 (EXP -> current_time .)
    order           reduce using rule 242 (EXP -> current_time .)
    limit           reduce using rule 242 (EXP -> current_time .)
    offset          reduce using rule 242 (EXP -> current_time .)
    ptcoma          reduce using rule 242 (EXP -> current_time .)
    mas             reduce using rule 242 (EXP -> current_time .)
    menos           reduce using rule 242 (EXP -> current_time .)
    multiplicacion  reduce using rule 242 (EXP -> current_time .)
    division        reduce using rule 242 (EXP -> current_time .)
    modulo          reduce using rule 242 (EXP -> current_time .)
    elevado         reduce using rule 242 (EXP -> current_time .)
    and             reduce using rule 242 (EXP -> current_time .)
    or              reduce using rule 242 (EXP -> current_time .)
    mayor           reduce using rule 242 (EXP -> current_time .)
    menor           reduce using rule 242 (EXP -> current_time .)
    mayor_igual     reduce using rule 242 (EXP -> current_time .)
    menor_igual     reduce using rule 242 (EXP -> current_time .)
    igual           reduce using rule 242 (EXP -> current_time .)
    diferente1      reduce using rule 242 (EXP -> current_time .)
    diferente2      reduce using rule 242 (EXP -> current_time .)
    between         reduce using rule 242 (EXP -> current_time .)
    is              reduce using rule 242 (EXP -> current_time .)
    not             reduce using rule 242 (EXP -> current_time .)
    as              reduce using rule 242 (EXP -> current_time .)
    like            reduce using rule 242 (EXP -> current_time .)
    isnull          reduce using rule 242 (EXP -> current_time .)
    notnull         reduce using rule 242 (EXP -> current_time .)
    cadenaString    reduce using rule 242 (EXP -> current_time .)
    id              reduce using rule 242 (EXP -> current_time .)
    cadena          reduce using rule 242 (EXP -> current_time .)
    in              reduce using rule 242 (EXP -> current_time .)
    parc            reduce using rule 242 (EXP -> current_time .)
    then            reduce using rule 242 (EXP -> current_time .)
    end             reduce using rule 242 (EXP -> current_time .)
    else            reduce using rule 242 (EXP -> current_time .)
    when            reduce using rule 242 (EXP -> current_time .)
    constraint      reduce using rule 242 (EXP -> current_time .)
    primary         reduce using rule 242 (EXP -> current_time .)
    null            reduce using rule 242 (EXP -> current_time .)
    unique          reduce using rule 242 (EXP -> current_time .)
    references      reduce using rule 242 (EXP -> current_time .)
    check           reduce using rule 242 (EXP -> current_time .)
    default         reduce using rule 242 (EXP -> current_time .)
    asc             reduce using rule 242 (EXP -> current_time .)
    desc            reduce using rule 242 (EXP -> current_time .)


state 64

    (243) EXP -> current_date .

    r_from          reduce using rule 243 (EXP -> current_date .)
    coma            reduce using rule 243 (EXP -> current_date .)
    where           reduce using rule 243 (EXP -> current_date .)
    group           reduce using rule 243 (EXP -> current_date .)
    having          reduce using rule 243 (EXP -> current_date .)
    union           reduce using rule 243 (EXP -> current_date .)
    intersect       reduce using rule 243 (EXP -> current_date .)
    except          reduce using rule 243 (EXP -> current_date .)
    order           reduce using rule 243 (EXP -> current_date .)
    limit           reduce using rule 243 (EXP -> current_date .)
    offset          reduce using rule 243 (EXP -> current_date .)
    ptcoma          reduce using rule 243 (EXP -> current_date .)
    mas             reduce using rule 243 (EXP -> current_date .)
    menos           reduce using rule 243 (EXP -> current_date .)
    multiplicacion  reduce using rule 243 (EXP -> current_date .)
    division        reduce using rule 243 (EXP -> current_date .)
    modulo          reduce using rule 243 (EXP -> current_date .)
    elevado         reduce using rule 243 (EXP -> current_date .)
    and             reduce using rule 243 (EXP -> current_date .)
    or              reduce using rule 243 (EXP -> current_date .)
    mayor           reduce using rule 243 (EXP -> current_date .)
    menor           reduce using rule 243 (EXP -> current_date .)
    mayor_igual     reduce using rule 243 (EXP -> current_date .)
    menor_igual     reduce using rule 243 (EXP -> current_date .)
    igual           reduce using rule 243 (EXP -> current_date .)
    diferente1      reduce using rule 243 (EXP -> current_date .)
    diferente2      reduce using rule 243 (EXP -> current_date .)
    between         reduce using rule 243 (EXP -> current_date .)
    is              reduce using rule 243 (EXP -> current_date .)
    not             reduce using rule 243 (EXP -> current_date .)
    as              reduce using rule 243 (EXP -> current_date .)
    like            reduce using rule 243 (EXP -> current_date .)
    isnull          reduce using rule 243 (EXP -> current_date .)
    notnull         reduce using rule 243 (EXP -> current_date .)
    cadenaString    reduce using rule 243 (EXP -> current_date .)
    id              reduce using rule 243 (EXP -> current_date .)
    cadena          reduce using rule 243 (EXP -> current_date .)
    in              reduce using rule 243 (EXP -> current_date .)
    parc            reduce using rule 243 (EXP -> current_date .)
    then            reduce using rule 243 (EXP -> current_date .)
    end             reduce using rule 243 (EXP -> current_date .)
    else            reduce using rule 243 (EXP -> current_date .)
    when            reduce using rule 243 (EXP -> current_date .)
    constraint      reduce using rule 243 (EXP -> current_date .)
    primary         reduce using rule 243 (EXP -> current_date .)
    null            reduce using rule 243 (EXP -> current_date .)
    unique          reduce using rule 243 (EXP -> current_date .)
    references      reduce using rule 243 (EXP -> current_date .)
    check           reduce using rule 243 (EXP -> current_date .)
    default         reduce using rule 243 (EXP -> current_date .)
    asc             reduce using rule 243 (EXP -> current_date .)
    desc            reduce using rule 243 (EXP -> current_date .)


state 65

    (245) EXP -> interval . cadena

    cadena          shift and go to state 128


state 66

    (69) CREATETABLE -> create table . id para LDEF parc ptcoma
    (70) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 129


state 67

    (100) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 130


state 68

    (52) CREATEDB -> create RD . if not exist id
    (53) CREATEDB -> create RD . if not exist id OPCCDB
    (54) CREATEDB -> create RD . id
    (55) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 131
    id              shift and go to state 132


state 69

    (59) RD -> or . replace databases

    replace         shift and go to state 133


state 70

    (60) RD -> databases .

    if              reduce using rule 60 (RD -> databases .)
    id              reduce using rule 60 (RD -> databases .)


state 71

    (129) UPDATE -> update id . set LCAMPOS where LEXP

    set             shift and go to state 134


state 72

    (132) DELETE -> delete r_from . EXP WHERE
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 135
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 73

    (29) ALTER -> alter databases . id RO

    id              shift and go to state 136


state 74

    (30) ALTER -> alter table . id LOP

    id              shift and go to state 137


state 75

    (25) DROP -> drop all . para parc

    para            shift and go to state 138


state 76

    (26) DROP -> drop table . id

    id              shift and go to state 139


state 77

    (27) DROP -> drop databases . id
    (28) DROP -> drop databases . if exist id

    id              shift and go to state 140
    if              shift and go to state 141


state 78

    (23) INSERT -> insert into . id values para LEXP parc
    (24) INSERT -> insert into . id para LEXP parc values para LEXP parc

    id              shift and go to state 142


state 79

    (17) CASE -> case LISTAWHEN . ELSE end
    (18) CASE -> case LISTAWHEN . end
    (19) LISTAWHEN -> LISTAWHEN . WHEN
    (22) ELSE -> . else LEXP
    (21) WHEN -> . when LEXP then LEXP

    end             shift and go to state 144
    else            shift and go to state 146
    when            shift and go to state 81

    ELSE                           shift and go to state 143
    WHEN                           shift and go to state 145

state 80

    (20) LISTAWHEN -> WHEN .

    end             reduce using rule 20 (LISTAWHEN -> WHEN .)
    else            reduce using rule 20 (LISTAWHEN -> WHEN .)
    when            reduce using rule 20 (LISTAWHEN -> WHEN .)


state 81

    (21) WHEN -> when . LEXP then LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 147
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 82

    (49) SHOWDB -> show dbs .

    ptcoma          reduce using rule 49 (SHOWDB -> show dbs .)


state 83

    (50) SHOW -> show tables . para id parc

    para            shift and go to state 148


state 84

    (51) SHOW -> show collection . para parc

    para            shift and go to state 149


state 85

    (16) instruccion -> use id ptcoma .

    use             reduce using rule 16 (instruccion -> use id ptcoma .)
    select          reduce using rule 16 (instruccion -> use id ptcoma .)
    create          reduce using rule 16 (instruccion -> use id ptcoma .)
    update          reduce using rule 16 (instruccion -> use id ptcoma .)
    delete          reduce using rule 16 (instruccion -> use id ptcoma .)
    alter           reduce using rule 16 (instruccion -> use id ptcoma .)
    drop            reduce using rule 16 (instruccion -> use id ptcoma .)
    insert          reduce using rule 16 (instruccion -> use id ptcoma .)
    case            reduce using rule 16 (instruccion -> use id ptcoma .)
    show            reduce using rule 16 (instruccion -> use id ptcoma .)
    $end            reduce using rule 16 (instruccion -> use id ptcoma .)


state 86

    (101) SELECT -> select distinct LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> LEXP . coma EXP

    r_from          shift and go to state 150
    coma            shift and go to state 89


state 87

    (102) SELECT -> select LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 151
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 88

    (103) SELECT -> select LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (120) GROUP -> . group by LEXP
    (121) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 153
    r_from          reduce using rule 121 (GROUP -> .)
    coma            reduce using rule 121 (GROUP -> .)
    where           reduce using rule 121 (GROUP -> .)
    having          reduce using rule 121 (GROUP -> .)
    union           reduce using rule 121 (GROUP -> .)
    intersect       reduce using rule 121 (GROUP -> .)
    except          reduce using rule 121 (GROUP -> .)
    order           reduce using rule 121 (GROUP -> .)
    limit           reduce using rule 121 (GROUP -> .)
    offset          reduce using rule 121 (GROUP -> .)
    ptcoma          reduce using rule 121 (GROUP -> .)
    mas             reduce using rule 121 (GROUP -> .)
    menos           reduce using rule 121 (GROUP -> .)
    multiplicacion  reduce using rule 121 (GROUP -> .)
    division        reduce using rule 121 (GROUP -> .)
    modulo          reduce using rule 121 (GROUP -> .)
    elevado         reduce using rule 121 (GROUP -> .)
    and             reduce using rule 121 (GROUP -> .)
    or              reduce using rule 121 (GROUP -> .)
    mayor           reduce using rule 121 (GROUP -> .)
    menor           reduce using rule 121 (GROUP -> .)
    mayor_igual     reduce using rule 121 (GROUP -> .)
    menor_igual     reduce using rule 121 (GROUP -> .)
    igual           reduce using rule 121 (GROUP -> .)
    diferente1      reduce using rule 121 (GROUP -> .)
    diferente2      reduce using rule 121 (GROUP -> .)
    between         reduce using rule 121 (GROUP -> .)
    is              reduce using rule 121 (GROUP -> .)
    not             reduce using rule 121 (GROUP -> .)
    as              reduce using rule 121 (GROUP -> .)
    like            reduce using rule 121 (GROUP -> .)
    isnull          reduce using rule 121 (GROUP -> .)
    notnull         reduce using rule 121 (GROUP -> .)
    cadenaString    reduce using rule 121 (GROUP -> .)
    id              reduce using rule 121 (GROUP -> .)
    cadena          reduce using rule 121 (GROUP -> .)
    in              reduce using rule 121 (GROUP -> .)
    parc            reduce using rule 121 (GROUP -> .)
    then            reduce using rule 121 (GROUP -> .)
    end             reduce using rule 121 (GROUP -> .)
    else            reduce using rule 121 (GROUP -> .)
    when            reduce using rule 121 (GROUP -> .)
    constraint      reduce using rule 121 (GROUP -> .)
    primary         reduce using rule 121 (GROUP -> .)
    null            reduce using rule 121 (GROUP -> .)
    unique          reduce using rule 121 (GROUP -> .)
    references      reduce using rule 121 (GROUP -> .)
    check           reduce using rule 121 (GROUP -> .)
    default         reduce using rule 121 (GROUP -> .)
    asc             reduce using rule 121 (GROUP -> .)
    desc            reduce using rule 121 (GROUP -> .)

  ! group           [ reduce using rule 121 (GROUP -> .) ]

    GROUP                          shift and go to state 152

state 89

    (135) LEXP -> LEXP coma . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 154
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 90

    (112) WHERE -> where . EXP
    (114) WHERE -> where . EXIST
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (133) EXIST -> . exist para SELECT parc
    (134) EXIST -> . not exist para SELECT parc
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 157
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    exist           shift and go to state 158
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 155
    EXIST                          shift and go to state 156
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 91

    (177) EXP -> EXP mas . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 159
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 92

    (178) EXP -> EXP menos . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 160
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 93

    (179) EXP -> EXP multiplicacion . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 161
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 94

    (180) EXP -> EXP division . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 162
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 95

    (181) EXP -> EXP modulo . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 163
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 96

    (182) EXP -> EXP elevado . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 164
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 97

    (183) EXP -> EXP and . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 165
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 98

    (184) EXP -> EXP or . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 166
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 99

    (185) EXP -> EXP mayor . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 167
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 100

    (186) EXP -> EXP menor . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 168
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 101

    (187) EXP -> EXP mayor_igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 169
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 102

    (188) EXP -> EXP menor_igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 170
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 103

    (189) EXP -> EXP igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 171
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 104

    (190) EXP -> EXP diferente1 . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 172
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 105

    (191) EXP -> EXP diferente2 . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 173
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 106

    (192) EXP -> EXP between . EXP
    (215) EXP -> EXP between . symetric EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 175
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 174
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 107

    (193) EXP -> EXP is . not null
    (194) EXP -> EXP is . not true
    (195) EXP -> EXP is . not false
    (196) EXP -> EXP is . not unknown
    (198) EXP -> EXP is . null
    (199) EXP -> EXP is . true
    (200) EXP -> EXP is . unknown
    (205) EXP -> EXP is . false
    (218) EXP -> EXP is . not distinct r_from EXP
    (219) EXP -> EXP is . distinct r_from EXP

    not             shift and go to state 176
    null            shift and go to state 177
    true            shift and go to state 178
    unknown         shift and go to state 180
    false           shift and go to state 179
    distinct        shift and go to state 181


state 108

    (197) EXP -> EXP not . like cadena
    (214) EXP -> EXP not . between EXP
    (217) EXP -> EXP not . in para LEXP parc
    (220) EXP -> EXP not . between symetric EXP

    like            shift and go to state 182
    between         shift and go to state 183
    in              shift and go to state 184


state 109

    (204) EXP -> EXP like . cadena

    cadena          shift and go to state 185


state 110

    (210) EXP -> EXP cadena .

    r_from          reduce using rule 210 (EXP -> EXP cadena .)
    coma            reduce using rule 210 (EXP -> EXP cadena .)
    where           reduce using rule 210 (EXP -> EXP cadena .)
    group           reduce using rule 210 (EXP -> EXP cadena .)
    having          reduce using rule 210 (EXP -> EXP cadena .)
    union           reduce using rule 210 (EXP -> EXP cadena .)
    intersect       reduce using rule 210 (EXP -> EXP cadena .)
    except          reduce using rule 210 (EXP -> EXP cadena .)
    order           reduce using rule 210 (EXP -> EXP cadena .)
    limit           reduce using rule 210 (EXP -> EXP cadena .)
    offset          reduce using rule 210 (EXP -> EXP cadena .)
    ptcoma          reduce using rule 210 (EXP -> EXP cadena .)
    mas             reduce using rule 210 (EXP -> EXP cadena .)
    menos           reduce using rule 210 (EXP -> EXP cadena .)
    multiplicacion  reduce using rule 210 (EXP -> EXP cadena .)
    division        reduce using rule 210 (EXP -> EXP cadena .)
    modulo          reduce using rule 210 (EXP -> EXP cadena .)
    elevado         reduce using rule 210 (EXP -> EXP cadena .)
    and             reduce using rule 210 (EXP -> EXP cadena .)
    or              reduce using rule 210 (EXP -> EXP cadena .)
    mayor           reduce using rule 210 (EXP -> EXP cadena .)
    menor           reduce using rule 210 (EXP -> EXP cadena .)
    mayor_igual     reduce using rule 210 (EXP -> EXP cadena .)
    menor_igual     reduce using rule 210 (EXP -> EXP cadena .)
    igual           reduce using rule 210 (EXP -> EXP cadena .)
    diferente1      reduce using rule 210 (EXP -> EXP cadena .)
    diferente2      reduce using rule 210 (EXP -> EXP cadena .)
    between         reduce using rule 210 (EXP -> EXP cadena .)
    is              reduce using rule 210 (EXP -> EXP cadena .)
    not             reduce using rule 210 (EXP -> EXP cadena .)
    as              reduce using rule 210 (EXP -> EXP cadena .)
    like            reduce using rule 210 (EXP -> EXP cadena .)
    isnull          reduce using rule 210 (EXP -> EXP cadena .)
    notnull         reduce using rule 210 (EXP -> EXP cadena .)
    cadenaString    reduce using rule 210 (EXP -> EXP cadena .)
    id              reduce using rule 210 (EXP -> EXP cadena .)
    cadena          reduce using rule 210 (EXP -> EXP cadena .)
    in              reduce using rule 210 (EXP -> EXP cadena .)
    parc            reduce using rule 210 (EXP -> EXP cadena .)
    then            reduce using rule 210 (EXP -> EXP cadena .)
    end             reduce using rule 210 (EXP -> EXP cadena .)
    else            reduce using rule 210 (EXP -> EXP cadena .)
    when            reduce using rule 210 (EXP -> EXP cadena .)
    constraint      reduce using rule 210 (EXP -> EXP cadena .)
    primary         reduce using rule 210 (EXP -> EXP cadena .)
    null            reduce using rule 210 (EXP -> EXP cadena .)
    unique          reduce using rule 210 (EXP -> EXP cadena .)
    references      reduce using rule 210 (EXP -> EXP cadena .)
    check           reduce using rule 210 (EXP -> EXP cadena .)
    default         reduce using rule 210 (EXP -> EXP cadena .)
    asc             reduce using rule 210 (EXP -> EXP cadena .)
    desc            reduce using rule 210 (EXP -> EXP cadena .)


state 111

    (201) EXP -> EXP as . cadena
    (202) EXP -> EXP as . id
    (203) EXP -> EXP as . cadenaString

    cadena          shift and go to state 186
    id              shift and go to state 187
    cadenaString    shift and go to state 188


state 112

    (209) EXP -> EXP id .

    r_from          reduce using rule 209 (EXP -> EXP id .)
    coma            reduce using rule 209 (EXP -> EXP id .)
    where           reduce using rule 209 (EXP -> EXP id .)
    group           reduce using rule 209 (EXP -> EXP id .)
    having          reduce using rule 209 (EXP -> EXP id .)
    union           reduce using rule 209 (EXP -> EXP id .)
    intersect       reduce using rule 209 (EXP -> EXP id .)
    except          reduce using rule 209 (EXP -> EXP id .)
    order           reduce using rule 209 (EXP -> EXP id .)
    limit           reduce using rule 209 (EXP -> EXP id .)
    offset          reduce using rule 209 (EXP -> EXP id .)
    ptcoma          reduce using rule 209 (EXP -> EXP id .)
    mas             reduce using rule 209 (EXP -> EXP id .)
    menos           reduce using rule 209 (EXP -> EXP id .)
    multiplicacion  reduce using rule 209 (EXP -> EXP id .)
    division        reduce using rule 209 (EXP -> EXP id .)
    modulo          reduce using rule 209 (EXP -> EXP id .)
    elevado         reduce using rule 209 (EXP -> EXP id .)
    and             reduce using rule 209 (EXP -> EXP id .)
    or              reduce using rule 209 (EXP -> EXP id .)
    mayor           reduce using rule 209 (EXP -> EXP id .)
    menor           reduce using rule 209 (EXP -> EXP id .)
    mayor_igual     reduce using rule 209 (EXP -> EXP id .)
    menor_igual     reduce using rule 209 (EXP -> EXP id .)
    igual           reduce using rule 209 (EXP -> EXP id .)
    diferente1      reduce using rule 209 (EXP -> EXP id .)
    diferente2      reduce using rule 209 (EXP -> EXP id .)
    between         reduce using rule 209 (EXP -> EXP id .)
    is              reduce using rule 209 (EXP -> EXP id .)
    not             reduce using rule 209 (EXP -> EXP id .)
    as              reduce using rule 209 (EXP -> EXP id .)
    like            reduce using rule 209 (EXP -> EXP id .)
    isnull          reduce using rule 209 (EXP -> EXP id .)
    notnull         reduce using rule 209 (EXP -> EXP id .)
    cadenaString    reduce using rule 209 (EXP -> EXP id .)
    id              reduce using rule 209 (EXP -> EXP id .)
    cadena          reduce using rule 209 (EXP -> EXP id .)
    in              reduce using rule 209 (EXP -> EXP id .)
    parc            reduce using rule 209 (EXP -> EXP id .)
    then            reduce using rule 209 (EXP -> EXP id .)
    end             reduce using rule 209 (EXP -> EXP id .)
    else            reduce using rule 209 (EXP -> EXP id .)
    when            reduce using rule 209 (EXP -> EXP id .)
    constraint      reduce using rule 209 (EXP -> EXP id .)
    primary         reduce using rule 209 (EXP -> EXP id .)
    null            reduce using rule 209 (EXP -> EXP id .)
    unique          reduce using rule 209 (EXP -> EXP id .)
    references      reduce using rule 209 (EXP -> EXP id .)
    check           reduce using rule 209 (EXP -> EXP id .)
    default         reduce using rule 209 (EXP -> EXP id .)
    asc             reduce using rule 209 (EXP -> EXP id .)
    desc            reduce using rule 209 (EXP -> EXP id .)


state 113

    (208) EXP -> EXP cadenaString .

    r_from          reduce using rule 208 (EXP -> EXP cadenaString .)
    coma            reduce using rule 208 (EXP -> EXP cadenaString .)
    where           reduce using rule 208 (EXP -> EXP cadenaString .)
    group           reduce using rule 208 (EXP -> EXP cadenaString .)
    having          reduce using rule 208 (EXP -> EXP cadenaString .)
    union           reduce using rule 208 (EXP -> EXP cadenaString .)
    intersect       reduce using rule 208 (EXP -> EXP cadenaString .)
    except          reduce using rule 208 (EXP -> EXP cadenaString .)
    order           reduce using rule 208 (EXP -> EXP cadenaString .)
    limit           reduce using rule 208 (EXP -> EXP cadenaString .)
    offset          reduce using rule 208 (EXP -> EXP cadenaString .)
    ptcoma          reduce using rule 208 (EXP -> EXP cadenaString .)
    mas             reduce using rule 208 (EXP -> EXP cadenaString .)
    menos           reduce using rule 208 (EXP -> EXP cadenaString .)
    multiplicacion  reduce using rule 208 (EXP -> EXP cadenaString .)
    division        reduce using rule 208 (EXP -> EXP cadenaString .)
    modulo          reduce using rule 208 (EXP -> EXP cadenaString .)
    elevado         reduce using rule 208 (EXP -> EXP cadenaString .)
    and             reduce using rule 208 (EXP -> EXP cadenaString .)
    or              reduce using rule 208 (EXP -> EXP cadenaString .)
    mayor           reduce using rule 208 (EXP -> EXP cadenaString .)
    menor           reduce using rule 208 (EXP -> EXP cadenaString .)
    mayor_igual     reduce using rule 208 (EXP -> EXP cadenaString .)
    menor_igual     reduce using rule 208 (EXP -> EXP cadenaString .)
    igual           reduce using rule 208 (EXP -> EXP cadenaString .)
    diferente1      reduce using rule 208 (EXP -> EXP cadenaString .)
    diferente2      reduce using rule 208 (EXP -> EXP cadenaString .)
    between         reduce using rule 208 (EXP -> EXP cadenaString .)
    is              reduce using rule 208 (EXP -> EXP cadenaString .)
    not             reduce using rule 208 (EXP -> EXP cadenaString .)
    as              reduce using rule 208 (EXP -> EXP cadenaString .)
    like            reduce using rule 208 (EXP -> EXP cadenaString .)
    isnull          reduce using rule 208 (EXP -> EXP cadenaString .)
    notnull         reduce using rule 208 (EXP -> EXP cadenaString .)
    cadenaString    reduce using rule 208 (EXP -> EXP cadenaString .)
    id              reduce using rule 208 (EXP -> EXP cadenaString .)
    cadena          reduce using rule 208 (EXP -> EXP cadenaString .)
    in              reduce using rule 208 (EXP -> EXP cadenaString .)
    parc            reduce using rule 208 (EXP -> EXP cadenaString .)
    then            reduce using rule 208 (EXP -> EXP cadenaString .)
    end             reduce using rule 208 (EXP -> EXP cadenaString .)
    else            reduce using rule 208 (EXP -> EXP cadenaString .)
    when            reduce using rule 208 (EXP -> EXP cadenaString .)
    constraint      reduce using rule 208 (EXP -> EXP cadenaString .)
    primary         reduce using rule 208 (EXP -> EXP cadenaString .)
    null            reduce using rule 208 (EXP -> EXP cadenaString .)
    unique          reduce using rule 208 (EXP -> EXP cadenaString .)
    references      reduce using rule 208 (EXP -> EXP cadenaString .)
    check           reduce using rule 208 (EXP -> EXP cadenaString .)
    default         reduce using rule 208 (EXP -> EXP cadenaString .)
    asc             reduce using rule 208 (EXP -> EXP cadenaString .)
    desc            reduce using rule 208 (EXP -> EXP cadenaString .)


state 114

    (206) EXP -> EXP isnull .

    r_from          reduce using rule 206 (EXP -> EXP isnull .)
    coma            reduce using rule 206 (EXP -> EXP isnull .)
    where           reduce using rule 206 (EXP -> EXP isnull .)
    group           reduce using rule 206 (EXP -> EXP isnull .)
    having          reduce using rule 206 (EXP -> EXP isnull .)
    union           reduce using rule 206 (EXP -> EXP isnull .)
    intersect       reduce using rule 206 (EXP -> EXP isnull .)
    except          reduce using rule 206 (EXP -> EXP isnull .)
    order           reduce using rule 206 (EXP -> EXP isnull .)
    limit           reduce using rule 206 (EXP -> EXP isnull .)
    offset          reduce using rule 206 (EXP -> EXP isnull .)
    ptcoma          reduce using rule 206 (EXP -> EXP isnull .)
    mas             reduce using rule 206 (EXP -> EXP isnull .)
    menos           reduce using rule 206 (EXP -> EXP isnull .)
    multiplicacion  reduce using rule 206 (EXP -> EXP isnull .)
    division        reduce using rule 206 (EXP -> EXP isnull .)
    modulo          reduce using rule 206 (EXP -> EXP isnull .)
    elevado         reduce using rule 206 (EXP -> EXP isnull .)
    and             reduce using rule 206 (EXP -> EXP isnull .)
    or              reduce using rule 206 (EXP -> EXP isnull .)
    mayor           reduce using rule 206 (EXP -> EXP isnull .)
    menor           reduce using rule 206 (EXP -> EXP isnull .)
    mayor_igual     reduce using rule 206 (EXP -> EXP isnull .)
    menor_igual     reduce using rule 206 (EXP -> EXP isnull .)
    igual           reduce using rule 206 (EXP -> EXP isnull .)
    diferente1      reduce using rule 206 (EXP -> EXP isnull .)
    diferente2      reduce using rule 206 (EXP -> EXP isnull .)
    between         reduce using rule 206 (EXP -> EXP isnull .)
    is              reduce using rule 206 (EXP -> EXP isnull .)
    not             reduce using rule 206 (EXP -> EXP isnull .)
    as              reduce using rule 206 (EXP -> EXP isnull .)
    like            reduce using rule 206 (EXP -> EXP isnull .)
    isnull          reduce using rule 206 (EXP -> EXP isnull .)
    notnull         reduce using rule 206 (EXP -> EXP isnull .)
    cadenaString    reduce using rule 206 (EXP -> EXP isnull .)
    id              reduce using rule 206 (EXP -> EXP isnull .)
    cadena          reduce using rule 206 (EXP -> EXP isnull .)
    in              reduce using rule 206 (EXP -> EXP isnull .)
    parc            reduce using rule 206 (EXP -> EXP isnull .)
    then            reduce using rule 206 (EXP -> EXP isnull .)
    end             reduce using rule 206 (EXP -> EXP isnull .)
    else            reduce using rule 206 (EXP -> EXP isnull .)
    when            reduce using rule 206 (EXP -> EXP isnull .)
    constraint      reduce using rule 206 (EXP -> EXP isnull .)
    primary         reduce using rule 206 (EXP -> EXP isnull .)
    null            reduce using rule 206 (EXP -> EXP isnull .)
    unique          reduce using rule 206 (EXP -> EXP isnull .)
    references      reduce using rule 206 (EXP -> EXP isnull .)
    check           reduce using rule 206 (EXP -> EXP isnull .)
    default         reduce using rule 206 (EXP -> EXP isnull .)
    asc             reduce using rule 206 (EXP -> EXP isnull .)
    desc            reduce using rule 206 (EXP -> EXP isnull .)


state 115

    (207) EXP -> EXP notnull .

    r_from          reduce using rule 207 (EXP -> EXP notnull .)
    coma            reduce using rule 207 (EXP -> EXP notnull .)
    where           reduce using rule 207 (EXP -> EXP notnull .)
    group           reduce using rule 207 (EXP -> EXP notnull .)
    having          reduce using rule 207 (EXP -> EXP notnull .)
    union           reduce using rule 207 (EXP -> EXP notnull .)
    intersect       reduce using rule 207 (EXP -> EXP notnull .)
    except          reduce using rule 207 (EXP -> EXP notnull .)
    order           reduce using rule 207 (EXP -> EXP notnull .)
    limit           reduce using rule 207 (EXP -> EXP notnull .)
    offset          reduce using rule 207 (EXP -> EXP notnull .)
    ptcoma          reduce using rule 207 (EXP -> EXP notnull .)
    mas             reduce using rule 207 (EXP -> EXP notnull .)
    menos           reduce using rule 207 (EXP -> EXP notnull .)
    multiplicacion  reduce using rule 207 (EXP -> EXP notnull .)
    division        reduce using rule 207 (EXP -> EXP notnull .)
    modulo          reduce using rule 207 (EXP -> EXP notnull .)
    elevado         reduce using rule 207 (EXP -> EXP notnull .)
    and             reduce using rule 207 (EXP -> EXP notnull .)
    or              reduce using rule 207 (EXP -> EXP notnull .)
    mayor           reduce using rule 207 (EXP -> EXP notnull .)
    menor           reduce using rule 207 (EXP -> EXP notnull .)
    mayor_igual     reduce using rule 207 (EXP -> EXP notnull .)
    menor_igual     reduce using rule 207 (EXP -> EXP notnull .)
    igual           reduce using rule 207 (EXP -> EXP notnull .)
    diferente1      reduce using rule 207 (EXP -> EXP notnull .)
    diferente2      reduce using rule 207 (EXP -> EXP notnull .)
    between         reduce using rule 207 (EXP -> EXP notnull .)
    is              reduce using rule 207 (EXP -> EXP notnull .)
    not             reduce using rule 207 (EXP -> EXP notnull .)
    as              reduce using rule 207 (EXP -> EXP notnull .)
    like            reduce using rule 207 (EXP -> EXP notnull .)
    isnull          reduce using rule 207 (EXP -> EXP notnull .)
    notnull         reduce using rule 207 (EXP -> EXP notnull .)
    cadenaString    reduce using rule 207 (EXP -> EXP notnull .)
    id              reduce using rule 207 (EXP -> EXP notnull .)
    cadena          reduce using rule 207 (EXP -> EXP notnull .)
    in              reduce using rule 207 (EXP -> EXP notnull .)
    parc            reduce using rule 207 (EXP -> EXP notnull .)
    then            reduce using rule 207 (EXP -> EXP notnull .)
    end             reduce using rule 207 (EXP -> EXP notnull .)
    else            reduce using rule 207 (EXP -> EXP notnull .)
    when            reduce using rule 207 (EXP -> EXP notnull .)
    constraint      reduce using rule 207 (EXP -> EXP notnull .)
    primary         reduce using rule 207 (EXP -> EXP notnull .)
    null            reduce using rule 207 (EXP -> EXP notnull .)
    unique          reduce using rule 207 (EXP -> EXP notnull .)
    references      reduce using rule 207 (EXP -> EXP notnull .)
    check           reduce using rule 207 (EXP -> EXP notnull .)
    default         reduce using rule 207 (EXP -> EXP notnull .)
    asc             reduce using rule 207 (EXP -> EXP notnull .)
    desc            reduce using rule 207 (EXP -> EXP notnull .)


state 116

    (216) EXP -> EXP in . para LEXP parc

    para            shift and go to state 189


state 117

    (211) EXP -> mas EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 211 (EXP -> mas EXP .)
    coma            reduce using rule 211 (EXP -> mas EXP .)
    where           reduce using rule 211 (EXP -> mas EXP .)
    group           reduce using rule 211 (EXP -> mas EXP .)
    having          reduce using rule 211 (EXP -> mas EXP .)
    union           reduce using rule 211 (EXP -> mas EXP .)
    intersect       reduce using rule 211 (EXP -> mas EXP .)
    except          reduce using rule 211 (EXP -> mas EXP .)
    order           reduce using rule 211 (EXP -> mas EXP .)
    limit           reduce using rule 211 (EXP -> mas EXP .)
    offset          reduce using rule 211 (EXP -> mas EXP .)
    ptcoma          reduce using rule 211 (EXP -> mas EXP .)
    mas             reduce using rule 211 (EXP -> mas EXP .)
    menos           reduce using rule 211 (EXP -> mas EXP .)
    multiplicacion  reduce using rule 211 (EXP -> mas EXP .)
    division        reduce using rule 211 (EXP -> mas EXP .)
    modulo          reduce using rule 211 (EXP -> mas EXP .)
    elevado         reduce using rule 211 (EXP -> mas EXP .)
    and             reduce using rule 211 (EXP -> mas EXP .)
    or              reduce using rule 211 (EXP -> mas EXP .)
    mayor           reduce using rule 211 (EXP -> mas EXP .)
    menor           reduce using rule 211 (EXP -> mas EXP .)
    mayor_igual     reduce using rule 211 (EXP -> mas EXP .)
    menor_igual     reduce using rule 211 (EXP -> mas EXP .)
    igual           reduce using rule 211 (EXP -> mas EXP .)
    diferente1      reduce using rule 211 (EXP -> mas EXP .)
    diferente2      reduce using rule 211 (EXP -> mas EXP .)
    between         reduce using rule 211 (EXP -> mas EXP .)
    is              reduce using rule 211 (EXP -> mas EXP .)
    not             reduce using rule 211 (EXP -> mas EXP .)
    as              reduce using rule 211 (EXP -> mas EXP .)
    like            reduce using rule 211 (EXP -> mas EXP .)
    isnull          reduce using rule 211 (EXP -> mas EXP .)
    notnull         reduce using rule 211 (EXP -> mas EXP .)
    cadenaString    reduce using rule 211 (EXP -> mas EXP .)
    id              reduce using rule 211 (EXP -> mas EXP .)
    cadena          reduce using rule 211 (EXP -> mas EXP .)
    in              reduce using rule 211 (EXP -> mas EXP .)
    parc            reduce using rule 211 (EXP -> mas EXP .)
    then            reduce using rule 211 (EXP -> mas EXP .)
    end             reduce using rule 211 (EXP -> mas EXP .)
    else            reduce using rule 211 (EXP -> mas EXP .)
    when            reduce using rule 211 (EXP -> mas EXP .)
    constraint      reduce using rule 211 (EXP -> mas EXP .)
    primary         reduce using rule 211 (EXP -> mas EXP .)
    null            reduce using rule 211 (EXP -> mas EXP .)
    unique          reduce using rule 211 (EXP -> mas EXP .)
    references      reduce using rule 211 (EXP -> mas EXP .)
    check           reduce using rule 211 (EXP -> mas EXP .)
    default         reduce using rule 211 (EXP -> mas EXP .)
    asc             reduce using rule 211 (EXP -> mas EXP .)
    desc            reduce using rule 211 (EXP -> mas EXP .)

  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! elevado         [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 118

    (212) EXP -> menos EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 212 (EXP -> menos EXP .)
    coma            reduce using rule 212 (EXP -> menos EXP .)
    where           reduce using rule 212 (EXP -> menos EXP .)
    group           reduce using rule 212 (EXP -> menos EXP .)
    having          reduce using rule 212 (EXP -> menos EXP .)
    union           reduce using rule 212 (EXP -> menos EXP .)
    intersect       reduce using rule 212 (EXP -> menos EXP .)
    except          reduce using rule 212 (EXP -> menos EXP .)
    order           reduce using rule 212 (EXP -> menos EXP .)
    limit           reduce using rule 212 (EXP -> menos EXP .)
    offset          reduce using rule 212 (EXP -> menos EXP .)
    ptcoma          reduce using rule 212 (EXP -> menos EXP .)
    mas             reduce using rule 212 (EXP -> menos EXP .)
    menos           reduce using rule 212 (EXP -> menos EXP .)
    multiplicacion  reduce using rule 212 (EXP -> menos EXP .)
    division        reduce using rule 212 (EXP -> menos EXP .)
    modulo          reduce using rule 212 (EXP -> menos EXP .)
    elevado         reduce using rule 212 (EXP -> menos EXP .)
    and             reduce using rule 212 (EXP -> menos EXP .)
    or              reduce using rule 212 (EXP -> menos EXP .)
    mayor           reduce using rule 212 (EXP -> menos EXP .)
    menor           reduce using rule 212 (EXP -> menos EXP .)
    mayor_igual     reduce using rule 212 (EXP -> menos EXP .)
    menor_igual     reduce using rule 212 (EXP -> menos EXP .)
    igual           reduce using rule 212 (EXP -> menos EXP .)
    diferente1      reduce using rule 212 (EXP -> menos EXP .)
    diferente2      reduce using rule 212 (EXP -> menos EXP .)
    between         reduce using rule 212 (EXP -> menos EXP .)
    is              reduce using rule 212 (EXP -> menos EXP .)
    not             reduce using rule 212 (EXP -> menos EXP .)
    as              reduce using rule 212 (EXP -> menos EXP .)
    like            reduce using rule 212 (EXP -> menos EXP .)
    isnull          reduce using rule 212 (EXP -> menos EXP .)
    notnull         reduce using rule 212 (EXP -> menos EXP .)
    cadenaString    reduce using rule 212 (EXP -> menos EXP .)
    id              reduce using rule 212 (EXP -> menos EXP .)
    cadena          reduce using rule 212 (EXP -> menos EXP .)
    in              reduce using rule 212 (EXP -> menos EXP .)
    parc            reduce using rule 212 (EXP -> menos EXP .)
    then            reduce using rule 212 (EXP -> menos EXP .)
    end             reduce using rule 212 (EXP -> menos EXP .)
    else            reduce using rule 212 (EXP -> menos EXP .)
    when            reduce using rule 212 (EXP -> menos EXP .)
    constraint      reduce using rule 212 (EXP -> menos EXP .)
    primary         reduce using rule 212 (EXP -> menos EXP .)
    null            reduce using rule 212 (EXP -> menos EXP .)
    unique          reduce using rule 212 (EXP -> menos EXP .)
    references      reduce using rule 212 (EXP -> menos EXP .)
    check           reduce using rule 212 (EXP -> menos EXP .)
    default         reduce using rule 212 (EXP -> menos EXP .)
    asc             reduce using rule 212 (EXP -> menos EXP .)
    desc            reduce using rule 212 (EXP -> menos EXP .)

  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! elevado         [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 119

    (213) EXP -> not EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 213 (EXP -> not EXP .)
    coma            reduce using rule 213 (EXP -> not EXP .)
    where           reduce using rule 213 (EXP -> not EXP .)
    group           reduce using rule 213 (EXP -> not EXP .)
    having          reduce using rule 213 (EXP -> not EXP .)
    union           reduce using rule 213 (EXP -> not EXP .)
    intersect       reduce using rule 213 (EXP -> not EXP .)
    except          reduce using rule 213 (EXP -> not EXP .)
    order           reduce using rule 213 (EXP -> not EXP .)
    limit           reduce using rule 213 (EXP -> not EXP .)
    offset          reduce using rule 213 (EXP -> not EXP .)
    ptcoma          reduce using rule 213 (EXP -> not EXP .)
    and             reduce using rule 213 (EXP -> not EXP .)
    or              reduce using rule 213 (EXP -> not EXP .)
    between         reduce using rule 213 (EXP -> not EXP .)
    is              reduce using rule 213 (EXP -> not EXP .)
    as              reduce using rule 213 (EXP -> not EXP .)
    like            reduce using rule 213 (EXP -> not EXP .)
    isnull          reduce using rule 213 (EXP -> not EXP .)
    notnull         reduce using rule 213 (EXP -> not EXP .)
    cadenaString    reduce using rule 213 (EXP -> not EXP .)
    id              reduce using rule 213 (EXP -> not EXP .)
    cadena          reduce using rule 213 (EXP -> not EXP .)
    in              reduce using rule 213 (EXP -> not EXP .)
    parc            reduce using rule 213 (EXP -> not EXP .)
    then            reduce using rule 213 (EXP -> not EXP .)
    end             reduce using rule 213 (EXP -> not EXP .)
    else            reduce using rule 213 (EXP -> not EXP .)
    when            reduce using rule 213 (EXP -> not EXP .)
    constraint      reduce using rule 213 (EXP -> not EXP .)
    primary         reduce using rule 213 (EXP -> not EXP .)
    null            reduce using rule 213 (EXP -> not EXP .)
    unique          reduce using rule 213 (EXP -> not EXP .)
    references      reduce using rule 213 (EXP -> not EXP .)
    check           reduce using rule 213 (EXP -> not EXP .)
    default         reduce using rule 213 (EXP -> not EXP .)
    asc             reduce using rule 213 (EXP -> not EXP .)
    desc            reduce using rule 213 (EXP -> not EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    not             shift and go to state 108

  ! mas             [ reduce using rule 213 (EXP -> not EXP .) ]
  ! menos           [ reduce using rule 213 (EXP -> not EXP .) ]
  ! multiplicacion  [ reduce using rule 213 (EXP -> not EXP .) ]
  ! division        [ reduce using rule 213 (EXP -> not EXP .) ]
  ! modulo          [ reduce using rule 213 (EXP -> not EXP .) ]
  ! elevado         [ reduce using rule 213 (EXP -> not EXP .) ]
  ! mayor           [ reduce using rule 213 (EXP -> not EXP .) ]
  ! menor           [ reduce using rule 213 (EXP -> not EXP .) ]
  ! mayor_igual     [ reduce using rule 213 (EXP -> not EXP .) ]
  ! menor_igual     [ reduce using rule 213 (EXP -> not EXP .) ]
  ! igual           [ reduce using rule 213 (EXP -> not EXP .) ]
  ! diferente1      [ reduce using rule 213 (EXP -> not EXP .) ]
  ! diferente2      [ reduce using rule 213 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 213 (EXP -> not EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 120

    (230) EXP -> cadena as . TIPO
    (137) TIPO -> . decimal para LEXP parc
    (138) TIPO -> . numeric para LEXP parc
    (139) TIPO -> . varchar para int parc
    (140) TIPO -> . timestamp para int parc
    (141) TIPO -> . character para int parc
    (142) TIPO -> . interval para int parc
    (143) TIPO -> . char para int parc
    (144) TIPO -> . time para int parc
    (145) TIPO -> . character varying para int parc
    (146) TIPO -> . interval cadena
    (147) TIPO -> . timestamp para int parc without time zone
    (148) TIPO -> . timestamp para int parc with time zone
    (149) TIPO -> . time para int parc without time zone
    (150) TIPO -> . time para int parc with time zone
    (151) TIPO -> . interval para int parc cadena
    (152) TIPO -> . smallint
    (153) TIPO -> . integer
    (154) TIPO -> . bigint
    (155) TIPO -> . real
    (156) TIPO -> . double precision
    (157) TIPO -> . money
    (158) TIPO -> . text
    (159) TIPO -> . timestamp
    (160) TIPO -> . date
    (161) TIPO -> . time
    (162) TIPO -> . interval
    (163) TIPO -> . boolean
    (164) TIPO -> . decimal
    (165) TIPO -> . numeric
    (166) TIPO -> . id
    (167) TIPO -> . timestamp without time zone
    (168) TIPO -> . timestamp with time zone
    (169) TIPO -> . time without time zone
    (170) TIPO -> . time with time zone

    decimal         shift and go to state 191
    numeric         shift and go to state 192
    varchar         shift and go to state 193
    timestamp       shift and go to state 194
    character       shift and go to state 195
    interval        shift and go to state 196
    char            shift and go to state 197
    time            shift and go to state 198
    smallint        shift and go to state 199
    integer         shift and go to state 200
    bigint          shift and go to state 201
    real            shift and go to state 202
    double          shift and go to state 203
    money           shift and go to state 204
    text            shift and go to state 205
    date            shift and go to state 206
    boolean         shift and go to state 207
    id              shift and go to state 208

    TIPO                           shift and go to state 190

state 121

    (224) EXP -> id para . parc
    (225) EXP -> id para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    parc            shift and go to state 209
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 210
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 122

    (223) EXP -> para EXP . parc
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    parc            shift and go to state 211
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116


state 123

    (226) EXP -> any para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 212
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 124

    (227) EXP -> all para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 213
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 125

    (228) EXP -> some para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 214
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 126

    (229) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (171) FIELDS -> . year
    (172) FIELDS -> . month
    (173) FIELDS -> . day
    (174) FIELDS -> . hour
    (175) FIELDS -> . minute
    (176) FIELDS -> . second

    year            shift and go to state 216
    month           shift and go to state 217
    day             shift and go to state 218
    hour            shift and go to state 219
    minute          shift and go to state 220
    second          shift and go to state 221

    FIELDS                         shift and go to state 215

state 127

    (244) EXP -> timestamp cadena .

    r_from          reduce using rule 244 (EXP -> timestamp cadena .)
    coma            reduce using rule 244 (EXP -> timestamp cadena .)
    where           reduce using rule 244 (EXP -> timestamp cadena .)
    group           reduce using rule 244 (EXP -> timestamp cadena .)
    having          reduce using rule 244 (EXP -> timestamp cadena .)
    union           reduce using rule 244 (EXP -> timestamp cadena .)
    intersect       reduce using rule 244 (EXP -> timestamp cadena .)
    except          reduce using rule 244 (EXP -> timestamp cadena .)
    order           reduce using rule 244 (EXP -> timestamp cadena .)
    limit           reduce using rule 244 (EXP -> timestamp cadena .)
    offset          reduce using rule 244 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 244 (EXP -> timestamp cadena .)
    mas             reduce using rule 244 (EXP -> timestamp cadena .)
    menos           reduce using rule 244 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 244 (EXP -> timestamp cadena .)
    division        reduce using rule 244 (EXP -> timestamp cadena .)
    modulo          reduce using rule 244 (EXP -> timestamp cadena .)
    elevado         reduce using rule 244 (EXP -> timestamp cadena .)
    and             reduce using rule 244 (EXP -> timestamp cadena .)
    or              reduce using rule 244 (EXP -> timestamp cadena .)
    mayor           reduce using rule 244 (EXP -> timestamp cadena .)
    menor           reduce using rule 244 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 244 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 244 (EXP -> timestamp cadena .)
    igual           reduce using rule 244 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 244 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 244 (EXP -> timestamp cadena .)
    between         reduce using rule 244 (EXP -> timestamp cadena .)
    is              reduce using rule 244 (EXP -> timestamp cadena .)
    not             reduce using rule 244 (EXP -> timestamp cadena .)
    as              reduce using rule 244 (EXP -> timestamp cadena .)
    like            reduce using rule 244 (EXP -> timestamp cadena .)
    isnull          reduce using rule 244 (EXP -> timestamp cadena .)
    notnull         reduce using rule 244 (EXP -> timestamp cadena .)
    cadenaString    reduce using rule 244 (EXP -> timestamp cadena .)
    id              reduce using rule 244 (EXP -> timestamp cadena .)
    cadena          reduce using rule 244 (EXP -> timestamp cadena .)
    in              reduce using rule 244 (EXP -> timestamp cadena .)
    parc            reduce using rule 244 (EXP -> timestamp cadena .)
    then            reduce using rule 244 (EXP -> timestamp cadena .)
    end             reduce using rule 244 (EXP -> timestamp cadena .)
    else            reduce using rule 244 (EXP -> timestamp cadena .)
    when            reduce using rule 244 (EXP -> timestamp cadena .)
    constraint      reduce using rule 244 (EXP -> timestamp cadena .)
    primary         reduce using rule 244 (EXP -> timestamp cadena .)
    null            reduce using rule 244 (EXP -> timestamp cadena .)
    unique          reduce using rule 244 (EXP -> timestamp cadena .)
    references      reduce using rule 244 (EXP -> timestamp cadena .)
    check           reduce using rule 244 (EXP -> timestamp cadena .)
    default         reduce using rule 244 (EXP -> timestamp cadena .)
    asc             reduce using rule 244 (EXP -> timestamp cadena .)
    desc            reduce using rule 244 (EXP -> timestamp cadena .)


state 128

    (245) EXP -> interval cadena .

    r_from          reduce using rule 245 (EXP -> interval cadena .)
    coma            reduce using rule 245 (EXP -> interval cadena .)
    where           reduce using rule 245 (EXP -> interval cadena .)
    group           reduce using rule 245 (EXP -> interval cadena .)
    having          reduce using rule 245 (EXP -> interval cadena .)
    union           reduce using rule 245 (EXP -> interval cadena .)
    intersect       reduce using rule 245 (EXP -> interval cadena .)
    except          reduce using rule 245 (EXP -> interval cadena .)
    order           reduce using rule 245 (EXP -> interval cadena .)
    limit           reduce using rule 245 (EXP -> interval cadena .)
    offset          reduce using rule 245 (EXP -> interval cadena .)
    ptcoma          reduce using rule 245 (EXP -> interval cadena .)
    mas             reduce using rule 245 (EXP -> interval cadena .)
    menos           reduce using rule 245 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 245 (EXP -> interval cadena .)
    division        reduce using rule 245 (EXP -> interval cadena .)
    modulo          reduce using rule 245 (EXP -> interval cadena .)
    elevado         reduce using rule 245 (EXP -> interval cadena .)
    and             reduce using rule 245 (EXP -> interval cadena .)
    or              reduce using rule 245 (EXP -> interval cadena .)
    mayor           reduce using rule 245 (EXP -> interval cadena .)
    menor           reduce using rule 245 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 245 (EXP -> interval cadena .)
    menor_igual     reduce using rule 245 (EXP -> interval cadena .)
    igual           reduce using rule 245 (EXP -> interval cadena .)
    diferente1      reduce using rule 245 (EXP -> interval cadena .)
    diferente2      reduce using rule 245 (EXP -> interval cadena .)
    between         reduce using rule 245 (EXP -> interval cadena .)
    is              reduce using rule 245 (EXP -> interval cadena .)
    not             reduce using rule 245 (EXP -> interval cadena .)
    as              reduce using rule 245 (EXP -> interval cadena .)
    like            reduce using rule 245 (EXP -> interval cadena .)
    isnull          reduce using rule 245 (EXP -> interval cadena .)
    notnull         reduce using rule 245 (EXP -> interval cadena .)
    cadenaString    reduce using rule 245 (EXP -> interval cadena .)
    id              reduce using rule 245 (EXP -> interval cadena .)
    cadena          reduce using rule 245 (EXP -> interval cadena .)
    in              reduce using rule 245 (EXP -> interval cadena .)
    parc            reduce using rule 245 (EXP -> interval cadena .)
    then            reduce using rule 245 (EXP -> interval cadena .)
    end             reduce using rule 245 (EXP -> interval cadena .)
    else            reduce using rule 245 (EXP -> interval cadena .)
    when            reduce using rule 245 (EXP -> interval cadena .)
    constraint      reduce using rule 245 (EXP -> interval cadena .)
    primary         reduce using rule 245 (EXP -> interval cadena .)
    null            reduce using rule 245 (EXP -> interval cadena .)
    unique          reduce using rule 245 (EXP -> interval cadena .)
    references      reduce using rule 245 (EXP -> interval cadena .)
    check           reduce using rule 245 (EXP -> interval cadena .)
    default         reduce using rule 245 (EXP -> interval cadena .)
    asc             reduce using rule 245 (EXP -> interval cadena .)
    desc            reduce using rule 245 (EXP -> interval cadena .)


state 129

    (69) CREATETABLE -> create table id . para LDEF parc ptcoma
    (70) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 222


state 130

    (100) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 223


state 131

    (52) CREATEDB -> create RD if . not exist id
    (53) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 224


state 132

    (54) CREATEDB -> create RD id .
    (55) CREATEDB -> create RD id . OPCCDB
    (56) OPCCDB -> . PROPIETARIO
    (57) OPCCDB -> . MODO
    (58) OPCCDB -> . PROPIETARIO MODO
    (61) PROPIETARIO -> . owner igual id
    (62) PROPIETARIO -> . owner id
    (63) PROPIETARIO -> . owner igual cadena
    (64) PROPIETARIO -> . owner cadena
    (65) PROPIETARIO -> . owner igual cadenaString
    (66) PROPIETARIO -> . owner cadenaString
    (67) MODO -> . mode igual int
    (68) MODO -> . mode int

    ptcoma          reduce using rule 54 (CREATEDB -> create RD id .)
    owner           shift and go to state 228
    mode            shift and go to state 229

    OPCCDB                         shift and go to state 225
    PROPIETARIO                    shift and go to state 226
    MODO                           shift and go to state 227

state 133

    (59) RD -> or replace . databases

    databases       shift and go to state 230


state 134

    (129) UPDATE -> update id set . LCAMPOS where LEXP
    (130) LCAMPOS -> . LCAMPOS id igual EXP
    (131) LCAMPOS -> . id igual EXP

    id              shift and go to state 231

    LCAMPOS                        shift and go to state 232

state 135

    (132) DELETE -> delete r_from EXP . WHERE
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP
    (112) WHERE -> . where EXP
    (113) WHERE -> .
    (114) WHERE -> . where EXIST

    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116
    where           shift and go to state 90
    ptcoma          reduce using rule 113 (WHERE -> .)

    WHERE                          shift and go to state 233

state 136

    (29) ALTER -> alter databases id . RO
    (31) RO -> . rename to id
    (32) RO -> . owner to id

    rename          shift and go to state 235
    owner           shift and go to state 236

    RO                             shift and go to state 234

state 137

    (30) ALTER -> alter table id . LOP
    (33) LOP -> . LOP coma OP
    (34) LOP -> . OP
    (35) OP -> . add column id TIPO
    (36) OP -> . add check para CONDCHECK parc
    (37) OP -> . add constraint id check para CONDCHECK parc
    (38) OP -> . add constraint id unique para LEXP parc
    (39) OP -> . add unique para LEXP parc
    (40) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (41) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (42) OP -> . alter column id set not null
    (43) OP -> . alter column id set null
    (44) OP -> . drop constraint id
    (45) OP -> . drop column LEXP
    (46) OP -> . drop check id
    (47) OP -> . rename column id to id
    (48) OP -> . alter column id type TIPO

    add             shift and go to state 240
    alter           shift and go to state 237
    drop            shift and go to state 241
    rename          shift and go to state 242

    LOP                            shift and go to state 238
    OP                             shift and go to state 239

state 138

    (25) DROP -> drop all para . parc

    parc            shift and go to state 243


state 139

    (26) DROP -> drop table id .

    ptcoma          reduce using rule 26 (DROP -> drop table id .)


state 140

    (27) DROP -> drop databases id .

    ptcoma          reduce using rule 27 (DROP -> drop databases id .)


state 141

    (28) DROP -> drop databases if . exist id

    exist           shift and go to state 244


state 142

    (23) INSERT -> insert into id . values para LEXP parc
    (24) INSERT -> insert into id . para LEXP parc values para LEXP parc

    values          shift and go to state 245
    para            shift and go to state 246


state 143

    (17) CASE -> case LISTAWHEN ELSE . end

    end             shift and go to state 247


state 144

    (18) CASE -> case LISTAWHEN end .

    use             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    select          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    create          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    update          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    delete          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    alter           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    drop            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    insert          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    case            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    show            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    $end            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    r_from          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    coma            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    where           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    group           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    having          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    union           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    intersect       reduce using rule 18 (CASE -> case LISTAWHEN end .)
    except          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    order           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    limit           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    offset          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    ptcoma          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    mas             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    menos           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    multiplicacion  reduce using rule 18 (CASE -> case LISTAWHEN end .)
    division        reduce using rule 18 (CASE -> case LISTAWHEN end .)
    modulo          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    elevado         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    and             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    or              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    mayor           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    menor           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    mayor_igual     reduce using rule 18 (CASE -> case LISTAWHEN end .)
    menor_igual     reduce using rule 18 (CASE -> case LISTAWHEN end .)
    igual           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    diferente1      reduce using rule 18 (CASE -> case LISTAWHEN end .)
    diferente2      reduce using rule 18 (CASE -> case LISTAWHEN end .)
    between         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    is              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    not             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    as              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    like            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    isnull          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    notnull         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    cadenaString    reduce using rule 18 (CASE -> case LISTAWHEN end .)
    id              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    cadena          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    in              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    parc            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    then            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    end             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    else            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    when            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    constraint      reduce using rule 18 (CASE -> case LISTAWHEN end .)
    primary         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    null            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    unique          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    references      reduce using rule 18 (CASE -> case LISTAWHEN end .)
    check           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    default         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    asc             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    desc            reduce using rule 18 (CASE -> case LISTAWHEN end .)


state 145

    (19) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 19 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 19 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 19 (LISTAWHEN -> LISTAWHEN WHEN .)


state 146

    (22) ELSE -> else . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 248
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 147

    (21) WHEN -> when LEXP . then LEXP
    (135) LEXP -> LEXP . coma EXP

    then            shift and go to state 249
    coma            shift and go to state 89


state 148

    (50) SHOW -> show tables para . id parc

    id              shift and go to state 250


state 149

    (51) SHOW -> show collection para . parc

    parc            shift and go to state 251


state 150

    (101) SELECT -> select distinct LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 252
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 151

    (102) SELECT -> select LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> LEXP . coma EXP
    (112) WHERE -> . where EXP
    (113) WHERE -> .
    (114) WHERE -> . where EXIST

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 89
    where           shift and go to state 90
    r_from          reduce using rule 113 (WHERE -> .)
    group           reduce using rule 113 (WHERE -> .)
    having          reduce using rule 113 (WHERE -> .)
    union           reduce using rule 113 (WHERE -> .)
    intersect       reduce using rule 113 (WHERE -> .)
    except          reduce using rule 113 (WHERE -> .)
    order           reduce using rule 113 (WHERE -> .)
    limit           reduce using rule 113 (WHERE -> .)
    offset          reduce using rule 113 (WHERE -> .)
    ptcoma          reduce using rule 113 (WHERE -> .)
    mas             reduce using rule 113 (WHERE -> .)
    menos           reduce using rule 113 (WHERE -> .)
    multiplicacion  reduce using rule 113 (WHERE -> .)
    division        reduce using rule 113 (WHERE -> .)
    modulo          reduce using rule 113 (WHERE -> .)
    elevado         reduce using rule 113 (WHERE -> .)
    and             reduce using rule 113 (WHERE -> .)
    or              reduce using rule 113 (WHERE -> .)
    mayor           reduce using rule 113 (WHERE -> .)
    menor           reduce using rule 113 (WHERE -> .)
    mayor_igual     reduce using rule 113 (WHERE -> .)
    menor_igual     reduce using rule 113 (WHERE -> .)
    igual           reduce using rule 113 (WHERE -> .)
    diferente1      reduce using rule 113 (WHERE -> .)
    diferente2      reduce using rule 113 (WHERE -> .)
    between         reduce using rule 113 (WHERE -> .)
    is              reduce using rule 113 (WHERE -> .)
    not             reduce using rule 113 (WHERE -> .)
    as              reduce using rule 113 (WHERE -> .)
    like            reduce using rule 113 (WHERE -> .)
    isnull          reduce using rule 113 (WHERE -> .)
    notnull         reduce using rule 113 (WHERE -> .)
    cadenaString    reduce using rule 113 (WHERE -> .)
    id              reduce using rule 113 (WHERE -> .)
    cadena          reduce using rule 113 (WHERE -> .)
    in              reduce using rule 113 (WHERE -> .)
    parc            reduce using rule 113 (WHERE -> .)
    then            reduce using rule 113 (WHERE -> .)
    end             reduce using rule 113 (WHERE -> .)
    else            reduce using rule 113 (WHERE -> .)
    when            reduce using rule 113 (WHERE -> .)
    constraint      reduce using rule 113 (WHERE -> .)
    primary         reduce using rule 113 (WHERE -> .)
    null            reduce using rule 113 (WHERE -> .)
    unique          reduce using rule 113 (WHERE -> .)
    references      reduce using rule 113 (WHERE -> .)
    check           reduce using rule 113 (WHERE -> .)
    default         reduce using rule 113 (WHERE -> .)
    asc             reduce using rule 113 (WHERE -> .)
    desc            reduce using rule 113 (WHERE -> .)

  ! coma            [ reduce using rule 113 (WHERE -> .) ]
  ! where           [ reduce using rule 113 (WHERE -> .) ]

    WHERE                          shift and go to state 253

state 152

    (103) SELECT -> select LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (122) HAVING -> . having EXP
    (123) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 255
    r_from          reduce using rule 123 (HAVING -> .)
    coma            reduce using rule 123 (HAVING -> .)
    where           reduce using rule 123 (HAVING -> .)
    group           reduce using rule 123 (HAVING -> .)
    union           reduce using rule 123 (HAVING -> .)
    intersect       reduce using rule 123 (HAVING -> .)
    except          reduce using rule 123 (HAVING -> .)
    order           reduce using rule 123 (HAVING -> .)
    limit           reduce using rule 123 (HAVING -> .)
    offset          reduce using rule 123 (HAVING -> .)
    ptcoma          reduce using rule 123 (HAVING -> .)
    mas             reduce using rule 123 (HAVING -> .)
    menos           reduce using rule 123 (HAVING -> .)
    multiplicacion  reduce using rule 123 (HAVING -> .)
    division        reduce using rule 123 (HAVING -> .)
    modulo          reduce using rule 123 (HAVING -> .)
    elevado         reduce using rule 123 (HAVING -> .)
    and             reduce using rule 123 (HAVING -> .)
    or              reduce using rule 123 (HAVING -> .)
    mayor           reduce using rule 123 (HAVING -> .)
    menor           reduce using rule 123 (HAVING -> .)
    mayor_igual     reduce using rule 123 (HAVING -> .)
    menor_igual     reduce using rule 123 (HAVING -> .)
    igual           reduce using rule 123 (HAVING -> .)
    diferente1      reduce using rule 123 (HAVING -> .)
    diferente2      reduce using rule 123 (HAVING -> .)
    between         reduce using rule 123 (HAVING -> .)
    is              reduce using rule 123 (HAVING -> .)
    not             reduce using rule 123 (HAVING -> .)
    as              reduce using rule 123 (HAVING -> .)
    like            reduce using rule 123 (HAVING -> .)
    isnull          reduce using rule 123 (HAVING -> .)
    notnull         reduce using rule 123 (HAVING -> .)
    cadenaString    reduce using rule 123 (HAVING -> .)
    id              reduce using rule 123 (HAVING -> .)
    cadena          reduce using rule 123 (HAVING -> .)
    in              reduce using rule 123 (HAVING -> .)
    parc            reduce using rule 123 (HAVING -> .)
    then            reduce using rule 123 (HAVING -> .)
    end             reduce using rule 123 (HAVING -> .)
    else            reduce using rule 123 (HAVING -> .)
    when            reduce using rule 123 (HAVING -> .)
    constraint      reduce using rule 123 (HAVING -> .)
    primary         reduce using rule 123 (HAVING -> .)
    null            reduce using rule 123 (HAVING -> .)
    unique          reduce using rule 123 (HAVING -> .)
    references      reduce using rule 123 (HAVING -> .)
    check           reduce using rule 123 (HAVING -> .)
    default         reduce using rule 123 (HAVING -> .)
    asc             reduce using rule 123 (HAVING -> .)
    desc            reduce using rule 123 (HAVING -> .)

  ! having          [ reduce using rule 123 (HAVING -> .) ]

    HAVING                         shift and go to state 254

state 153

    (120) GROUP -> group . by LEXP

    by              shift and go to state 256


state 154

    (135) LEXP -> LEXP coma EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for like resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
    r_from          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 135 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    end             reduce using rule 135 (LEXP -> LEXP coma EXP .)
    else            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 135 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 135 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    unique          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 135 (LEXP -> LEXP coma EXP .)
    check           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 135 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 135 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116

  ! mas             [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! as              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! like            [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! cadenaString    [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! id              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! cadena          [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]


state 155

    (112) WHERE -> where EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for like resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
    r_from          reduce using rule 112 (WHERE -> where EXP .)
    coma            reduce using rule 112 (WHERE -> where EXP .)
    where           reduce using rule 112 (WHERE -> where EXP .)
    group           reduce using rule 112 (WHERE -> where EXP .)
    having          reduce using rule 112 (WHERE -> where EXP .)
    union           reduce using rule 112 (WHERE -> where EXP .)
    intersect       reduce using rule 112 (WHERE -> where EXP .)
    except          reduce using rule 112 (WHERE -> where EXP .)
    order           reduce using rule 112 (WHERE -> where EXP .)
    limit           reduce using rule 112 (WHERE -> where EXP .)
    offset          reduce using rule 112 (WHERE -> where EXP .)
    ptcoma          reduce using rule 112 (WHERE -> where EXP .)
    parc            reduce using rule 112 (WHERE -> where EXP .)
    then            reduce using rule 112 (WHERE -> where EXP .)
    end             reduce using rule 112 (WHERE -> where EXP .)
    else            reduce using rule 112 (WHERE -> where EXP .)
    when            reduce using rule 112 (WHERE -> where EXP .)
    constraint      reduce using rule 112 (WHERE -> where EXP .)
    primary         reduce using rule 112 (WHERE -> where EXP .)
    null            reduce using rule 112 (WHERE -> where EXP .)
    unique          reduce using rule 112 (WHERE -> where EXP .)
    references      reduce using rule 112 (WHERE -> where EXP .)
    check           reduce using rule 112 (WHERE -> where EXP .)
    default         reduce using rule 112 (WHERE -> where EXP .)
    asc             reduce using rule 112 (WHERE -> where EXP .)
    desc            reduce using rule 112 (WHERE -> where EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116

  ! mas             [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! menos           [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! multiplicacion  [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! division        [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! modulo          [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! elevado         [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! and             [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! or              [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! mayor           [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! menor           [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! mayor_igual     [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! menor_igual     [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! igual           [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! diferente1      [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! diferente2      [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! between         [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! is              [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! not             [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! as              [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! like            [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! isnull          [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! notnull         [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! cadenaString    [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! id              [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! cadena          [ reduce using rule 112 (WHERE -> where EXP .) ]
  ! in              [ reduce using rule 112 (WHERE -> where EXP .) ]


state 156

    (114) WHERE -> where EXIST .

    r_from          reduce using rule 114 (WHERE -> where EXIST .)
    coma            reduce using rule 114 (WHERE -> where EXIST .)
    where           reduce using rule 114 (WHERE -> where EXIST .)
    group           reduce using rule 114 (WHERE -> where EXIST .)
    having          reduce using rule 114 (WHERE -> where EXIST .)
    union           reduce using rule 114 (WHERE -> where EXIST .)
    intersect       reduce using rule 114 (WHERE -> where EXIST .)
    except          reduce using rule 114 (WHERE -> where EXIST .)
    order           reduce using rule 114 (WHERE -> where EXIST .)
    limit           reduce using rule 114 (WHERE -> where EXIST .)
    offset          reduce using rule 114 (WHERE -> where EXIST .)
    ptcoma          reduce using rule 114 (WHERE -> where EXIST .)
    mas             reduce using rule 114 (WHERE -> where EXIST .)
    menos           reduce using rule 114 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 114 (WHERE -> where EXIST .)
    division        reduce using rule 114 (WHERE -> where EXIST .)
    modulo          reduce using rule 114 (WHERE -> where EXIST .)
    elevado         reduce using rule 114 (WHERE -> where EXIST .)
    and             reduce using rule 114 (WHERE -> where EXIST .)
    or              reduce using rule 114 (WHERE -> where EXIST .)
    mayor           reduce using rule 114 (WHERE -> where EXIST .)
    menor           reduce using rule 114 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 114 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 114 (WHERE -> where EXIST .)
    igual           reduce using rule 114 (WHERE -> where EXIST .)
    diferente1      reduce using rule 114 (WHERE -> where EXIST .)
    diferente2      reduce using rule 114 (WHERE -> where EXIST .)
    between         reduce using rule 114 (WHERE -> where EXIST .)
    is              reduce using rule 114 (WHERE -> where EXIST .)
    not             reduce using rule 114 (WHERE -> where EXIST .)
    as              reduce using rule 114 (WHERE -> where EXIST .)
    like            reduce using rule 114 (WHERE -> where EXIST .)
    isnull          reduce using rule 114 (WHERE -> where EXIST .)
    notnull         reduce using rule 114 (WHERE -> where EXIST .)
    cadenaString    reduce using rule 114 (WHERE -> where EXIST .)
    id              reduce using rule 114 (WHERE -> where EXIST .)
    cadena          reduce using rule 114 (WHERE -> where EXIST .)
    in              reduce using rule 114 (WHERE -> where EXIST .)
    parc            reduce using rule 114 (WHERE -> where EXIST .)
    then            reduce using rule 114 (WHERE -> where EXIST .)
    end             reduce using rule 114 (WHERE -> where EXIST .)
    else            reduce using rule 114 (WHERE -> where EXIST .)
    when            reduce using rule 114 (WHERE -> where EXIST .)
    constraint      reduce using rule 114 (WHERE -> where EXIST .)
    primary         reduce using rule 114 (WHERE -> where EXIST .)
    null            reduce using rule 114 (WHERE -> where EXIST .)
    unique          reduce using rule 114 (WHERE -> where EXIST .)
    references      reduce using rule 114 (WHERE -> where EXIST .)
    check           reduce using rule 114 (WHERE -> where EXIST .)
    default         reduce using rule 114 (WHERE -> where EXIST .)
    asc             reduce using rule 114 (WHERE -> where EXIST .)
    desc            reduce using rule 114 (WHERE -> where EXIST .)


state 157

    (213) EXP -> not . EXP
    (134) EXIST -> not . exist para SELECT parc
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    exist           shift and go to state 257
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 119
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 158

    (133) EXIST -> exist . para SELECT parc

    para            shift and go to state 258


state 159

    (177) EXP -> EXP mas EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 177 (EXP -> EXP mas EXP .)
    coma            reduce using rule 177 (EXP -> EXP mas EXP .)
    where           reduce using rule 177 (EXP -> EXP mas EXP .)
    group           reduce using rule 177 (EXP -> EXP mas EXP .)
    having          reduce using rule 177 (EXP -> EXP mas EXP .)
    union           reduce using rule 177 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 177 (EXP -> EXP mas EXP .)
    except          reduce using rule 177 (EXP -> EXP mas EXP .)
    order           reduce using rule 177 (EXP -> EXP mas EXP .)
    limit           reduce using rule 177 (EXP -> EXP mas EXP .)
    offset          reduce using rule 177 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 177 (EXP -> EXP mas EXP .)
    mas             reduce using rule 177 (EXP -> EXP mas EXP .)
    menos           reduce using rule 177 (EXP -> EXP mas EXP .)
    and             reduce using rule 177 (EXP -> EXP mas EXP .)
    or              reduce using rule 177 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 177 (EXP -> EXP mas EXP .)
    menor           reduce using rule 177 (EXP -> EXP mas EXP .)
    mayor_igual     reduce using rule 177 (EXP -> EXP mas EXP .)
    menor_igual     reduce using rule 177 (EXP -> EXP mas EXP .)
    igual           reduce using rule 177 (EXP -> EXP mas EXP .)
    diferente1      reduce using rule 177 (EXP -> EXP mas EXP .)
    diferente2      reduce using rule 177 (EXP -> EXP mas EXP .)
    between         reduce using rule 177 (EXP -> EXP mas EXP .)
    is              reduce using rule 177 (EXP -> EXP mas EXP .)
    not             reduce using rule 177 (EXP -> EXP mas EXP .)
    as              reduce using rule 177 (EXP -> EXP mas EXP .)
    like            reduce using rule 177 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 177 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 177 (EXP -> EXP mas EXP .)
    cadenaString    reduce using rule 177 (EXP -> EXP mas EXP .)
    id              reduce using rule 177 (EXP -> EXP mas EXP .)
    cadena          reduce using rule 177 (EXP -> EXP mas EXP .)
    in              reduce using rule 177 (EXP -> EXP mas EXP .)
    parc            reduce using rule 177 (EXP -> EXP mas EXP .)
    then            reduce using rule 177 (EXP -> EXP mas EXP .)
    end             reduce using rule 177 (EXP -> EXP mas EXP .)
    else            reduce using rule 177 (EXP -> EXP mas EXP .)
    when            reduce using rule 177 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 177 (EXP -> EXP mas EXP .)
    primary         reduce using rule 177 (EXP -> EXP mas EXP .)
    null            reduce using rule 177 (EXP -> EXP mas EXP .)
    unique          reduce using rule 177 (EXP -> EXP mas EXP .)
    references      reduce using rule 177 (EXP -> EXP mas EXP .)
    check           reduce using rule 177 (EXP -> EXP mas EXP .)
    default         reduce using rule 177 (EXP -> EXP mas EXP .)
    asc             reduce using rule 177 (EXP -> EXP mas EXP .)
    desc            reduce using rule 177 (EXP -> EXP mas EXP .)
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! multiplicacion  [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! elevado         [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 160

    (178) EXP -> EXP menos EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 178 (EXP -> EXP menos EXP .)
    coma            reduce using rule 178 (EXP -> EXP menos EXP .)
    where           reduce using rule 178 (EXP -> EXP menos EXP .)
    group           reduce using rule 178 (EXP -> EXP menos EXP .)
    having          reduce using rule 178 (EXP -> EXP menos EXP .)
    union           reduce using rule 178 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 178 (EXP -> EXP menos EXP .)
    except          reduce using rule 178 (EXP -> EXP menos EXP .)
    order           reduce using rule 178 (EXP -> EXP menos EXP .)
    limit           reduce using rule 178 (EXP -> EXP menos EXP .)
    offset          reduce using rule 178 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 178 (EXP -> EXP menos EXP .)
    mas             reduce using rule 178 (EXP -> EXP menos EXP .)
    menos           reduce using rule 178 (EXP -> EXP menos EXP .)
    and             reduce using rule 178 (EXP -> EXP menos EXP .)
    or              reduce using rule 178 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 178 (EXP -> EXP menos EXP .)
    menor           reduce using rule 178 (EXP -> EXP menos EXP .)
    mayor_igual     reduce using rule 178 (EXP -> EXP menos EXP .)
    menor_igual     reduce using rule 178 (EXP -> EXP menos EXP .)
    igual           reduce using rule 178 (EXP -> EXP menos EXP .)
    diferente1      reduce using rule 178 (EXP -> EXP menos EXP .)
    diferente2      reduce using rule 178 (EXP -> EXP menos EXP .)
    between         reduce using rule 178 (EXP -> EXP menos EXP .)
    is              reduce using rule 178 (EXP -> EXP menos EXP .)
    not             reduce using rule 178 (EXP -> EXP menos EXP .)
    as              reduce using rule 178 (EXP -> EXP menos EXP .)
    like            reduce using rule 178 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 178 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 178 (EXP -> EXP menos EXP .)
    cadenaString    reduce using rule 178 (EXP -> EXP menos EXP .)
    id              reduce using rule 178 (EXP -> EXP menos EXP .)
    cadena          reduce using rule 178 (EXP -> EXP menos EXP .)
    in              reduce using rule 178 (EXP -> EXP menos EXP .)
    parc            reduce using rule 178 (EXP -> EXP menos EXP .)
    then            reduce using rule 178 (EXP -> EXP menos EXP .)
    end             reduce using rule 178 (EXP -> EXP menos EXP .)
    else            reduce using rule 178 (EXP -> EXP menos EXP .)
    when            reduce using rule 178 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 178 (EXP -> EXP menos EXP .)
    primary         reduce using rule 178 (EXP -> EXP menos EXP .)
    null            reduce using rule 178 (EXP -> EXP menos EXP .)
    unique          reduce using rule 178 (EXP -> EXP menos EXP .)
    references      reduce using rule 178 (EXP -> EXP menos EXP .)
    check           reduce using rule 178 (EXP -> EXP menos EXP .)
    default         reduce using rule 178 (EXP -> EXP menos EXP .)
    asc             reduce using rule 178 (EXP -> EXP menos EXP .)
    desc            reduce using rule 178 (EXP -> EXP menos EXP .)
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! multiplicacion  [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! elevado         [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 161

    (179) EXP -> EXP multiplicacion EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    mas             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    menos           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    and             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    or              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    mayor           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    menor           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    mayor_igual     reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    menor_igual     reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    igual           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    diferente1      reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    diferente2      reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    not             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    like            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    cadenaString    reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    cadena          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    end             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    else            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    unique          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    check           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    elevado         shift and go to state 96

  ! elevado         [ reduce using rule 179 (EXP -> EXP multiplicacion EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 162

    (180) EXP -> EXP division EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 180 (EXP -> EXP division EXP .)
    coma            reduce using rule 180 (EXP -> EXP division EXP .)
    where           reduce using rule 180 (EXP -> EXP division EXP .)
    group           reduce using rule 180 (EXP -> EXP division EXP .)
    having          reduce using rule 180 (EXP -> EXP division EXP .)
    union           reduce using rule 180 (EXP -> EXP division EXP .)
    intersect       reduce using rule 180 (EXP -> EXP division EXP .)
    except          reduce using rule 180 (EXP -> EXP division EXP .)
    order           reduce using rule 180 (EXP -> EXP division EXP .)
    limit           reduce using rule 180 (EXP -> EXP division EXP .)
    offset          reduce using rule 180 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 180 (EXP -> EXP division EXP .)
    mas             reduce using rule 180 (EXP -> EXP division EXP .)
    menos           reduce using rule 180 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 180 (EXP -> EXP division EXP .)
    division        reduce using rule 180 (EXP -> EXP division EXP .)
    modulo          reduce using rule 180 (EXP -> EXP division EXP .)
    and             reduce using rule 180 (EXP -> EXP division EXP .)
    or              reduce using rule 180 (EXP -> EXP division EXP .)
    mayor           reduce using rule 180 (EXP -> EXP division EXP .)
    menor           reduce using rule 180 (EXP -> EXP division EXP .)
    mayor_igual     reduce using rule 180 (EXP -> EXP division EXP .)
    menor_igual     reduce using rule 180 (EXP -> EXP division EXP .)
    igual           reduce using rule 180 (EXP -> EXP division EXP .)
    diferente1      reduce using rule 180 (EXP -> EXP division EXP .)
    diferente2      reduce using rule 180 (EXP -> EXP division EXP .)
    between         reduce using rule 180 (EXP -> EXP division EXP .)
    is              reduce using rule 180 (EXP -> EXP division EXP .)
    not             reduce using rule 180 (EXP -> EXP division EXP .)
    as              reduce using rule 180 (EXP -> EXP division EXP .)
    like            reduce using rule 180 (EXP -> EXP division EXP .)
    isnull          reduce using rule 180 (EXP -> EXP division EXP .)
    notnull         reduce using rule 180 (EXP -> EXP division EXP .)
    cadenaString    reduce using rule 180 (EXP -> EXP division EXP .)
    id              reduce using rule 180 (EXP -> EXP division EXP .)
    cadena          reduce using rule 180 (EXP -> EXP division EXP .)
    in              reduce using rule 180 (EXP -> EXP division EXP .)
    parc            reduce using rule 180 (EXP -> EXP division EXP .)
    then            reduce using rule 180 (EXP -> EXP division EXP .)
    end             reduce using rule 180 (EXP -> EXP division EXP .)
    else            reduce using rule 180 (EXP -> EXP division EXP .)
    when            reduce using rule 180 (EXP -> EXP division EXP .)
    constraint      reduce using rule 180 (EXP -> EXP division EXP .)
    primary         reduce using rule 180 (EXP -> EXP division EXP .)
    null            reduce using rule 180 (EXP -> EXP division EXP .)
    unique          reduce using rule 180 (EXP -> EXP division EXP .)
    references      reduce using rule 180 (EXP -> EXP division EXP .)
    check           reduce using rule 180 (EXP -> EXP division EXP .)
    default         reduce using rule 180 (EXP -> EXP division EXP .)
    asc             reduce using rule 180 (EXP -> EXP division EXP .)
    desc            reduce using rule 180 (EXP -> EXP division EXP .)
    elevado         shift and go to state 96

  ! elevado         [ reduce using rule 180 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 163

    (181) EXP -> EXP modulo EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 181 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 181 (EXP -> EXP modulo EXP .)
    where           reduce using rule 181 (EXP -> EXP modulo EXP .)
    group           reduce using rule 181 (EXP -> EXP modulo EXP .)
    having          reduce using rule 181 (EXP -> EXP modulo EXP .)
    union           reduce using rule 181 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 181 (EXP -> EXP modulo EXP .)
    except          reduce using rule 181 (EXP -> EXP modulo EXP .)
    order           reduce using rule 181 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 181 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 181 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 181 (EXP -> EXP modulo EXP .)
    mas             reduce using rule 181 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 181 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 181 (EXP -> EXP modulo EXP .)
    division        reduce using rule 181 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 181 (EXP -> EXP modulo EXP .)
    and             reduce using rule 181 (EXP -> EXP modulo EXP .)
    or              reduce using rule 181 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 181 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 181 (EXP -> EXP modulo EXP .)
    mayor_igual     reduce using rule 181 (EXP -> EXP modulo EXP .)
    menor_igual     reduce using rule 181 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 181 (EXP -> EXP modulo EXP .)
    diferente1      reduce using rule 181 (EXP -> EXP modulo EXP .)
    diferente2      reduce using rule 181 (EXP -> EXP modulo EXP .)
    between         reduce using rule 181 (EXP -> EXP modulo EXP .)
    is              reduce using rule 181 (EXP -> EXP modulo EXP .)
    not             reduce using rule 181 (EXP -> EXP modulo EXP .)
    as              reduce using rule 181 (EXP -> EXP modulo EXP .)
    like            reduce using rule 181 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 181 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 181 (EXP -> EXP modulo EXP .)
    cadenaString    reduce using rule 181 (EXP -> EXP modulo EXP .)
    id              reduce using rule 181 (EXP -> EXP modulo EXP .)
    cadena          reduce using rule 181 (EXP -> EXP modulo EXP .)
    in              reduce using rule 181 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 181 (EXP -> EXP modulo EXP .)
    then            reduce using rule 181 (EXP -> EXP modulo EXP .)
    end             reduce using rule 181 (EXP -> EXP modulo EXP .)
    else            reduce using rule 181 (EXP -> EXP modulo EXP .)
    when            reduce using rule 181 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 181 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 181 (EXP -> EXP modulo EXP .)
    null            reduce using rule 181 (EXP -> EXP modulo EXP .)
    unique          reduce using rule 181 (EXP -> EXP modulo EXP .)
    references      reduce using rule 181 (EXP -> EXP modulo EXP .)
    check           reduce using rule 181 (EXP -> EXP modulo EXP .)
    default         reduce using rule 181 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 181 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 181 (EXP -> EXP modulo EXP .)
    elevado         shift and go to state 96

  ! elevado         [ reduce using rule 181 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 164

    (182) EXP -> EXP elevado EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 182 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 182 (EXP -> EXP elevado EXP .)
    where           reduce using rule 182 (EXP -> EXP elevado EXP .)
    group           reduce using rule 182 (EXP -> EXP elevado EXP .)
    having          reduce using rule 182 (EXP -> EXP elevado EXP .)
    union           reduce using rule 182 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 182 (EXP -> EXP elevado EXP .)
    except          reduce using rule 182 (EXP -> EXP elevado EXP .)
    order           reduce using rule 182 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 182 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 182 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 182 (EXP -> EXP elevado EXP .)
    mas             reduce using rule 182 (EXP -> EXP elevado EXP .)
    menos           reduce using rule 182 (EXP -> EXP elevado EXP .)
    multiplicacion  reduce using rule 182 (EXP -> EXP elevado EXP .)
    division        reduce using rule 182 (EXP -> EXP elevado EXP .)
    modulo          reduce using rule 182 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 182 (EXP -> EXP elevado EXP .)
    and             reduce using rule 182 (EXP -> EXP elevado EXP .)
    or              reduce using rule 182 (EXP -> EXP elevado EXP .)
    mayor           reduce using rule 182 (EXP -> EXP elevado EXP .)
    menor           reduce using rule 182 (EXP -> EXP elevado EXP .)
    mayor_igual     reduce using rule 182 (EXP -> EXP elevado EXP .)
    menor_igual     reduce using rule 182 (EXP -> EXP elevado EXP .)
    igual           reduce using rule 182 (EXP -> EXP elevado EXP .)
    diferente1      reduce using rule 182 (EXP -> EXP elevado EXP .)
    diferente2      reduce using rule 182 (EXP -> EXP elevado EXP .)
    between         reduce using rule 182 (EXP -> EXP elevado EXP .)
    is              reduce using rule 182 (EXP -> EXP elevado EXP .)
    not             reduce using rule 182 (EXP -> EXP elevado EXP .)
    as              reduce using rule 182 (EXP -> EXP elevado EXP .)
    like            reduce using rule 182 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 182 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 182 (EXP -> EXP elevado EXP .)
    cadenaString    reduce using rule 182 (EXP -> EXP elevado EXP .)
    id              reduce using rule 182 (EXP -> EXP elevado EXP .)
    cadena          reduce using rule 182 (EXP -> EXP elevado EXP .)
    in              reduce using rule 182 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 182 (EXP -> EXP elevado EXP .)
    then            reduce using rule 182 (EXP -> EXP elevado EXP .)
    end             reduce using rule 182 (EXP -> EXP elevado EXP .)
    else            reduce using rule 182 (EXP -> EXP elevado EXP .)
    when            reduce using rule 182 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 182 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 182 (EXP -> EXP elevado EXP .)
    null            reduce using rule 182 (EXP -> EXP elevado EXP .)
    unique          reduce using rule 182 (EXP -> EXP elevado EXP .)
    references      reduce using rule 182 (EXP -> EXP elevado EXP .)
    check           reduce using rule 182 (EXP -> EXP elevado EXP .)
    default         reduce using rule 182 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 182 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 182 (EXP -> EXP elevado EXP .)

  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! elevado         [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 165

    (183) EXP -> EXP and EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 183 (EXP -> EXP and EXP .)
    coma            reduce using rule 183 (EXP -> EXP and EXP .)
    where           reduce using rule 183 (EXP -> EXP and EXP .)
    group           reduce using rule 183 (EXP -> EXP and EXP .)
    having          reduce using rule 183 (EXP -> EXP and EXP .)
    union           reduce using rule 183 (EXP -> EXP and EXP .)
    intersect       reduce using rule 183 (EXP -> EXP and EXP .)
    except          reduce using rule 183 (EXP -> EXP and EXP .)
    order           reduce using rule 183 (EXP -> EXP and EXP .)
    limit           reduce using rule 183 (EXP -> EXP and EXP .)
    offset          reduce using rule 183 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 183 (EXP -> EXP and EXP .)
    and             reduce using rule 183 (EXP -> EXP and EXP .)
    or              reduce using rule 183 (EXP -> EXP and EXP .)
    between         reduce using rule 183 (EXP -> EXP and EXP .)
    is              reduce using rule 183 (EXP -> EXP and EXP .)
    as              reduce using rule 183 (EXP -> EXP and EXP .)
    like            reduce using rule 183 (EXP -> EXP and EXP .)
    isnull          reduce using rule 183 (EXP -> EXP and EXP .)
    notnull         reduce using rule 183 (EXP -> EXP and EXP .)
    cadenaString    reduce using rule 183 (EXP -> EXP and EXP .)
    id              reduce using rule 183 (EXP -> EXP and EXP .)
    cadena          reduce using rule 183 (EXP -> EXP and EXP .)
    in              reduce using rule 183 (EXP -> EXP and EXP .)
    parc            reduce using rule 183 (EXP -> EXP and EXP .)
    then            reduce using rule 183 (EXP -> EXP and EXP .)
    end             reduce using rule 183 (EXP -> EXP and EXP .)
    else            reduce using rule 183 (EXP -> EXP and EXP .)
    when            reduce using rule 183 (EXP -> EXP and EXP .)
    constraint      reduce using rule 183 (EXP -> EXP and EXP .)
    primary         reduce using rule 183 (EXP -> EXP and EXP .)
    null            reduce using rule 183 (EXP -> EXP and EXP .)
    unique          reduce using rule 183 (EXP -> EXP and EXP .)
    references      reduce using rule 183 (EXP -> EXP and EXP .)
    check           reduce using rule 183 (EXP -> EXP and EXP .)
    default         reduce using rule 183 (EXP -> EXP and EXP .)
    asc             reduce using rule 183 (EXP -> EXP and EXP .)
    desc            reduce using rule 183 (EXP -> EXP and EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    not             shift and go to state 108

  ! mas             [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! multiplicacion  [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! elevado         [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! mayor_igual     [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! menor_igual     [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! diferente1      [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! diferente2      [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! not             [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 166

    (184) EXP -> EXP or EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 184 (EXP -> EXP or EXP .)
    coma            reduce using rule 184 (EXP -> EXP or EXP .)
    where           reduce using rule 184 (EXP -> EXP or EXP .)
    group           reduce using rule 184 (EXP -> EXP or EXP .)
    having          reduce using rule 184 (EXP -> EXP or EXP .)
    union           reduce using rule 184 (EXP -> EXP or EXP .)
    intersect       reduce using rule 184 (EXP -> EXP or EXP .)
    except          reduce using rule 184 (EXP -> EXP or EXP .)
    order           reduce using rule 184 (EXP -> EXP or EXP .)
    limit           reduce using rule 184 (EXP -> EXP or EXP .)
    offset          reduce using rule 184 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 184 (EXP -> EXP or EXP .)
    or              reduce using rule 184 (EXP -> EXP or EXP .)
    between         reduce using rule 184 (EXP -> EXP or EXP .)
    is              reduce using rule 184 (EXP -> EXP or EXP .)
    as              reduce using rule 184 (EXP -> EXP or EXP .)
    like            reduce using rule 184 (EXP -> EXP or EXP .)
    isnull          reduce using rule 184 (EXP -> EXP or EXP .)
    notnull         reduce using rule 184 (EXP -> EXP or EXP .)
    cadenaString    reduce using rule 184 (EXP -> EXP or EXP .)
    id              reduce using rule 184 (EXP -> EXP or EXP .)
    cadena          reduce using rule 184 (EXP -> EXP or EXP .)
    in              reduce using rule 184 (EXP -> EXP or EXP .)
    parc            reduce using rule 184 (EXP -> EXP or EXP .)
    then            reduce using rule 184 (EXP -> EXP or EXP .)
    end             reduce using rule 184 (EXP -> EXP or EXP .)
    else            reduce using rule 184 (EXP -> EXP or EXP .)
    when            reduce using rule 184 (EXP -> EXP or EXP .)
    constraint      reduce using rule 184 (EXP -> EXP or EXP .)
    primary         reduce using rule 184 (EXP -> EXP or EXP .)
    null            reduce using rule 184 (EXP -> EXP or EXP .)
    unique          reduce using rule 184 (EXP -> EXP or EXP .)
    references      reduce using rule 184 (EXP -> EXP or EXP .)
    check           reduce using rule 184 (EXP -> EXP or EXP .)
    default         reduce using rule 184 (EXP -> EXP or EXP .)
    asc             reduce using rule 184 (EXP -> EXP or EXP .)
    desc            reduce using rule 184 (EXP -> EXP or EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    not             shift and go to state 108

  ! mas             [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! multiplicacion  [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! elevado         [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! mayor_igual     [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! menor_igual     [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! diferente1      [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! diferente2      [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! not             [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 167

    (185) EXP -> EXP mayor EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 185 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 185 (EXP -> EXP mayor EXP .)
    where           reduce using rule 185 (EXP -> EXP mayor EXP .)
    group           reduce using rule 185 (EXP -> EXP mayor EXP .)
    having          reduce using rule 185 (EXP -> EXP mayor EXP .)
    union           reduce using rule 185 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 185 (EXP -> EXP mayor EXP .)
    except          reduce using rule 185 (EXP -> EXP mayor EXP .)
    order           reduce using rule 185 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 185 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 185 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 185 (EXP -> EXP mayor EXP .)
    and             reduce using rule 185 (EXP -> EXP mayor EXP .)
    or              reduce using rule 185 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 185 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 185 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 185 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 185 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 185 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 185 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 185 (EXP -> EXP mayor EXP .)
    between         reduce using rule 185 (EXP -> EXP mayor EXP .)
    is              reduce using rule 185 (EXP -> EXP mayor EXP .)
    not             reduce using rule 185 (EXP -> EXP mayor EXP .)
    as              reduce using rule 185 (EXP -> EXP mayor EXP .)
    like            reduce using rule 185 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 185 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 185 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 185 (EXP -> EXP mayor EXP .)
    id              reduce using rule 185 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 185 (EXP -> EXP mayor EXP .)
    in              reduce using rule 185 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 185 (EXP -> EXP mayor EXP .)
    then            reduce using rule 185 (EXP -> EXP mayor EXP .)
    end             reduce using rule 185 (EXP -> EXP mayor EXP .)
    else            reduce using rule 185 (EXP -> EXP mayor EXP .)
    when            reduce using rule 185 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 185 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 185 (EXP -> EXP mayor EXP .)
    null            reduce using rule 185 (EXP -> EXP mayor EXP .)
    unique          reduce using rule 185 (EXP -> EXP mayor EXP .)
    references      reduce using rule 185 (EXP -> EXP mayor EXP .)
    check           reduce using rule 185 (EXP -> EXP mayor EXP .)
    default         reduce using rule 185 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 185 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 185 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 168

    (186) EXP -> EXP menor EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 186 (EXP -> EXP menor EXP .)
    coma            reduce using rule 186 (EXP -> EXP menor EXP .)
    where           reduce using rule 186 (EXP -> EXP menor EXP .)
    group           reduce using rule 186 (EXP -> EXP menor EXP .)
    having          reduce using rule 186 (EXP -> EXP menor EXP .)
    union           reduce using rule 186 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 186 (EXP -> EXP menor EXP .)
    except          reduce using rule 186 (EXP -> EXP menor EXP .)
    order           reduce using rule 186 (EXP -> EXP menor EXP .)
    limit           reduce using rule 186 (EXP -> EXP menor EXP .)
    offset          reduce using rule 186 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 186 (EXP -> EXP menor EXP .)
    and             reduce using rule 186 (EXP -> EXP menor EXP .)
    or              reduce using rule 186 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 186 (EXP -> EXP menor EXP .)
    menor           reduce using rule 186 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 186 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 186 (EXP -> EXP menor EXP .)
    igual           reduce using rule 186 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 186 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 186 (EXP -> EXP menor EXP .)
    between         reduce using rule 186 (EXP -> EXP menor EXP .)
    is              reduce using rule 186 (EXP -> EXP menor EXP .)
    not             reduce using rule 186 (EXP -> EXP menor EXP .)
    as              reduce using rule 186 (EXP -> EXP menor EXP .)
    like            reduce using rule 186 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 186 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 186 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 186 (EXP -> EXP menor EXP .)
    id              reduce using rule 186 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 186 (EXP -> EXP menor EXP .)
    in              reduce using rule 186 (EXP -> EXP menor EXP .)
    parc            reduce using rule 186 (EXP -> EXP menor EXP .)
    then            reduce using rule 186 (EXP -> EXP menor EXP .)
    end             reduce using rule 186 (EXP -> EXP menor EXP .)
    else            reduce using rule 186 (EXP -> EXP menor EXP .)
    when            reduce using rule 186 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 186 (EXP -> EXP menor EXP .)
    primary         reduce using rule 186 (EXP -> EXP menor EXP .)
    null            reduce using rule 186 (EXP -> EXP menor EXP .)
    unique          reduce using rule 186 (EXP -> EXP menor EXP .)
    references      reduce using rule 186 (EXP -> EXP menor EXP .)
    check           reduce using rule 186 (EXP -> EXP menor EXP .)
    default         reduce using rule 186 (EXP -> EXP menor EXP .)
    asc             reduce using rule 186 (EXP -> EXP menor EXP .)
    desc            reduce using rule 186 (EXP -> EXP menor EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 169

    (187) EXP -> EXP mayor_igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    end             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    else            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    unique          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    check           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 170

    (188) EXP -> EXP menor_igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    end             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    else            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    unique          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    check           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 171

    (189) EXP -> EXP igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 189 (EXP -> EXP igual EXP .)
    coma            reduce using rule 189 (EXP -> EXP igual EXP .)
    where           reduce using rule 189 (EXP -> EXP igual EXP .)
    group           reduce using rule 189 (EXP -> EXP igual EXP .)
    having          reduce using rule 189 (EXP -> EXP igual EXP .)
    union           reduce using rule 189 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 189 (EXP -> EXP igual EXP .)
    except          reduce using rule 189 (EXP -> EXP igual EXP .)
    order           reduce using rule 189 (EXP -> EXP igual EXP .)
    limit           reduce using rule 189 (EXP -> EXP igual EXP .)
    offset          reduce using rule 189 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 189 (EXP -> EXP igual EXP .)
    and             reduce using rule 189 (EXP -> EXP igual EXP .)
    or              reduce using rule 189 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 189 (EXP -> EXP igual EXP .)
    menor           reduce using rule 189 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 189 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 189 (EXP -> EXP igual EXP .)
    igual           reduce using rule 189 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 189 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 189 (EXP -> EXP igual EXP .)
    between         reduce using rule 189 (EXP -> EXP igual EXP .)
    is              reduce using rule 189 (EXP -> EXP igual EXP .)
    not             reduce using rule 189 (EXP -> EXP igual EXP .)
    as              reduce using rule 189 (EXP -> EXP igual EXP .)
    like            reduce using rule 189 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 189 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 189 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 189 (EXP -> EXP igual EXP .)
    id              reduce using rule 189 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 189 (EXP -> EXP igual EXP .)
    in              reduce using rule 189 (EXP -> EXP igual EXP .)
    parc            reduce using rule 189 (EXP -> EXP igual EXP .)
    then            reduce using rule 189 (EXP -> EXP igual EXP .)
    end             reduce using rule 189 (EXP -> EXP igual EXP .)
    else            reduce using rule 189 (EXP -> EXP igual EXP .)
    when            reduce using rule 189 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 189 (EXP -> EXP igual EXP .)
    primary         reduce using rule 189 (EXP -> EXP igual EXP .)
    null            reduce using rule 189 (EXP -> EXP igual EXP .)
    unique          reduce using rule 189 (EXP -> EXP igual EXP .)
    references      reduce using rule 189 (EXP -> EXP igual EXP .)
    check           reduce using rule 189 (EXP -> EXP igual EXP .)
    default         reduce using rule 189 (EXP -> EXP igual EXP .)
    asc             reduce using rule 189 (EXP -> EXP igual EXP .)
    desc            reduce using rule 189 (EXP -> EXP igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 172

    (190) EXP -> EXP diferente1 EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    end             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    else            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    unique          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    check           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 173

    (191) EXP -> EXP diferente2 EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    end             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    else            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    unique          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    check           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 174

    (192) EXP -> EXP between EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 192 (EXP -> EXP between EXP .)
    coma            reduce using rule 192 (EXP -> EXP between EXP .)
    where           reduce using rule 192 (EXP -> EXP between EXP .)
    group           reduce using rule 192 (EXP -> EXP between EXP .)
    having          reduce using rule 192 (EXP -> EXP between EXP .)
    union           reduce using rule 192 (EXP -> EXP between EXP .)
    intersect       reduce using rule 192 (EXP -> EXP between EXP .)
    except          reduce using rule 192 (EXP -> EXP between EXP .)
    order           reduce using rule 192 (EXP -> EXP between EXP .)
    limit           reduce using rule 192 (EXP -> EXP between EXP .)
    offset          reduce using rule 192 (EXP -> EXP between EXP .)
    ptcoma          reduce using rule 192 (EXP -> EXP between EXP .)
    and             reduce using rule 192 (EXP -> EXP between EXP .)
    or              reduce using rule 192 (EXP -> EXP between EXP .)
    between         reduce using rule 192 (EXP -> EXP between EXP .)
    is              reduce using rule 192 (EXP -> EXP between EXP .)
    not             reduce using rule 192 (EXP -> EXP between EXP .)
    as              reduce using rule 192 (EXP -> EXP between EXP .)
    like            reduce using rule 192 (EXP -> EXP between EXP .)
    isnull          reduce using rule 192 (EXP -> EXP between EXP .)
    notnull         reduce using rule 192 (EXP -> EXP between EXP .)
    cadenaString    reduce using rule 192 (EXP -> EXP between EXP .)
    id              reduce using rule 192 (EXP -> EXP between EXP .)
    cadena          reduce using rule 192 (EXP -> EXP between EXP .)
    in              reduce using rule 192 (EXP -> EXP between EXP .)
    parc            reduce using rule 192 (EXP -> EXP between EXP .)
    then            reduce using rule 192 (EXP -> EXP between EXP .)
    end             reduce using rule 192 (EXP -> EXP between EXP .)
    else            reduce using rule 192 (EXP -> EXP between EXP .)
    when            reduce using rule 192 (EXP -> EXP between EXP .)
    constraint      reduce using rule 192 (EXP -> EXP between EXP .)
    primary         reduce using rule 192 (EXP -> EXP between EXP .)
    null            reduce using rule 192 (EXP -> EXP between EXP .)
    unique          reduce using rule 192 (EXP -> EXP between EXP .)
    references      reduce using rule 192 (EXP -> EXP between EXP .)
    check           reduce using rule 192 (EXP -> EXP between EXP .)
    default         reduce using rule 192 (EXP -> EXP between EXP .)
    asc             reduce using rule 192 (EXP -> EXP between EXP .)
    desc            reduce using rule 192 (EXP -> EXP between EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! menos           [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! multiplicacion  [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! division        [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! modulo          [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! elevado         [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! mayor           [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! menor           [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! mayor_igual     [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! menor_igual     [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! igual           [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! diferente1      [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! diferente2      [ reduce using rule 192 (EXP -> EXP between EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 175

    (215) EXP -> EXP between symetric . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 259
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 176

    (193) EXP -> EXP is not . null
    (194) EXP -> EXP is not . true
    (195) EXP -> EXP is not . false
    (196) EXP -> EXP is not . unknown
    (218) EXP -> EXP is not . distinct r_from EXP

    null            shift and go to state 260
    true            shift and go to state 261
    false           shift and go to state 262
    unknown         shift and go to state 263
    distinct        shift and go to state 264


state 177

    (198) EXP -> EXP is null .

    r_from          reduce using rule 198 (EXP -> EXP is null .)
    coma            reduce using rule 198 (EXP -> EXP is null .)
    where           reduce using rule 198 (EXP -> EXP is null .)
    group           reduce using rule 198 (EXP -> EXP is null .)
    having          reduce using rule 198 (EXP -> EXP is null .)
    union           reduce using rule 198 (EXP -> EXP is null .)
    intersect       reduce using rule 198 (EXP -> EXP is null .)
    except          reduce using rule 198 (EXP -> EXP is null .)
    order           reduce using rule 198 (EXP -> EXP is null .)
    limit           reduce using rule 198 (EXP -> EXP is null .)
    offset          reduce using rule 198 (EXP -> EXP is null .)
    ptcoma          reduce using rule 198 (EXP -> EXP is null .)
    mas             reduce using rule 198 (EXP -> EXP is null .)
    menos           reduce using rule 198 (EXP -> EXP is null .)
    multiplicacion  reduce using rule 198 (EXP -> EXP is null .)
    division        reduce using rule 198 (EXP -> EXP is null .)
    modulo          reduce using rule 198 (EXP -> EXP is null .)
    elevado         reduce using rule 198 (EXP -> EXP is null .)
    and             reduce using rule 198 (EXP -> EXP is null .)
    or              reduce using rule 198 (EXP -> EXP is null .)
    mayor           reduce using rule 198 (EXP -> EXP is null .)
    menor           reduce using rule 198 (EXP -> EXP is null .)
    mayor_igual     reduce using rule 198 (EXP -> EXP is null .)
    menor_igual     reduce using rule 198 (EXP -> EXP is null .)
    igual           reduce using rule 198 (EXP -> EXP is null .)
    diferente1      reduce using rule 198 (EXP -> EXP is null .)
    diferente2      reduce using rule 198 (EXP -> EXP is null .)
    between         reduce using rule 198 (EXP -> EXP is null .)
    is              reduce using rule 198 (EXP -> EXP is null .)
    not             reduce using rule 198 (EXP -> EXP is null .)
    as              reduce using rule 198 (EXP -> EXP is null .)
    like            reduce using rule 198 (EXP -> EXP is null .)
    isnull          reduce using rule 198 (EXP -> EXP is null .)
    notnull         reduce using rule 198 (EXP -> EXP is null .)
    cadenaString    reduce using rule 198 (EXP -> EXP is null .)
    id              reduce using rule 198 (EXP -> EXP is null .)
    cadena          reduce using rule 198 (EXP -> EXP is null .)
    in              reduce using rule 198 (EXP -> EXP is null .)
    parc            reduce using rule 198 (EXP -> EXP is null .)
    then            reduce using rule 198 (EXP -> EXP is null .)
    end             reduce using rule 198 (EXP -> EXP is null .)
    else            reduce using rule 198 (EXP -> EXP is null .)
    when            reduce using rule 198 (EXP -> EXP is null .)
    constraint      reduce using rule 198 (EXP -> EXP is null .)
    primary         reduce using rule 198 (EXP -> EXP is null .)
    null            reduce using rule 198 (EXP -> EXP is null .)
    unique          reduce using rule 198 (EXP -> EXP is null .)
    references      reduce using rule 198 (EXP -> EXP is null .)
    check           reduce using rule 198 (EXP -> EXP is null .)
    default         reduce using rule 198 (EXP -> EXP is null .)
    asc             reduce using rule 198 (EXP -> EXP is null .)
    desc            reduce using rule 198 (EXP -> EXP is null .)


state 178

    (199) EXP -> EXP is true .

    r_from          reduce using rule 199 (EXP -> EXP is true .)
    coma            reduce using rule 199 (EXP -> EXP is true .)
    where           reduce using rule 199 (EXP -> EXP is true .)
    group           reduce using rule 199 (EXP -> EXP is true .)
    having          reduce using rule 199 (EXP -> EXP is true .)
    union           reduce using rule 199 (EXP -> EXP is true .)
    intersect       reduce using rule 199 (EXP -> EXP is true .)
    except          reduce using rule 199 (EXP -> EXP is true .)
    order           reduce using rule 199 (EXP -> EXP is true .)
    limit           reduce using rule 199 (EXP -> EXP is true .)
    offset          reduce using rule 199 (EXP -> EXP is true .)
    ptcoma          reduce using rule 199 (EXP -> EXP is true .)
    mas             reduce using rule 199 (EXP -> EXP is true .)
    menos           reduce using rule 199 (EXP -> EXP is true .)
    multiplicacion  reduce using rule 199 (EXP -> EXP is true .)
    division        reduce using rule 199 (EXP -> EXP is true .)
    modulo          reduce using rule 199 (EXP -> EXP is true .)
    elevado         reduce using rule 199 (EXP -> EXP is true .)
    and             reduce using rule 199 (EXP -> EXP is true .)
    or              reduce using rule 199 (EXP -> EXP is true .)
    mayor           reduce using rule 199 (EXP -> EXP is true .)
    menor           reduce using rule 199 (EXP -> EXP is true .)
    mayor_igual     reduce using rule 199 (EXP -> EXP is true .)
    menor_igual     reduce using rule 199 (EXP -> EXP is true .)
    igual           reduce using rule 199 (EXP -> EXP is true .)
    diferente1      reduce using rule 199 (EXP -> EXP is true .)
    diferente2      reduce using rule 199 (EXP -> EXP is true .)
    between         reduce using rule 199 (EXP -> EXP is true .)
    is              reduce using rule 199 (EXP -> EXP is true .)
    not             reduce using rule 199 (EXP -> EXP is true .)
    as              reduce using rule 199 (EXP -> EXP is true .)
    like            reduce using rule 199 (EXP -> EXP is true .)
    isnull          reduce using rule 199 (EXP -> EXP is true .)
    notnull         reduce using rule 199 (EXP -> EXP is true .)
    cadenaString    reduce using rule 199 (EXP -> EXP is true .)
    id              reduce using rule 199 (EXP -> EXP is true .)
    cadena          reduce using rule 199 (EXP -> EXP is true .)
    in              reduce using rule 199 (EXP -> EXP is true .)
    parc            reduce using rule 199 (EXP -> EXP is true .)
    then            reduce using rule 199 (EXP -> EXP is true .)
    end             reduce using rule 199 (EXP -> EXP is true .)
    else            reduce using rule 199 (EXP -> EXP is true .)
    when            reduce using rule 199 (EXP -> EXP is true .)
    constraint      reduce using rule 199 (EXP -> EXP is true .)
    primary         reduce using rule 199 (EXP -> EXP is true .)
    null            reduce using rule 199 (EXP -> EXP is true .)
    unique          reduce using rule 199 (EXP -> EXP is true .)
    references      reduce using rule 199 (EXP -> EXP is true .)
    check           reduce using rule 199 (EXP -> EXP is true .)
    default         reduce using rule 199 (EXP -> EXP is true .)
    asc             reduce using rule 199 (EXP -> EXP is true .)
    desc            reduce using rule 199 (EXP -> EXP is true .)


state 179

    (205) EXP -> EXP is false .

    r_from          reduce using rule 205 (EXP -> EXP is false .)
    coma            reduce using rule 205 (EXP -> EXP is false .)
    where           reduce using rule 205 (EXP -> EXP is false .)
    group           reduce using rule 205 (EXP -> EXP is false .)
    having          reduce using rule 205 (EXP -> EXP is false .)
    union           reduce using rule 205 (EXP -> EXP is false .)
    intersect       reduce using rule 205 (EXP -> EXP is false .)
    except          reduce using rule 205 (EXP -> EXP is false .)
    order           reduce using rule 205 (EXP -> EXP is false .)
    limit           reduce using rule 205 (EXP -> EXP is false .)
    offset          reduce using rule 205 (EXP -> EXP is false .)
    ptcoma          reduce using rule 205 (EXP -> EXP is false .)
    mas             reduce using rule 205 (EXP -> EXP is false .)
    menos           reduce using rule 205 (EXP -> EXP is false .)
    multiplicacion  reduce using rule 205 (EXP -> EXP is false .)
    division        reduce using rule 205 (EXP -> EXP is false .)
    modulo          reduce using rule 205 (EXP -> EXP is false .)
    elevado         reduce using rule 205 (EXP -> EXP is false .)
    and             reduce using rule 205 (EXP -> EXP is false .)
    or              reduce using rule 205 (EXP -> EXP is false .)
    mayor           reduce using rule 205 (EXP -> EXP is false .)
    menor           reduce using rule 205 (EXP -> EXP is false .)
    mayor_igual     reduce using rule 205 (EXP -> EXP is false .)
    menor_igual     reduce using rule 205 (EXP -> EXP is false .)
    igual           reduce using rule 205 (EXP -> EXP is false .)
    diferente1      reduce using rule 205 (EXP -> EXP is false .)
    diferente2      reduce using rule 205 (EXP -> EXP is false .)
    between         reduce using rule 205 (EXP -> EXP is false .)
    is              reduce using rule 205 (EXP -> EXP is false .)
    not             reduce using rule 205 (EXP -> EXP is false .)
    as              reduce using rule 205 (EXP -> EXP is false .)
    like            reduce using rule 205 (EXP -> EXP is false .)
    isnull          reduce using rule 205 (EXP -> EXP is false .)
    notnull         reduce using rule 205 (EXP -> EXP is false .)
    cadenaString    reduce using rule 205 (EXP -> EXP is false .)
    id              reduce using rule 205 (EXP -> EXP is false .)
    cadena          reduce using rule 205 (EXP -> EXP is false .)
    in              reduce using rule 205 (EXP -> EXP is false .)
    parc            reduce using rule 205 (EXP -> EXP is false .)
    then            reduce using rule 205 (EXP -> EXP is false .)
    end             reduce using rule 205 (EXP -> EXP is false .)
    else            reduce using rule 205 (EXP -> EXP is false .)
    when            reduce using rule 205 (EXP -> EXP is false .)
    constraint      reduce using rule 205 (EXP -> EXP is false .)
    primary         reduce using rule 205 (EXP -> EXP is false .)
    null            reduce using rule 205 (EXP -> EXP is false .)
    unique          reduce using rule 205 (EXP -> EXP is false .)
    references      reduce using rule 205 (EXP -> EXP is false .)
    check           reduce using rule 205 (EXP -> EXP is false .)
    default         reduce using rule 205 (EXP -> EXP is false .)
    asc             reduce using rule 205 (EXP -> EXP is false .)
    desc            reduce using rule 205 (EXP -> EXP is false .)


state 180

    (200) EXP -> EXP is unknown .

    r_from          reduce using rule 200 (EXP -> EXP is unknown .)
    coma            reduce using rule 200 (EXP -> EXP is unknown .)
    where           reduce using rule 200 (EXP -> EXP is unknown .)
    group           reduce using rule 200 (EXP -> EXP is unknown .)
    having          reduce using rule 200 (EXP -> EXP is unknown .)
    union           reduce using rule 200 (EXP -> EXP is unknown .)
    intersect       reduce using rule 200 (EXP -> EXP is unknown .)
    except          reduce using rule 200 (EXP -> EXP is unknown .)
    order           reduce using rule 200 (EXP -> EXP is unknown .)
    limit           reduce using rule 200 (EXP -> EXP is unknown .)
    offset          reduce using rule 200 (EXP -> EXP is unknown .)
    ptcoma          reduce using rule 200 (EXP -> EXP is unknown .)
    mas             reduce using rule 200 (EXP -> EXP is unknown .)
    menos           reduce using rule 200 (EXP -> EXP is unknown .)
    multiplicacion  reduce using rule 200 (EXP -> EXP is unknown .)
    division        reduce using rule 200 (EXP -> EXP is unknown .)
    modulo          reduce using rule 200 (EXP -> EXP is unknown .)
    elevado         reduce using rule 200 (EXP -> EXP is unknown .)
    and             reduce using rule 200 (EXP -> EXP is unknown .)
    or              reduce using rule 200 (EXP -> EXP is unknown .)
    mayor           reduce using rule 200 (EXP -> EXP is unknown .)
    menor           reduce using rule 200 (EXP -> EXP is unknown .)
    mayor_igual     reduce using rule 200 (EXP -> EXP is unknown .)
    menor_igual     reduce using rule 200 (EXP -> EXP is unknown .)
    igual           reduce using rule 200 (EXP -> EXP is unknown .)
    diferente1      reduce using rule 200 (EXP -> EXP is unknown .)
    diferente2      reduce using rule 200 (EXP -> EXP is unknown .)
    between         reduce using rule 200 (EXP -> EXP is unknown .)
    is              reduce using rule 200 (EXP -> EXP is unknown .)
    not             reduce using rule 200 (EXP -> EXP is unknown .)
    as              reduce using rule 200 (EXP -> EXP is unknown .)
    like            reduce using rule 200 (EXP -> EXP is unknown .)
    isnull          reduce using rule 200 (EXP -> EXP is unknown .)
    notnull         reduce using rule 200 (EXP -> EXP is unknown .)
    cadenaString    reduce using rule 200 (EXP -> EXP is unknown .)
    id              reduce using rule 200 (EXP -> EXP is unknown .)
    cadena          reduce using rule 200 (EXP -> EXP is unknown .)
    in              reduce using rule 200 (EXP -> EXP is unknown .)
    parc            reduce using rule 200 (EXP -> EXP is unknown .)
    then            reduce using rule 200 (EXP -> EXP is unknown .)
    end             reduce using rule 200 (EXP -> EXP is unknown .)
    else            reduce using rule 200 (EXP -> EXP is unknown .)
    when            reduce using rule 200 (EXP -> EXP is unknown .)
    constraint      reduce using rule 200 (EXP -> EXP is unknown .)
    primary         reduce using rule 200 (EXP -> EXP is unknown .)
    null            reduce using rule 200 (EXP -> EXP is unknown .)
    unique          reduce using rule 200 (EXP -> EXP is unknown .)
    references      reduce using rule 200 (EXP -> EXP is unknown .)
    check           reduce using rule 200 (EXP -> EXP is unknown .)
    default         reduce using rule 200 (EXP -> EXP is unknown .)
    asc             reduce using rule 200 (EXP -> EXP is unknown .)
    desc            reduce using rule 200 (EXP -> EXP is unknown .)


state 181

    (219) EXP -> EXP is distinct . r_from EXP

    r_from          shift and go to state 265


state 182

    (197) EXP -> EXP not like . cadena

    cadena          shift and go to state 266


state 183

    (214) EXP -> EXP not between . EXP
    (220) EXP -> EXP not between . symetric EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 268
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 267
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 184

    (217) EXP -> EXP not in . para LEXP parc

    para            shift and go to state 269


state 185

    (204) EXP -> EXP like cadena .

    r_from          reduce using rule 204 (EXP -> EXP like cadena .)
    coma            reduce using rule 204 (EXP -> EXP like cadena .)
    where           reduce using rule 204 (EXP -> EXP like cadena .)
    group           reduce using rule 204 (EXP -> EXP like cadena .)
    having          reduce using rule 204 (EXP -> EXP like cadena .)
    union           reduce using rule 204 (EXP -> EXP like cadena .)
    intersect       reduce using rule 204 (EXP -> EXP like cadena .)
    except          reduce using rule 204 (EXP -> EXP like cadena .)
    order           reduce using rule 204 (EXP -> EXP like cadena .)
    limit           reduce using rule 204 (EXP -> EXP like cadena .)
    offset          reduce using rule 204 (EXP -> EXP like cadena .)
    ptcoma          reduce using rule 204 (EXP -> EXP like cadena .)
    mas             reduce using rule 204 (EXP -> EXP like cadena .)
    menos           reduce using rule 204 (EXP -> EXP like cadena .)
    multiplicacion  reduce using rule 204 (EXP -> EXP like cadena .)
    division        reduce using rule 204 (EXP -> EXP like cadena .)
    modulo          reduce using rule 204 (EXP -> EXP like cadena .)
    elevado         reduce using rule 204 (EXP -> EXP like cadena .)
    and             reduce using rule 204 (EXP -> EXP like cadena .)
    or              reduce using rule 204 (EXP -> EXP like cadena .)
    mayor           reduce using rule 204 (EXP -> EXP like cadena .)
    menor           reduce using rule 204 (EXP -> EXP like cadena .)
    mayor_igual     reduce using rule 204 (EXP -> EXP like cadena .)
    menor_igual     reduce using rule 204 (EXP -> EXP like cadena .)
    igual           reduce using rule 204 (EXP -> EXP like cadena .)
    diferente1      reduce using rule 204 (EXP -> EXP like cadena .)
    diferente2      reduce using rule 204 (EXP -> EXP like cadena .)
    between         reduce using rule 204 (EXP -> EXP like cadena .)
    is              reduce using rule 204 (EXP -> EXP like cadena .)
    not             reduce using rule 204 (EXP -> EXP like cadena .)
    as              reduce using rule 204 (EXP -> EXP like cadena .)
    like            reduce using rule 204 (EXP -> EXP like cadena .)
    isnull          reduce using rule 204 (EXP -> EXP like cadena .)
    notnull         reduce using rule 204 (EXP -> EXP like cadena .)
    cadenaString    reduce using rule 204 (EXP -> EXP like cadena .)
    id              reduce using rule 204 (EXP -> EXP like cadena .)
    cadena          reduce using rule 204 (EXP -> EXP like cadena .)
    in              reduce using rule 204 (EXP -> EXP like cadena .)
    parc            reduce using rule 204 (EXP -> EXP like cadena .)
    then            reduce using rule 204 (EXP -> EXP like cadena .)
    end             reduce using rule 204 (EXP -> EXP like cadena .)
    else            reduce using rule 204 (EXP -> EXP like cadena .)
    when            reduce using rule 204 (EXP -> EXP like cadena .)
    constraint      reduce using rule 204 (EXP -> EXP like cadena .)
    primary         reduce using rule 204 (EXP -> EXP like cadena .)
    null            reduce using rule 204 (EXP -> EXP like cadena .)
    unique          reduce using rule 204 (EXP -> EXP like cadena .)
    references      reduce using rule 204 (EXP -> EXP like cadena .)
    check           reduce using rule 204 (EXP -> EXP like cadena .)
    default         reduce using rule 204 (EXP -> EXP like cadena .)
    asc             reduce using rule 204 (EXP -> EXP like cadena .)
    desc            reduce using rule 204 (EXP -> EXP like cadena .)


state 186

    (201) EXP -> EXP as cadena .

    r_from          reduce using rule 201 (EXP -> EXP as cadena .)
    coma            reduce using rule 201 (EXP -> EXP as cadena .)
    where           reduce using rule 201 (EXP -> EXP as cadena .)
    group           reduce using rule 201 (EXP -> EXP as cadena .)
    having          reduce using rule 201 (EXP -> EXP as cadena .)
    union           reduce using rule 201 (EXP -> EXP as cadena .)
    intersect       reduce using rule 201 (EXP -> EXP as cadena .)
    except          reduce using rule 201 (EXP -> EXP as cadena .)
    order           reduce using rule 201 (EXP -> EXP as cadena .)
    limit           reduce using rule 201 (EXP -> EXP as cadena .)
    offset          reduce using rule 201 (EXP -> EXP as cadena .)
    ptcoma          reduce using rule 201 (EXP -> EXP as cadena .)
    mas             reduce using rule 201 (EXP -> EXP as cadena .)
    menos           reduce using rule 201 (EXP -> EXP as cadena .)
    multiplicacion  reduce using rule 201 (EXP -> EXP as cadena .)
    division        reduce using rule 201 (EXP -> EXP as cadena .)
    modulo          reduce using rule 201 (EXP -> EXP as cadena .)
    elevado         reduce using rule 201 (EXP -> EXP as cadena .)
    and             reduce using rule 201 (EXP -> EXP as cadena .)
    or              reduce using rule 201 (EXP -> EXP as cadena .)
    mayor           reduce using rule 201 (EXP -> EXP as cadena .)
    menor           reduce using rule 201 (EXP -> EXP as cadena .)
    mayor_igual     reduce using rule 201 (EXP -> EXP as cadena .)
    menor_igual     reduce using rule 201 (EXP -> EXP as cadena .)
    igual           reduce using rule 201 (EXP -> EXP as cadena .)
    diferente1      reduce using rule 201 (EXP -> EXP as cadena .)
    diferente2      reduce using rule 201 (EXP -> EXP as cadena .)
    between         reduce using rule 201 (EXP -> EXP as cadena .)
    is              reduce using rule 201 (EXP -> EXP as cadena .)
    not             reduce using rule 201 (EXP -> EXP as cadena .)
    as              reduce using rule 201 (EXP -> EXP as cadena .)
    like            reduce using rule 201 (EXP -> EXP as cadena .)
    isnull          reduce using rule 201 (EXP -> EXP as cadena .)
    notnull         reduce using rule 201 (EXP -> EXP as cadena .)
    cadenaString    reduce using rule 201 (EXP -> EXP as cadena .)
    id              reduce using rule 201 (EXP -> EXP as cadena .)
    cadena          reduce using rule 201 (EXP -> EXP as cadena .)
    in              reduce using rule 201 (EXP -> EXP as cadena .)
    parc            reduce using rule 201 (EXP -> EXP as cadena .)
    then            reduce using rule 201 (EXP -> EXP as cadena .)
    end             reduce using rule 201 (EXP -> EXP as cadena .)
    else            reduce using rule 201 (EXP -> EXP as cadena .)
    when            reduce using rule 201 (EXP -> EXP as cadena .)
    constraint      reduce using rule 201 (EXP -> EXP as cadena .)
    primary         reduce using rule 201 (EXP -> EXP as cadena .)
    null            reduce using rule 201 (EXP -> EXP as cadena .)
    unique          reduce using rule 201 (EXP -> EXP as cadena .)
    references      reduce using rule 201 (EXP -> EXP as cadena .)
    check           reduce using rule 201 (EXP -> EXP as cadena .)
    default         reduce using rule 201 (EXP -> EXP as cadena .)
    asc             reduce using rule 201 (EXP -> EXP as cadena .)
    desc            reduce using rule 201 (EXP -> EXP as cadena .)


state 187

    (202) EXP -> EXP as id .

    r_from          reduce using rule 202 (EXP -> EXP as id .)
    coma            reduce using rule 202 (EXP -> EXP as id .)
    where           reduce using rule 202 (EXP -> EXP as id .)
    group           reduce using rule 202 (EXP -> EXP as id .)
    having          reduce using rule 202 (EXP -> EXP as id .)
    union           reduce using rule 202 (EXP -> EXP as id .)
    intersect       reduce using rule 202 (EXP -> EXP as id .)
    except          reduce using rule 202 (EXP -> EXP as id .)
    order           reduce using rule 202 (EXP -> EXP as id .)
    limit           reduce using rule 202 (EXP -> EXP as id .)
    offset          reduce using rule 202 (EXP -> EXP as id .)
    ptcoma          reduce using rule 202 (EXP -> EXP as id .)
    mas             reduce using rule 202 (EXP -> EXP as id .)
    menos           reduce using rule 202 (EXP -> EXP as id .)
    multiplicacion  reduce using rule 202 (EXP -> EXP as id .)
    division        reduce using rule 202 (EXP -> EXP as id .)
    modulo          reduce using rule 202 (EXP -> EXP as id .)
    elevado         reduce using rule 202 (EXP -> EXP as id .)
    and             reduce using rule 202 (EXP -> EXP as id .)
    or              reduce using rule 202 (EXP -> EXP as id .)
    mayor           reduce using rule 202 (EXP -> EXP as id .)
    menor           reduce using rule 202 (EXP -> EXP as id .)
    mayor_igual     reduce using rule 202 (EXP -> EXP as id .)
    menor_igual     reduce using rule 202 (EXP -> EXP as id .)
    igual           reduce using rule 202 (EXP -> EXP as id .)
    diferente1      reduce using rule 202 (EXP -> EXP as id .)
    diferente2      reduce using rule 202 (EXP -> EXP as id .)
    between         reduce using rule 202 (EXP -> EXP as id .)
    is              reduce using rule 202 (EXP -> EXP as id .)
    not             reduce using rule 202 (EXP -> EXP as id .)
    as              reduce using rule 202 (EXP -> EXP as id .)
    like            reduce using rule 202 (EXP -> EXP as id .)
    isnull          reduce using rule 202 (EXP -> EXP as id .)
    notnull         reduce using rule 202 (EXP -> EXP as id .)
    cadenaString    reduce using rule 202 (EXP -> EXP as id .)
    id              reduce using rule 202 (EXP -> EXP as id .)
    cadena          reduce using rule 202 (EXP -> EXP as id .)
    in              reduce using rule 202 (EXP -> EXP as id .)
    parc            reduce using rule 202 (EXP -> EXP as id .)
    then            reduce using rule 202 (EXP -> EXP as id .)
    end             reduce using rule 202 (EXP -> EXP as id .)
    else            reduce using rule 202 (EXP -> EXP as id .)
    when            reduce using rule 202 (EXP -> EXP as id .)
    constraint      reduce using rule 202 (EXP -> EXP as id .)
    primary         reduce using rule 202 (EXP -> EXP as id .)
    null            reduce using rule 202 (EXP -> EXP as id .)
    unique          reduce using rule 202 (EXP -> EXP as id .)
    references      reduce using rule 202 (EXP -> EXP as id .)
    check           reduce using rule 202 (EXP -> EXP as id .)
    default         reduce using rule 202 (EXP -> EXP as id .)
    asc             reduce using rule 202 (EXP -> EXP as id .)
    desc            reduce using rule 202 (EXP -> EXP as id .)


state 188

    (203) EXP -> EXP as cadenaString .

    r_from          reduce using rule 203 (EXP -> EXP as cadenaString .)
    coma            reduce using rule 203 (EXP -> EXP as cadenaString .)
    where           reduce using rule 203 (EXP -> EXP as cadenaString .)
    group           reduce using rule 203 (EXP -> EXP as cadenaString .)
    having          reduce using rule 203 (EXP -> EXP as cadenaString .)
    union           reduce using rule 203 (EXP -> EXP as cadenaString .)
    intersect       reduce using rule 203 (EXP -> EXP as cadenaString .)
    except          reduce using rule 203 (EXP -> EXP as cadenaString .)
    order           reduce using rule 203 (EXP -> EXP as cadenaString .)
    limit           reduce using rule 203 (EXP -> EXP as cadenaString .)
    offset          reduce using rule 203 (EXP -> EXP as cadenaString .)
    ptcoma          reduce using rule 203 (EXP -> EXP as cadenaString .)
    mas             reduce using rule 203 (EXP -> EXP as cadenaString .)
    menos           reduce using rule 203 (EXP -> EXP as cadenaString .)
    multiplicacion  reduce using rule 203 (EXP -> EXP as cadenaString .)
    division        reduce using rule 203 (EXP -> EXP as cadenaString .)
    modulo          reduce using rule 203 (EXP -> EXP as cadenaString .)
    elevado         reduce using rule 203 (EXP -> EXP as cadenaString .)
    and             reduce using rule 203 (EXP -> EXP as cadenaString .)
    or              reduce using rule 203 (EXP -> EXP as cadenaString .)
    mayor           reduce using rule 203 (EXP -> EXP as cadenaString .)
    menor           reduce using rule 203 (EXP -> EXP as cadenaString .)
    mayor_igual     reduce using rule 203 (EXP -> EXP as cadenaString .)
    menor_igual     reduce using rule 203 (EXP -> EXP as cadenaString .)
    igual           reduce using rule 203 (EXP -> EXP as cadenaString .)
    diferente1      reduce using rule 203 (EXP -> EXP as cadenaString .)
    diferente2      reduce using rule 203 (EXP -> EXP as cadenaString .)
    between         reduce using rule 203 (EXP -> EXP as cadenaString .)
    is              reduce using rule 203 (EXP -> EXP as cadenaString .)
    not             reduce using rule 203 (EXP -> EXP as cadenaString .)
    as              reduce using rule 203 (EXP -> EXP as cadenaString .)
    like            reduce using rule 203 (EXP -> EXP as cadenaString .)
    isnull          reduce using rule 203 (EXP -> EXP as cadenaString .)
    notnull         reduce using rule 203 (EXP -> EXP as cadenaString .)
    cadenaString    reduce using rule 203 (EXP -> EXP as cadenaString .)
    id              reduce using rule 203 (EXP -> EXP as cadenaString .)
    cadena          reduce using rule 203 (EXP -> EXP as cadenaString .)
    in              reduce using rule 203 (EXP -> EXP as cadenaString .)
    parc            reduce using rule 203 (EXP -> EXP as cadenaString .)
    then            reduce using rule 203 (EXP -> EXP as cadenaString .)
    end             reduce using rule 203 (EXP -> EXP as cadenaString .)
    else            reduce using rule 203 (EXP -> EXP as cadenaString .)
    when            reduce using rule 203 (EXP -> EXP as cadenaString .)
    constraint      reduce using rule 203 (EXP -> EXP as cadenaString .)
    primary         reduce using rule 203 (EXP -> EXP as cadenaString .)
    null            reduce using rule 203 (EXP -> EXP as cadenaString .)
    unique          reduce using rule 203 (EXP -> EXP as cadenaString .)
    references      reduce using rule 203 (EXP -> EXP as cadenaString .)
    check           reduce using rule 203 (EXP -> EXP as cadenaString .)
    default         reduce using rule 203 (EXP -> EXP as cadenaString .)
    asc             reduce using rule 203 (EXP -> EXP as cadenaString .)
    desc            reduce using rule 203 (EXP -> EXP as cadenaString .)


state 189

    (216) EXP -> EXP in para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 40
    LEXP                           shift and go to state 270
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 190

    (230) EXP -> cadena as TIPO .

    r_from          reduce using rule 230 (EXP -> cadena as TIPO .)
    coma            reduce using rule 230 (EXP -> cadena as TIPO .)
    where           reduce using rule 230 (EXP -> cadena as TIPO .)
    group           reduce using rule 230 (EXP -> cadena as TIPO .)
    having          reduce using rule 230 (EXP -> cadena as TIPO .)
    union           reduce using rule 230 (EXP -> cadena as TIPO .)
    intersect       reduce using rule 230 (EXP -> cadena as TIPO .)
    except          reduce using rule 230 (EXP -> cadena as TIPO .)
    order           reduce using rule 230 (EXP -> cadena as TIPO .)
    limit           reduce using rule 230 (EXP -> cadena as TIPO .)
    offset          reduce using rule 230 (EXP -> cadena as TIPO .)
    ptcoma          reduce using rule 230 (EXP -> cadena as TIPO .)
    mas             reduce using rule 230 (EXP -> cadena as TIPO .)
    menos           reduce using rule 230 (EXP -> cadena as TIPO .)
    multiplicacion  reduce using rule 230 (EXP -> cadena as TIPO .)
    division        reduce using rule 230 (EXP -> cadena as TIPO .)
    modulo          reduce using rule 230 (EXP -> cadena as TIPO .)
    elevado         reduce using rule 230 (EXP -> cadena as TIPO .)
    and             reduce using rule 230 (EXP -> cadena as TIPO .)
    or              reduce using rule 230 (EXP -> cadena as TIPO .)
    mayor           reduce using rule 230 (EXP -> cadena as TIPO .)
    menor           reduce using rule 230 (EXP -> cadena as TIPO .)
    mayor_igual     reduce using rule 230 (EXP -> cadena as TIPO .)
    menor_igual     reduce using rule 230 (EXP -> cadena as TIPO .)
    igual           reduce using rule 230 (EXP -> cadena as TIPO .)
    diferente1      reduce using rule 230 (EXP -> cadena as TIPO .)
    diferente2      reduce using rule 230 (EXP -> cadena as TIPO .)
    between         reduce using rule 230 (EXP -> cadena as TIPO .)
    is              reduce using rule 230 (EXP -> cadena as TIPO .)
    not             reduce using rule 230 (EXP -> cadena as TIPO .)
    as              reduce using rule 230 (EXP -> cadena as TIPO .)
    like            reduce using rule 230 (EXP -> cadena as TIPO .)
    isnull          reduce using rule 230 (EXP -> cadena as TIPO .)
    notnull         reduce using rule 230 (EXP -> cadena as TIPO .)
    cadenaString    reduce using rule 230 (EXP -> cadena as TIPO .)
    id              reduce using rule 230 (EXP -> cadena as TIPO .)
    cadena          reduce using rule 230 (EXP -> cadena as TIPO .)
    in              reduce using rule 230 (EXP -> cadena as TIPO .)
    parc            reduce using rule 230 (EXP -> cadena as TIPO .)
    then            reduce using rule 230 (EXP -> cadena as TIPO .)
    end             reduce using rule 230 (EXP -> cadena as TIPO .)
    else            reduce using rule 230 (EXP -> cadena as TIPO .)
    when            reduce using rule 230 (EXP -> cadena as TIPO .)
    constraint      reduce using rule 230 (EXP -> cadena as TIPO .)
    primary         reduce using rule 230 (EXP -> cadena as TIPO .)
    null            reduce using rule 230 (EXP -> cadena as TIPO .)
    unique          reduce using rule 230 (EXP -> cadena as TIPO .)
    references      reduce using rule 230 (EXP -> cadena as TIPO .)
    check           reduce using rule 230 (EXP -> cadena as TIPO .)
    default         reduce using rule 230 (EXP -> cadena as TIPO .)
    asc             reduce using rule 230 (EXP -> cadena as TIPO .)
    desc            reduce using rule 230 (EXP -> cadena as TIPO .)


state 191

    (137) TIPO -> decimal . para LEXP parc
    (164) TIPO -> decimal .

    para            shift and go to state 271
    r_from          reduce using rule 164 (TIPO -> decimal .)
    coma            reduce using rule 164 (TIPO -> decimal .)
    where           reduce using rule 164 (TIPO -> decimal .)
    group           reduce using rule 164 (TIPO -> decimal .)
    having          reduce using rule 164 (TIPO -> decimal .)
    union           reduce using rule 164 (TIPO -> decimal .)
    intersect       reduce using rule 164 (TIPO -> decimal .)
    except          reduce using rule 164 (TIPO -> decimal .)
    order           reduce using rule 164 (TIPO -> decimal .)
    limit           reduce using rule 164 (TIPO -> decimal .)
    offset          reduce using rule 164 (TIPO -> decimal .)
    ptcoma          reduce using rule 164 (TIPO -> decimal .)
    mas             reduce using rule 164 (TIPO -> decimal .)
    menos           reduce using rule 164 (TIPO -> decimal .)
    multiplicacion  reduce using rule 164 (TIPO -> decimal .)
    division        reduce using rule 164 (TIPO -> decimal .)
    modulo          reduce using rule 164 (TIPO -> decimal .)
    elevado         reduce using rule 164 (TIPO -> decimal .)
    and             reduce using rule 164 (TIPO -> decimal .)
    or              reduce using rule 164 (TIPO -> decimal .)
    mayor           reduce using rule 164 (TIPO -> decimal .)
    menor           reduce using rule 164 (TIPO -> decimal .)
    mayor_igual     reduce using rule 164 (TIPO -> decimal .)
    menor_igual     reduce using rule 164 (TIPO -> decimal .)
    igual           reduce using rule 164 (TIPO -> decimal .)
    diferente1      reduce using rule 164 (TIPO -> decimal .)
    diferente2      reduce using rule 164 (TIPO -> decimal .)
    between         reduce using rule 164 (TIPO -> decimal .)
    is              reduce using rule 164 (TIPO -> decimal .)
    not             reduce using rule 164 (TIPO -> decimal .)
    as              reduce using rule 164 (TIPO -> decimal .)
    like            reduce using rule 164 (TIPO -> decimal .)
    isnull          reduce using rule 164 (TIPO -> decimal .)
    notnull         reduce using rule 164 (TIPO -> decimal .)
    cadenaString    reduce using rule 164 (TIPO -> decimal .)
    id              reduce using rule 164 (TIPO -> decimal .)
    cadena          reduce using rule 164 (TIPO -> decimal .)
    in              reduce using rule 164 (TIPO -> decimal .)
    parc            reduce using rule 164 (TIPO -> decimal .)
    then            reduce using rule 164 (TIPO -> decimal .)
    end             reduce using rule 164 (TIPO -> decimal .)
    else            reduce using rule 164 (TIPO -> decimal .)
    when            reduce using rule 164 (TIPO -> decimal .)
    constraint      reduce using rule 164 (TIPO -> decimal .)
    primary         reduce using rule 164 (TIPO -> decimal .)
    null            reduce using rule 164 (TIPO -> decimal .)
    unique          reduce using rule 164 (TIPO -> decimal .)
    references      reduce using rule 164 (TIPO -> decimal .)
    check           reduce using rule 164 (TIPO -> decimal .)
    default         reduce using rule 164 (TIPO -> decimal .)
    asc             reduce using rule 164 (TIPO -> decimal .)
    desc            reduce using rule 164 (TIPO -> decimal .)


state 192

    (138) TIPO -> numeric . para LEXP parc
    (165) TIPO -> numeric .

    para            shift and go to state 272
    r_from          reduce using rule 165 (TIPO -> numeric .)
    coma            reduce using rule 165 (TIPO -> numeric .)
    where           reduce using rule 165 (TIPO -> numeric .)
    group           reduce using rule 165 (TIPO -> numeric .)
    having          reduce using rule 165 (TIPO -> numeric .)
    union           reduce using rule 165 (TIPO -> numeric .)
    intersect       reduce using rule 165 (TIPO -> numeric .)
    except          reduce using rule 165 (TIPO -> numeric .)
    order           reduce using rule 165 (TIPO -> numeric .)
    limit           reduce using rule 165 (TIPO -> numeric .)
    offset          reduce using rule 165 (TIPO -> numeric .)
    ptcoma          reduce using rule 165 (TIPO -> numeric .)
    mas             reduce using rule 165 (TIPO -> numeric .)
    menos           reduce using rule 165 (TIPO -> numeric .)
    multiplicacion  reduce using rule 165 (TIPO -> numeric .)
    division        reduce using rule 165 (TIPO -> numeric .)
    modulo          reduce using rule 165 (TIPO -> numeric .)
    elevado         reduce using rule 165 (TIPO -> numeric .)
    and             reduce using rule 165 (TIPO -> numeric .)
    or              reduce using rule 165 (TIPO -> numeric .)
    mayor           reduce using rule 165 (TIPO -> numeric .)
    menor           reduce using rule 165 (TIPO -> numeric .)
    mayor_igual     reduce using rule 165 (TIPO -> numeric .)
    menor_igual     reduce using rule 165 (TIPO -> numeric .)
    igual           reduce using rule 165 (TIPO -> numeric .)
    diferente1      reduce using rule 165 (TIPO -> numeric .)
    diferente2      reduce using rule 165 (TIPO -> numeric .)
    between         reduce using rule 165 (TIPO -> numeric .)
    is              reduce using rule 165 (TIPO -> numeric .)
    not             reduce using rule 165 (TIPO -> numeric .)
    as              reduce using rule 165 (TIPO -> numeric .)
    like            reduce using rule 165 (TIPO -> numeric .)
    isnull          reduce using rule 165 (TIPO -> numeric .)
    notnull         reduce using rule 165 (TIPO -> numeric .)
    cadenaString    reduce using rule 165 (TIPO -> numeric .)
    id              reduce using rule 165 (TIPO -> numeric .)
    cadena          reduce using rule 165 (TIPO -> numeric .)
    in              reduce using rule 165 (TIPO -> numeric .)
    parc            reduce using rule 165 (TIPO -> numeric .)
    then            reduce using rule 165 (TIPO -> numeric .)
    end             reduce using rule 165 (TIPO -> numeric .)
    else            reduce using rule 165 (TIPO -> numeric .)
    when            reduce using rule 165 (TIPO -> numeric .)
    constraint      reduce using rule 165 (TIPO -> numeric .)
    primary         reduce using rule 165 (TIPO -> numeric .)
    null            reduce using rule 165 (TIPO -> numeric .)
    unique          reduce using rule 165 (TIPO -> numeric .)
    references      reduce using rule 165 (TIPO -> numeric .)
    check           reduce using rule 165 (TIPO -> numeric .)
    default         reduce using rule 165 (TIPO -> numeric .)
    asc             reduce using rule 165 (TIPO -> numeric .)
    desc            reduce using rule 165 (TIPO -> numeric .)


state 193

    (139) TIPO -> varchar . para int parc

    para            shift and go to state 273


state 194

    (140) TIPO -> timestamp . para int parc
    (147) TIPO -> timestamp . para int parc without time zone
    (148) TIPO -> timestamp . para int parc with time zone
    (159) TIPO -> timestamp .
    (167) TIPO -> timestamp . without time zone
    (168) TIPO -> timestamp . with time zone

    para            shift and go to state 274
    r_from          reduce using rule 159 (TIPO -> timestamp .)
    coma            reduce using rule 159 (TIPO -> timestamp .)
    where           reduce using rule 159 (TIPO -> timestamp .)
    group           reduce using rule 159 (TIPO -> timestamp .)
    having          reduce using rule 159 (TIPO -> timestamp .)
    union           reduce using rule 159 (TIPO -> timestamp .)
    intersect       reduce using rule 159 (TIPO -> timestamp .)
    except          reduce using rule 159 (TIPO -> timestamp .)
    order           reduce using rule 159 (TIPO -> timestamp .)
    limit           reduce using rule 159 (TIPO -> timestamp .)
    offset          reduce using rule 159 (TIPO -> timestamp .)
    ptcoma          reduce using rule 159 (TIPO -> timestamp .)
    mas             reduce using rule 159 (TIPO -> timestamp .)
    menos           reduce using rule 159 (TIPO -> timestamp .)
    multiplicacion  reduce using rule 159 (TIPO -> timestamp .)
    division        reduce using rule 159 (TIPO -> timestamp .)
    modulo          reduce using rule 159 (TIPO -> timestamp .)
    elevado         reduce using rule 159 (TIPO -> timestamp .)
    and             reduce using rule 159 (TIPO -> timestamp .)
    or              reduce using rule 159 (TIPO -> timestamp .)
    mayor           reduce using rule 159 (TIPO -> timestamp .)
    menor           reduce using rule 159 (TIPO -> timestamp .)
    mayor_igual     reduce using rule 159 (TIPO -> timestamp .)
    menor_igual     reduce using rule 159 (TIPO -> timestamp .)
    igual           reduce using rule 159 (TIPO -> timestamp .)
    diferente1      reduce using rule 159 (TIPO -> timestamp .)
    diferente2      reduce using rule 159 (TIPO -> timestamp .)
    between         reduce using rule 159 (TIPO -> timestamp .)
    is              reduce using rule 159 (TIPO -> timestamp .)
    not             reduce using rule 159 (TIPO -> timestamp .)
    as              reduce using rule 159 (TIPO -> timestamp .)
    like            reduce using rule 159 (TIPO -> timestamp .)
    isnull          reduce using rule 159 (TIPO -> timestamp .)
    notnull         reduce using rule 159 (TIPO -> timestamp .)
    cadenaString    reduce using rule 159 (TIPO -> timestamp .)
    id              reduce using rule 159 (TIPO -> timestamp .)
    cadena          reduce using rule 159 (TIPO -> timestamp .)
    in              reduce using rule 159 (TIPO -> timestamp .)
    parc            reduce using rule 159 (TIPO -> timestamp .)
    then            reduce using rule 159 (TIPO -> timestamp .)
    end             reduce using rule 159 (TIPO -> timestamp .)
    else            reduce using rule 159 (TIPO -> timestamp .)
    when            reduce using rule 159 (TIPO -> timestamp .)
    constraint      reduce using rule 159 (TIPO -> timestamp .)
    primary         reduce using rule 159 (TIPO -> timestamp .)
    null            reduce using rule 159 (TIPO -> timestamp .)
    unique          reduce using rule 159 (TIPO -> timestamp .)
    references      reduce using rule 159 (TIPO -> timestamp .)
    check           reduce using rule 159 (TIPO -> timestamp .)
    default         reduce using rule 159 (TIPO -> timestamp .)
    asc             reduce using rule 159 (TIPO -> timestamp .)
    desc            reduce using rule 159 (TIPO -> timestamp .)
    without         shift and go to state 275
    with            shift and go to state 276


state 195

    (141) TIPO -> character . para int parc
    (145) TIPO -> character . varying para int parc

    para            shift and go to state 277
    varying         shift and go to state 278


state 196

    (142) TIPO -> interval . para int parc
    (146) TIPO -> interval . cadena
    (151) TIPO -> interval . para int parc cadena
    (162) TIPO -> interval .

  ! shift/reduce conflict for cadena resolved as shift
    para            shift and go to state 279
    cadena          shift and go to state 280
    r_from          reduce using rule 162 (TIPO -> interval .)
    coma            reduce using rule 162 (TIPO -> interval .)
    where           reduce using rule 162 (TIPO -> interval .)
    group           reduce using rule 162 (TIPO -> interval .)
    having          reduce using rule 162 (TIPO -> interval .)
    union           reduce using rule 162 (TIPO -> interval .)
    intersect       reduce using rule 162 (TIPO -> interval .)
    except          reduce using rule 162 (TIPO -> interval .)
    order           reduce using rule 162 (TIPO -> interval .)
    limit           reduce using rule 162 (TIPO -> interval .)
    offset          reduce using rule 162 (TIPO -> interval .)
    ptcoma          reduce using rule 162 (TIPO -> interval .)
    mas             reduce using rule 162 (TIPO -> interval .)
    menos           reduce using rule 162 (TIPO -> interval .)
    multiplicacion  reduce using rule 162 (TIPO -> interval .)
    division        reduce using rule 162 (TIPO -> interval .)
    modulo          reduce using rule 162 (TIPO -> interval .)
    elevado         reduce using rule 162 (TIPO -> interval .)
    and             reduce using rule 162 (TIPO -> interval .)
    or              reduce using rule 162 (TIPO -> interval .)
    mayor           reduce using rule 162 (TIPO -> interval .)
    menor           reduce using rule 162 (TIPO -> interval .)
    mayor_igual     reduce using rule 162 (TIPO -> interval .)
    menor_igual     reduce using rule 162 (TIPO -> interval .)
    igual           reduce using rule 162 (TIPO -> interval .)
    diferente1      reduce using rule 162 (TIPO -> interval .)
    diferente2      reduce using rule 162 (TIPO -> interval .)
    between         reduce using rule 162 (TIPO -> interval .)
    is              reduce using rule 162 (TIPO -> interval .)
    not             reduce using rule 162 (TIPO -> interval .)
    as              reduce using rule 162 (TIPO -> interval .)
    like            reduce using rule 162 (TIPO -> interval .)
    isnull          reduce using rule 162 (TIPO -> interval .)
    notnull         reduce using rule 162 (TIPO -> interval .)
    cadenaString    reduce using rule 162 (TIPO -> interval .)
    id              reduce using rule 162 (TIPO -> interval .)
    in              reduce using rule 162 (TIPO -> interval .)
    parc            reduce using rule 162 (TIPO -> interval .)
    then            reduce using rule 162 (TIPO -> interval .)
    end             reduce using rule 162 (TIPO -> interval .)
    else            reduce using rule 162 (TIPO -> interval .)
    when            reduce using rule 162 (TIPO -> interval .)
    constraint      reduce using rule 162 (TIPO -> interval .)
    primary         reduce using rule 162 (TIPO -> interval .)
    null            reduce using rule 162 (TIPO -> interval .)
    unique          reduce using rule 162 (TIPO -> interval .)
    references      reduce using rule 162 (TIPO -> interval .)
    check           reduce using rule 162 (TIPO -> interval .)
    default         reduce using rule 162 (TIPO -> interval .)
    asc             reduce using rule 162 (TIPO -> interval .)
    desc            reduce using rule 162 (TIPO -> interval .)

  ! cadena          [ reduce using rule 162 (TIPO -> interval .) ]


state 197

    (143) TIPO -> char . para int parc

    para            shift and go to state 281


state 198

    (144) TIPO -> time . para int parc
    (149) TIPO -> time . para int parc without time zone
    (150) TIPO -> time . para int parc with time zone
    (161) TIPO -> time .
    (169) TIPO -> time . without time zone
    (170) TIPO -> time . with time zone

    para            shift and go to state 282
    r_from          reduce using rule 161 (TIPO -> time .)
    coma            reduce using rule 161 (TIPO -> time .)
    where           reduce using rule 161 (TIPO -> time .)
    group           reduce using rule 161 (TIPO -> time .)
    having          reduce using rule 161 (TIPO -> time .)
    union           reduce using rule 161 (TIPO -> time .)
    intersect       reduce using rule 161 (TIPO -> time .)
    except          reduce using rule 161 (TIPO -> time .)
    order           reduce using rule 161 (TIPO -> time .)
    limit           reduce using rule 161 (TIPO -> time .)
    offset          reduce using rule 161 (TIPO -> time .)
    ptcoma          reduce using rule 161 (TIPO -> time .)
    mas             reduce using rule 161 (TIPO -> time .)
    menos           reduce using rule 161 (TIPO -> time .)
    multiplicacion  reduce using rule 161 (TIPO -> time .)
    division        reduce using rule 161 (TIPO -> time .)
    modulo          reduce using rule 161 (TIPO -> time .)
    elevado         reduce using rule 161 (TIPO -> time .)
    and             reduce using rule 161 (TIPO -> time .)
    or              reduce using rule 161 (TIPO -> time .)
    mayor           reduce using rule 161 (TIPO -> time .)
    menor           reduce using rule 161 (TIPO -> time .)
    mayor_igual     reduce using rule 161 (TIPO -> time .)
    menor_igual     reduce using rule 161 (TIPO -> time .)
    igual           reduce using rule 161 (TIPO -> time .)
    diferente1      reduce using rule 161 (TIPO -> time .)
    diferente2      reduce using rule 161 (TIPO -> time .)
    between         reduce using rule 161 (TIPO -> time .)
    is              reduce using rule 161 (TIPO -> time .)
    not             reduce using rule 161 (TIPO -> time .)
    as              reduce using rule 161 (TIPO -> time .)
    like            reduce using rule 161 (TIPO -> time .)
    isnull          reduce using rule 161 (TIPO -> time .)
    notnull         reduce using rule 161 (TIPO -> time .)
    cadenaString    reduce using rule 161 (TIPO -> time .)
    id              reduce using rule 161 (TIPO -> time .)
    cadena          reduce using rule 161 (TIPO -> time .)
    in              reduce using rule 161 (TIPO -> time .)
    parc            reduce using rule 161 (TIPO -> time .)
    then            reduce using rule 161 (TIPO -> time .)
    end             reduce using rule 161 (TIPO -> time .)
    else            reduce using rule 161 (TIPO -> time .)
    when            reduce using rule 161 (TIPO -> time .)
    constraint      reduce using rule 161 (TIPO -> time .)
    primary         reduce using rule 161 (TIPO -> time .)
    null            reduce using rule 161 (TIPO -> time .)
    unique          reduce using rule 161 (TIPO -> time .)
    references      reduce using rule 161 (TIPO -> time .)
    check           reduce using rule 161 (TIPO -> time .)
    default         reduce using rule 161 (TIPO -> time .)
    asc             reduce using rule 161 (TIPO -> time .)
    desc            reduce using rule 161 (TIPO -> time .)
    without         shift and go to state 283
    with            shift and go to state 284


state 199

    (152) TIPO -> smallint .

    r_from          reduce using rule 152 (TIPO -> smallint .)
    coma            reduce using rule 152 (TIPO -> smallint .)
    where           reduce using rule 152 (TIPO -> smallint .)
    group           reduce using rule 152 (TIPO -> smallint .)
    having          reduce using rule 152 (TIPO -> smallint .)
    union           reduce using rule 152 (TIPO -> smallint .)
    intersect       reduce using rule 152 (TIPO -> smallint .)
    except          reduce using rule 152 (TIPO -> smallint .)
    order           reduce using rule 152 (TIPO -> smallint .)
    limit           reduce using rule 152 (TIPO -> smallint .)
    offset          reduce using rule 152 (TIPO -> smallint .)
    ptcoma          reduce using rule 152 (TIPO -> smallint .)
    mas             reduce using rule 152 (TIPO -> smallint .)
    menos           reduce using rule 152 (TIPO -> smallint .)
    multiplicacion  reduce using rule 152 (TIPO -> smallint .)
    division        reduce using rule 152 (TIPO -> smallint .)
    modulo          reduce using rule 152 (TIPO -> smallint .)
    elevado         reduce using rule 152 (TIPO -> smallint .)
    and             reduce using rule 152 (TIPO -> smallint .)
    or              reduce using rule 152 (TIPO -> smallint .)
    mayor           reduce using rule 152 (TIPO -> smallint .)
    menor           reduce using rule 152 (TIPO -> smallint .)
    mayor_igual     reduce using rule 152 (TIPO -> smallint .)
    menor_igual     reduce using rule 152 (TIPO -> smallint .)
    igual           reduce using rule 152 (TIPO -> smallint .)
    diferente1      reduce using rule 152 (TIPO -> smallint .)
    diferente2      reduce using rule 152 (TIPO -> smallint .)
    between         reduce using rule 152 (TIPO -> smallint .)
    is              reduce using rule 152 (TIPO -> smallint .)
    not             reduce using rule 152 (TIPO -> smallint .)
    as              reduce using rule 152 (TIPO -> smallint .)
    like            reduce using rule 152 (TIPO -> smallint .)
    isnull          reduce using rule 152 (TIPO -> smallint .)
    notnull         reduce using rule 152 (TIPO -> smallint .)
    cadenaString    reduce using rule 152 (TIPO -> smallint .)
    id              reduce using rule 152 (TIPO -> smallint .)
    cadena          reduce using rule 152 (TIPO -> smallint .)
    in              reduce using rule 152 (TIPO -> smallint .)
    parc            reduce using rule 152 (TIPO -> smallint .)
    then            reduce using rule 152 (TIPO -> smallint .)
    end             reduce using rule 152 (TIPO -> smallint .)
    else            reduce using rule 152 (TIPO -> smallint .)
    when            reduce using rule 152 (TIPO -> smallint .)
    constraint      reduce using rule 152 (TIPO -> smallint .)
    primary         reduce using rule 152 (TIPO -> smallint .)
    null            reduce using rule 152 (TIPO -> smallint .)
    unique          reduce using rule 152 (TIPO -> smallint .)
    references      reduce using rule 152 (TIPO -> smallint .)
    check           reduce using rule 152 (TIPO -> smallint .)
    default         reduce using rule 152 (TIPO -> smallint .)
    asc             reduce using rule 152 (TIPO -> smallint .)
    desc            reduce using rule 152 (TIPO -> smallint .)


state 200

    (153) TIPO -> integer .

    r_from          reduce using rule 153 (TIPO -> integer .)
    coma            reduce using rule 153 (TIPO -> integer .)
    where           reduce using rule 153 (TIPO -> integer .)
    group           reduce using rule 153 (TIPO -> integer .)
    having          reduce using rule 153 (TIPO -> integer .)
    union           reduce using rule 153 (TIPO -> integer .)
    intersect       reduce using rule 153 (TIPO -> integer .)
    except          reduce using rule 153 (TIPO -> integer .)
    order           reduce using rule 153 (TIPO -> integer .)
    limit           reduce using rule 153 (TIPO -> integer .)
    offset          reduce using rule 153 (TIPO -> integer .)
    ptcoma          reduce using rule 153 (TIPO -> integer .)
    mas             reduce using rule 153 (TIPO -> integer .)
    menos           reduce using rule 153 (TIPO -> integer .)
    multiplicacion  reduce using rule 153 (TIPO -> integer .)
    division        reduce using rule 153 (TIPO -> integer .)
    modulo          reduce using rule 153 (TIPO -> integer .)
    elevado         reduce using rule 153 (TIPO -> integer .)
    and             reduce using rule 153 (TIPO -> integer .)
    or              reduce using rule 153 (TIPO -> integer .)
    mayor           reduce using rule 153 (TIPO -> integer .)
    menor           reduce using rule 153 (TIPO -> integer .)
    mayor_igual     reduce using rule 153 (TIPO -> integer .)
    menor_igual     reduce using rule 153 (TIPO -> integer .)
    igual           reduce using rule 153 (TIPO -> integer .)
    diferente1      reduce using rule 153 (TIPO -> integer .)
    diferente2      reduce using rule 153 (TIPO -> integer .)
    between         reduce using rule 153 (TIPO -> integer .)
    is              reduce using rule 153 (TIPO -> integer .)
    not             reduce using rule 153 (TIPO -> integer .)
    as              reduce using rule 153 (TIPO -> integer .)
    like            reduce using rule 153 (TIPO -> integer .)
    isnull          reduce using rule 153 (TIPO -> integer .)
    notnull         reduce using rule 153 (TIPO -> integer .)
    cadenaString    reduce using rule 153 (TIPO -> integer .)
    id              reduce using rule 153 (TIPO -> integer .)
    cadena          reduce using rule 153 (TIPO -> integer .)
    in              reduce using rule 153 (TIPO -> integer .)
    parc            reduce using rule 153 (TIPO -> integer .)
    then            reduce using rule 153 (TIPO -> integer .)
    end             reduce using rule 153 (TIPO -> integer .)
    else            reduce using rule 153 (TIPO -> integer .)
    when            reduce using rule 153 (TIPO -> integer .)
    constraint      reduce using rule 153 (TIPO -> integer .)
    primary         reduce using rule 153 (TIPO -> integer .)
    null            reduce using rule 153 (TIPO -> integer .)
    unique          reduce using rule 153 (TIPO -> integer .)
    references      reduce using rule 153 (TIPO -> integer .)
    check           reduce using rule 153 (TIPO -> integer .)
    default         reduce using rule 153 (TIPO -> integer .)
    asc             reduce using rule 153 (TIPO -> integer .)
    desc            reduce using rule 153 (TIPO -> integer .)


state 201

    (154) TIPO -> bigint .

    r_from          reduce using rule 154 (TIPO -> bigint .)
    coma            reduce using rule 154 (TIPO -> bigint .)
    where           reduce using rule 154 (TIPO -> bigint .)
    group           reduce using rule 154 (TIPO -> bigint .)
    having          reduce using rule 154 (TIPO -> bigint .)
    union           reduce using rule 154 (TIPO -> bigint .)
    intersect       reduce using rule 154 (TIPO -> bigint .)
    except          reduce using rule 154 (TIPO -> bigint .)
    order           reduce using rule 154 (TIPO -> bigint .)
    limit           reduce using rule 154 (TIPO -> bigint .)
    offset          reduce using rule 154 (TIPO -> bigint .)
    ptcoma          reduce using rule 154 (TIPO -> bigint .)
    mas             reduce using rule 154 (TIPO -> bigint .)
    menos           reduce using rule 154 (TIPO -> bigint .)
    multiplicacion  reduce using rule 154 (TIPO -> bigint .)
    division        reduce using rule 154 (TIPO -> bigint .)
    modulo          reduce using rule 154 (TIPO -> bigint .)
    elevado         reduce using rule 154 (TIPO -> bigint .)
    and             reduce using rule 154 (TIPO -> bigint .)
    or              reduce using rule 154 (TIPO -> bigint .)
    mayor           reduce using rule 154 (TIPO -> bigint .)
    menor           reduce using rule 154 (TIPO -> bigint .)
    mayor_igual     reduce using rule 154 (TIPO -> bigint .)
    menor_igual     reduce using rule 154 (TIPO -> bigint .)
    igual           reduce using rule 154 (TIPO -> bigint .)
    diferente1      reduce using rule 154 (TIPO -> bigint .)
    diferente2      reduce using rule 154 (TIPO -> bigint .)
    between         reduce using rule 154 (TIPO -> bigint .)
    is              reduce using rule 154 (TIPO -> bigint .)
    not             reduce using rule 154 (TIPO -> bigint .)
    as              reduce using rule 154 (TIPO -> bigint .)
    like            reduce using rule 154 (TIPO -> bigint .)
    isnull          reduce using rule 154 (TIPO -> bigint .)
    notnull         reduce using rule 154 (TIPO -> bigint .)
    cadenaString    reduce using rule 154 (TIPO -> bigint .)
    id              reduce using rule 154 (TIPO -> bigint .)
    cadena          reduce using rule 154 (TIPO -> bigint .)
    in              reduce using rule 154 (TIPO -> bigint .)
    parc            reduce using rule 154 (TIPO -> bigint .)
    then            reduce using rule 154 (TIPO -> bigint .)
    end             reduce using rule 154 (TIPO -> bigint .)
    else            reduce using rule 154 (TIPO -> bigint .)
    when            reduce using rule 154 (TIPO -> bigint .)
    constraint      reduce using rule 154 (TIPO -> bigint .)
    primary         reduce using rule 154 (TIPO -> bigint .)
    null            reduce using rule 154 (TIPO -> bigint .)
    unique          reduce using rule 154 (TIPO -> bigint .)
    references      reduce using rule 154 (TIPO -> bigint .)
    check           reduce using rule 154 (TIPO -> bigint .)
    default         reduce using rule 154 (TIPO -> bigint .)
    asc             reduce using rule 154 (TIPO -> bigint .)
    desc            reduce using rule 154 (TIPO -> bigint .)


state 202

    (155) TIPO -> real .

    r_from          reduce using rule 155 (TIPO -> real .)
    coma            reduce using rule 155 (TIPO -> real .)
    where           reduce using rule 155 (TIPO -> real .)
    group           reduce using rule 155 (TIPO -> real .)
    having          reduce using rule 155 (TIPO -> real .)
    union           reduce using rule 155 (TIPO -> real .)
    intersect       reduce using rule 155 (TIPO -> real .)
    except          reduce using rule 155 (TIPO -> real .)
    order           reduce using rule 155 (TIPO -> real .)
    limit           reduce using rule 155 (TIPO -> real .)
    offset          reduce using rule 155 (TIPO -> real .)
    ptcoma          reduce using rule 155 (TIPO -> real .)
    mas             reduce using rule 155 (TIPO -> real .)
    menos           reduce using rule 155 (TIPO -> real .)
    multiplicacion  reduce using rule 155 (TIPO -> real .)
    division        reduce using rule 155 (TIPO -> real .)
    modulo          reduce using rule 155 (TIPO -> real .)
    elevado         reduce using rule 155 (TIPO -> real .)
    and             reduce using rule 155 (TIPO -> real .)
    or              reduce using rule 155 (TIPO -> real .)
    mayor           reduce using rule 155 (TIPO -> real .)
    menor           reduce using rule 155 (TIPO -> real .)
    mayor_igual     reduce using rule 155 (TIPO -> real .)
    menor_igual     reduce using rule 155 (TIPO -> real .)
    igual           reduce using rule 155 (TIPO -> real .)
    diferente1      reduce using rule 155 (TIPO -> real .)
    diferente2      reduce using rule 155 (TIPO -> real .)
    between         reduce using rule 155 (TIPO -> real .)
    is              reduce using rule 155 (TIPO -> real .)
    not             reduce using rule 155 (TIPO -> real .)
    as              reduce using rule 155 (TIPO -> real .)
    like            reduce using rule 155 (TIPO -> real .)
    isnull          reduce using rule 155 (TIPO -> real .)
    notnull         reduce using rule 155 (TIPO -> real .)
    cadenaString    reduce using rule 155 (TIPO -> real .)
    id              reduce using rule 155 (TIPO -> real .)
    cadena          reduce using rule 155 (TIPO -> real .)
    in              reduce using rule 155 (TIPO -> real .)
    parc            reduce using rule 155 (TIPO -> real .)
    then            reduce using rule 155 (TIPO -> real .)
    end             reduce using rule 155 (TIPO -> real .)
    else            reduce using rule 155 (TIPO -> real .)
    when            reduce using rule 155 (TIPO -> real .)
    constraint      reduce using rule 155 (TIPO -> real .)
    primary         reduce using rule 155 (TIPO -> real .)
    null            reduce using rule 155 (TIPO -> real .)
    unique          reduce using rule 155 (TIPO -> real .)
    references      reduce using rule 155 (TIPO -> real .)
    check           reduce using rule 155 (TIPO -> real .)
    default         reduce using rule 155 (TIPO -> real .)
    asc             reduce using rule 155 (TIPO -> real .)
    desc            reduce using rule 155 (TIPO -> real .)


state 203

    (156) TIPO -> double . precision

    precision       shift and go to state 285


state 204

    (157) TIPO -> money .

    r_from          reduce using rule 157 (TIPO -> money .)
    coma            reduce using rule 157 (TIPO -> money .)
    where           reduce using rule 157 (TIPO -> money .)
    group           reduce using rule 157 (TIPO -> money .)
    having          reduce using rule 157 (TIPO -> money .)
    union           reduce using rule 157 (TIPO -> money .)
    intersect       reduce using rule 157 (TIPO -> money .)
    except          reduce using rule 157 (TIPO -> money .)
    order           reduce using rule 157 (TIPO -> money .)
    limit           reduce using rule 157 (TIPO -> money .)
    offset          reduce using rule 157 (TIPO -> money .)
    ptcoma          reduce using rule 157 (TIPO -> money .)
    mas             reduce using rule 157 (TIPO -> money .)
    menos           reduce using rule 157 (TIPO -> money .)
    multiplicacion  reduce using rule 157 (TIPO -> money .)
    division        reduce using rule 157 (TIPO -> money .)
    modulo          reduce using rule 157 (TIPO -> money .)
    elevado         reduce using rule 157 (TIPO -> money .)
    and             reduce using rule 157 (TIPO -> money .)
    or              reduce using rule 157 (TIPO -> money .)
    mayor           reduce using rule 157 (TIPO -> money .)
    menor           reduce using rule 157 (TIPO -> money .)
    mayor_igual     reduce using rule 157 (TIPO -> money .)
    menor_igual     reduce using rule 157 (TIPO -> money .)
    igual           reduce using rule 157 (TIPO -> money .)
    diferente1      reduce using rule 157 (TIPO -> money .)
    diferente2      reduce using rule 157 (TIPO -> money .)
    between         reduce using rule 157 (TIPO -> money .)
    is              reduce using rule 157 (TIPO -> money .)
    not             reduce using rule 157 (TIPO -> money .)
    as              reduce using rule 157 (TIPO -> money .)
    like            reduce using rule 157 (TIPO -> money .)
    isnull          reduce using rule 157 (TIPO -> money .)
    notnull         reduce using rule 157 (TIPO -> money .)
    cadenaString    reduce using rule 157 (TIPO -> money .)
    id              reduce using rule 157 (TIPO -> money .)
    cadena          reduce using rule 157 (TIPO -> money .)
    in              reduce using rule 157 (TIPO -> money .)
    parc            reduce using rule 157 (TIPO -> money .)
    then            reduce using rule 157 (TIPO -> money .)
    end             reduce using rule 157 (TIPO -> money .)
    else            reduce using rule 157 (TIPO -> money .)
    when            reduce using rule 157 (TIPO -> money .)
    constraint      reduce using rule 157 (TIPO -> money .)
    primary         reduce using rule 157 (TIPO -> money .)
    null            reduce using rule 157 (TIPO -> money .)
    unique          reduce using rule 157 (TIPO -> money .)
    references      reduce using rule 157 (TIPO -> money .)
    check           reduce using rule 157 (TIPO -> money .)
    default         reduce using rule 157 (TIPO -> money .)
    asc             reduce using rule 157 (TIPO -> money .)
    desc            reduce using rule 157 (TIPO -> money .)


state 205

    (158) TIPO -> text .

    r_from          reduce using rule 158 (TIPO -> text .)
    coma            reduce using rule 158 (TIPO -> text .)
    where           reduce using rule 158 (TIPO -> text .)
    group           reduce using rule 158 (TIPO -> text .)
    having          reduce using rule 158 (TIPO -> text .)
    union           reduce using rule 158 (TIPO -> text .)
    intersect       reduce using rule 158 (TIPO -> text .)
    except          reduce using rule 158 (TIPO -> text .)
    order           reduce using rule 158 (TIPO -> text .)
    limit           reduce using rule 158 (TIPO -> text .)
    offset          reduce using rule 158 (TIPO -> text .)
    ptcoma          reduce using rule 158 (TIPO -> text .)
    mas             reduce using rule 158 (TIPO -> text .)
    menos           reduce using rule 158 (TIPO -> text .)
    multiplicacion  reduce using rule 158 (TIPO -> text .)
    division        reduce using rule 158 (TIPO -> text .)
    modulo          reduce using rule 158 (TIPO -> text .)
    elevado         reduce using rule 158 (TIPO -> text .)
    and             reduce using rule 158 (TIPO -> text .)
    or              reduce using rule 158 (TIPO -> text .)
    mayor           reduce using rule 158 (TIPO -> text .)
    menor           reduce using rule 158 (TIPO -> text .)
    mayor_igual     reduce using rule 158 (TIPO -> text .)
    menor_igual     reduce using rule 158 (TIPO -> text .)
    igual           reduce using rule 158 (TIPO -> text .)
    diferente1      reduce using rule 158 (TIPO -> text .)
    diferente2      reduce using rule 158 (TIPO -> text .)
    between         reduce using rule 158 (TIPO -> text .)
    is              reduce using rule 158 (TIPO -> text .)
    not             reduce using rule 158 (TIPO -> text .)
    as              reduce using rule 158 (TIPO -> text .)
    like            reduce using rule 158 (TIPO -> text .)
    isnull          reduce using rule 158 (TIPO -> text .)
    notnull         reduce using rule 158 (TIPO -> text .)
    cadenaString    reduce using rule 158 (TIPO -> text .)
    id              reduce using rule 158 (TIPO -> text .)
    cadena          reduce using rule 158 (TIPO -> text .)
    in              reduce using rule 158 (TIPO -> text .)
    parc            reduce using rule 158 (TIPO -> text .)
    then            reduce using rule 158 (TIPO -> text .)
    end             reduce using rule 158 (TIPO -> text .)
    else            reduce using rule 158 (TIPO -> text .)
    when            reduce using rule 158 (TIPO -> text .)
    constraint      reduce using rule 158 (TIPO -> text .)
    primary         reduce using rule 158 (TIPO -> text .)
    null            reduce using rule 158 (TIPO -> text .)
    unique          reduce using rule 158 (TIPO -> text .)
    references      reduce using rule 158 (TIPO -> text .)
    check           reduce using rule 158 (TIPO -> text .)
    default         reduce using rule 158 (TIPO -> text .)
    asc             reduce using rule 158 (TIPO -> text .)
    desc            reduce using rule 158 (TIPO -> text .)


state 206

    (160) TIPO -> date .

    r_from          reduce using rule 160 (TIPO -> date .)
    coma            reduce using rule 160 (TIPO -> date .)
    where           reduce using rule 160 (TIPO -> date .)
    group           reduce using rule 160 (TIPO -> date .)
    having          reduce using rule 160 (TIPO -> date .)
    union           reduce using rule 160 (TIPO -> date .)
    intersect       reduce using rule 160 (TIPO -> date .)
    except          reduce using rule 160 (TIPO -> date .)
    order           reduce using rule 160 (TIPO -> date .)
    limit           reduce using rule 160 (TIPO -> date .)
    offset          reduce using rule 160 (TIPO -> date .)
    ptcoma          reduce using rule 160 (TIPO -> date .)
    mas             reduce using rule 160 (TIPO -> date .)
    menos           reduce using rule 160 (TIPO -> date .)
    multiplicacion  reduce using rule 160 (TIPO -> date .)
    division        reduce using rule 160 (TIPO -> date .)
    modulo          reduce using rule 160 (TIPO -> date .)
    elevado         reduce using rule 160 (TIPO -> date .)
    and             reduce using rule 160 (TIPO -> date .)
    or              reduce using rule 160 (TIPO -> date .)
    mayor           reduce using rule 160 (TIPO -> date .)
    menor           reduce using rule 160 (TIPO -> date .)
    mayor_igual     reduce using rule 160 (TIPO -> date .)
    menor_igual     reduce using rule 160 (TIPO -> date .)
    igual           reduce using rule 160 (TIPO -> date .)
    diferente1      reduce using rule 160 (TIPO -> date .)
    diferente2      reduce using rule 160 (TIPO -> date .)
    between         reduce using rule 160 (TIPO -> date .)
    is              reduce using rule 160 (TIPO -> date .)
    not             reduce using rule 160 (TIPO -> date .)
    as              reduce using rule 160 (TIPO -> date .)
    like            reduce using rule 160 (TIPO -> date .)
    isnull          reduce using rule 160 (TIPO -> date .)
    notnull         reduce using rule 160 (TIPO -> date .)
    cadenaString    reduce using rule 160 (TIPO -> date .)
    id              reduce using rule 160 (TIPO -> date .)
    cadena          reduce using rule 160 (TIPO -> date .)
    in              reduce using rule 160 (TIPO -> date .)
    parc            reduce using rule 160 (TIPO -> date .)
    then            reduce using rule 160 (TIPO -> date .)
    end             reduce using rule 160 (TIPO -> date .)
    else            reduce using rule 160 (TIPO -> date .)
    when            reduce using rule 160 (TIPO -> date .)
    constraint      reduce using rule 160 (TIPO -> date .)
    primary         reduce using rule 160 (TIPO -> date .)
    null            reduce using rule 160 (TIPO -> date .)
    unique          reduce using rule 160 (TIPO -> date .)
    references      reduce using rule 160 (TIPO -> date .)
    check           reduce using rule 160 (TIPO -> date .)
    default         reduce using rule 160 (TIPO -> date .)
    asc             reduce using rule 160 (TIPO -> date .)
    desc            reduce using rule 160 (TIPO -> date .)


state 207

    (163) TIPO -> boolean .

    r_from          reduce using rule 163 (TIPO -> boolean .)
    coma            reduce using rule 163 (TIPO -> boolean .)
    where           reduce using rule 163 (TIPO -> boolean .)
    group           reduce using rule 163 (TIPO -> boolean .)
    having          reduce using rule 163 (TIPO -> boolean .)
    union           reduce using rule 163 (TIPO -> boolean .)
    intersect       reduce using rule 163 (TIPO -> boolean .)
    except          reduce using rule 163 (TIPO -> boolean .)
    order           reduce using rule 163 (TIPO -> boolean .)
    limit           reduce using rule 163 (TIPO -> boolean .)
    offset          reduce using rule 163 (TIPO -> boolean .)
    ptcoma          reduce using rule 163 (TIPO -> boolean .)
    mas             reduce using rule 163 (TIPO -> boolean .)
    menos           reduce using rule 163 (TIPO -> boolean .)
    multiplicacion  reduce using rule 163 (TIPO -> boolean .)
    division        reduce using rule 163 (TIPO -> boolean .)
    modulo          reduce using rule 163 (TIPO -> boolean .)
    elevado         reduce using rule 163 (TIPO -> boolean .)
    and             reduce using rule 163 (TIPO -> boolean .)
    or              reduce using rule 163 (TIPO -> boolean .)
    mayor           reduce using rule 163 (TIPO -> boolean .)
    menor           reduce using rule 163 (TIPO -> boolean .)
    mayor_igual     reduce using rule 163 (TIPO -> boolean .)
    menor_igual     reduce using rule 163 (TIPO -> boolean .)
    igual           reduce using rule 163 (TIPO -> boolean .)
    diferente1      reduce using rule 163 (TIPO -> boolean .)
    diferente2      reduce using rule 163 (TIPO -> boolean .)
    between         reduce using rule 163 (TIPO -> boolean .)
    is              reduce using rule 163 (TIPO -> boolean .)
    not             reduce using rule 163 (TIPO -> boolean .)
    as              reduce using rule 163 (TIPO -> boolean .)
    like            reduce using rule 163 (TIPO -> boolean .)
    isnull          reduce using rule 163 (TIPO -> boolean .)
    notnull         reduce using rule 163 (TIPO -> boolean .)
    cadenaString    reduce using rule 163 (TIPO -> boolean .)
    id              reduce using rule 163 (TIPO -> boolean .)
    cadena          reduce using rule 163 (TIPO -> boolean .)
    in              reduce using rule 163 (TIPO -> boolean .)
    parc            reduce using rule 163 (TIPO -> boolean .)
    then            reduce using rule 163 (TIPO -> boolean .)
    end             reduce using rule 163 (TIPO -> boolean .)
    else            reduce using rule 163 (TIPO -> boolean .)
    when            reduce using rule 163 (TIPO -> boolean .)
    constraint      reduce using rule 163 (TIPO -> boolean .)
    primary         reduce using rule 163 (TIPO -> boolean .)
    null            reduce using rule 163 (TIPO -> boolean .)
    unique          reduce using rule 163 (TIPO -> boolean .)
    references      reduce using rule 163 (TIPO -> boolean .)
    check           reduce using rule 163 (TIPO -> boolean .)
    default         reduce using rule 163 (TIPO -> boolean .)
    asc             reduce using rule 163 (TIPO -> boolean .)
    desc            reduce using rule 163 (TIPO -> boolean .)


state 208

    (166) TIPO -> id .

    r_from          reduce using rule 166 (TIPO -> id .)
    coma            reduce using rule 166 (TIPO -> id .)
    where           reduce using rule 166 (TIPO -> id .)
    group           reduce using rule 166 (TIPO -> id .)
    having          reduce using rule 166 (TIPO -> id .)
    union           reduce using rule 166 (TIPO -> id .)
    intersect       reduce using rule 166 (TIPO -> id .)
    except          reduce using rule 166 (TIPO -> id .)
    order           reduce using rule 166 (TIPO -> id .)
    limit           reduce using rule 166 (TIPO -> id .)
    offset          reduce using rule 166 (TIPO -> id .)
    ptcoma          reduce using rule 166 (TIPO -> id .)
    mas             reduce using rule 166 (TIPO -> id .)
    menos           reduce using rule 166 (TIPO -> id .)
    multiplicacion  reduce using rule 166 (TIPO -> id .)
    division        reduce using rule 166 (TIPO -> id .)
    modulo          reduce using rule 166 (TIPO -> id .)
    elevado         reduce using rule 166 (TIPO -> id .)
    and             reduce using rule 166 (TIPO -> id .)
    or              reduce using rule 166 (TIPO -> id .)
    mayor           reduce using rule 166 (TIPO -> id .)
    menor           reduce using rule 166 (TIPO -> id .)
    mayor_igual     reduce using rule 166 (TIPO -> id .)
    menor_igual     reduce using rule 166 (TIPO -> id .)
    igual           reduce using rule 166 (TIPO -> id .)
    diferente1      reduce using rule 166 (TIPO -> id .)
    diferente2      reduce using rule 166 (TIPO -> id .)
    between         reduce using rule 166 (TIPO -> id .)
    is              reduce using rule 166 (TIPO -> id .)
    not             reduce using rule 166 (TIPO -> id .)
    as              reduce using rule 166 (TIPO -> id .)
    like            reduce using rule 166 (TIPO -> id .)
    isnull          reduce using rule 166 (TIPO -> id .)
    notnull         reduce using rule 166 (TIPO -> id .)
    cadenaString    reduce using rule 166 (TIPO -> id .)
    id              reduce using rule 166 (TIPO -> id .)
    cadena          reduce using rule 166 (TIPO -> id .)
    in              reduce using rule 166 (TIPO -> id .)
    parc            reduce using rule 166 (TIPO -> id .)
    then            reduce using rule 166 (TIPO -> id .)
    end             reduce using rule 166 (TIPO -> id .)
    else            reduce using rule 166 (TIPO -> id .)
    when            reduce using rule 166 (TIPO -> id .)
    constraint      reduce using rule 166 (TIPO -> id .)
    primary         reduce using rule 166 (TIPO -> id .)
    null            reduce using rule 166 (TIPO -> id .)
    unique          reduce using rule 166 (TIPO -> id .)
    references      reduce using rule 166 (TIPO -> id .)
    check           reduce using rule 166 (TIPO -> id .)
    default         reduce using rule 166 (TIPO -> id .)
    asc             reduce using rule 166 (TIPO -> id .)
    desc            reduce using rule 166 (TIPO -> id .)


state 209

    (224) EXP -> id para parc .

    r_from          reduce using rule 224 (EXP -> id para parc .)
    coma            reduce using rule 224 (EXP -> id para parc .)
    where           reduce using rule 224 (EXP -> id para parc .)
    group           reduce using rule 224 (EXP -> id para parc .)
    having          reduce using rule 224 (EXP -> id para parc .)
    union           reduce using rule 224 (EXP -> id para parc .)
    intersect       reduce using rule 224 (EXP -> id para parc .)
    except          reduce using rule 224 (EXP -> id para parc .)
    order           reduce using rule 224 (EXP -> id para parc .)
    limit           reduce using rule 224 (EXP -> id para parc .)
    offset          reduce using rule 224 (EXP -> id para parc .)
    ptcoma          reduce using rule 224 (EXP -> id para parc .)
    mas             reduce using rule 224 (EXP -> id para parc .)
    menos           reduce using rule 224 (EXP -> id para parc .)
    multiplicacion  reduce using rule 224 (EXP -> id para parc .)
    division        reduce using rule 224 (EXP -> id para parc .)
    modulo          reduce using rule 224 (EXP -> id para parc .)
    elevado         reduce using rule 224 (EXP -> id para parc .)
    and             reduce using rule 224 (EXP -> id para parc .)
    or              reduce using rule 224 (EXP -> id para parc .)
    mayor           reduce using rule 224 (EXP -> id para parc .)
    menor           reduce using rule 224 (EXP -> id para parc .)
    mayor_igual     reduce using rule 224 (EXP -> id para parc .)
    menor_igual     reduce using rule 224 (EXP -> id para parc .)
    igual           reduce using rule 224 (EXP -> id para parc .)
    diferente1      reduce using rule 224 (EXP -> id para parc .)
    diferente2      reduce using rule 224 (EXP -> id para parc .)
    between         reduce using rule 224 (EXP -> id para parc .)
    is              reduce using rule 224 (EXP -> id para parc .)
    not             reduce using rule 224 (EXP -> id para parc .)
    as              reduce using rule 224 (EXP -> id para parc .)
    like            reduce using rule 224 (EXP -> id para parc .)
    isnull          reduce using rule 224 (EXP -> id para parc .)
    notnull         reduce using rule 224 (EXP -> id para parc .)
    cadenaString    reduce using rule 224 (EXP -> id para parc .)
    id              reduce using rule 224 (EXP -> id para parc .)
    cadena          reduce using rule 224 (EXP -> id para parc .)
    in              reduce using rule 224 (EXP -> id para parc .)
    parc            reduce using rule 224 (EXP -> id para parc .)
    then            reduce using rule 224 (EXP -> id para parc .)
    end             reduce using rule 224 (EXP -> id para parc .)
    else            reduce using rule 224 (EXP -> id para parc .)
    when            reduce using rule 224 (EXP -> id para parc .)
    constraint      reduce using rule 224 (EXP -> id para parc .)
    primary         reduce using rule 224 (EXP -> id para parc .)
    null            reduce using rule 224 (EXP -> id para parc .)
    unique          reduce using rule 224 (EXP -> id para parc .)
    references      reduce using rule 224 (EXP -> id para parc .)
    check           reduce using rule 224 (EXP -> id para parc .)
    default         reduce using rule 224 (EXP -> id para parc .)
    asc             reduce using rule 224 (EXP -> id para parc .)
    desc            reduce using rule 224 (EXP -> id para parc .)


state 210

    (225) EXP -> id para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 286
    coma            shift and go to state 89


state 211

    (223) EXP -> para EXP parc .

    r_from          reduce using rule 223 (EXP -> para EXP parc .)
    coma            reduce using rule 223 (EXP -> para EXP parc .)
    where           reduce using rule 223 (EXP -> para EXP parc .)
    group           reduce using rule 223 (EXP -> para EXP parc .)
    having          reduce using rule 223 (EXP -> para EXP parc .)
    union           reduce using rule 223 (EXP -> para EXP parc .)
    intersect       reduce using rule 223 (EXP -> para EXP parc .)
    except          reduce using rule 223 (EXP -> para EXP parc .)
    order           reduce using rule 223 (EXP -> para EXP parc .)
    limit           reduce using rule 223 (EXP -> para EXP parc .)
    offset          reduce using rule 223 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 223 (EXP -> para EXP parc .)
    mas             reduce using rule 223 (EXP -> para EXP parc .)
    menos           reduce using rule 223 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 223 (EXP -> para EXP parc .)
    division        reduce using rule 223 (EXP -> para EXP parc .)
    modulo          reduce using rule 223 (EXP -> para EXP parc .)
    elevado         reduce using rule 223 (EXP -> para EXP parc .)
    and             reduce using rule 223 (EXP -> para EXP parc .)
    or              reduce using rule 223 (EXP -> para EXP parc .)
    mayor           reduce using rule 223 (EXP -> para EXP parc .)
    menor           reduce using rule 223 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 223 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 223 (EXP -> para EXP parc .)
    igual           reduce using rule 223 (EXP -> para EXP parc .)
    diferente1      reduce using rule 223 (EXP -> para EXP parc .)
    diferente2      reduce using rule 223 (EXP -> para EXP parc .)
    between         reduce using rule 223 (EXP -> para EXP parc .)
    is              reduce using rule 223 (EXP -> para EXP parc .)
    not             reduce using rule 223 (EXP -> para EXP parc .)
    as              reduce using rule 223 (EXP -> para EXP parc .)
    like            reduce using rule 223 (EXP -> para EXP parc .)
    isnull          reduce using rule 223 (EXP -> para EXP parc .)
    notnull         reduce using rule 223 (EXP -> para EXP parc .)
    cadenaString    reduce using rule 223 (EXP -> para EXP parc .)
    id              reduce using rule 223 (EXP -> para EXP parc .)
    cadena          reduce using rule 223 (EXP -> para EXP parc .)
    in              reduce using rule 223 (EXP -> para EXP parc .)
    parc            reduce using rule 223 (EXP -> para EXP parc .)
    then            reduce using rule 223 (EXP -> para EXP parc .)
    end             reduce using rule 223 (EXP -> para EXP parc .)
    else            reduce using rule 223 (EXP -> para EXP parc .)
    when            reduce using rule 223 (EXP -> para EXP parc .)
    constraint      reduce using rule 223 (EXP -> para EXP parc .)
    primary         reduce using rule 223 (EXP -> para EXP parc .)
    null            reduce using rule 223 (EXP -> para EXP parc .)
    unique          reduce using rule 223 (EXP -> para EXP parc .)
    references      reduce using rule 223 (EXP -> para EXP parc .)
    check           reduce using rule 223 (EXP -> para EXP parc .)
    default         reduce using rule 223 (EXP -> para EXP parc .)
    asc             reduce using rule 223 (EXP -> para EXP parc .)
    desc            reduce using rule 223 (EXP -> para EXP parc .)


state 212

    (226) EXP -> any para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 287
    coma            shift and go to state 89


state 213

    (227) EXP -> all para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 288
    coma            shift and go to state 89


state 214

    (228) EXP -> some para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 289
    coma            shift and go to state 89


state 215

    (229) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 290


state 216

    (171) FIELDS -> year .

    r_from          reduce using rule 171 (FIELDS -> year .)


state 217

    (172) FIELDS -> month .

    r_from          reduce using rule 172 (FIELDS -> month .)


state 218

    (173) FIELDS -> day .

    r_from          reduce using rule 173 (FIELDS -> day .)


state 219

    (174) FIELDS -> hour .

    r_from          reduce using rule 174 (FIELDS -> hour .)


state 220

    (175) FIELDS -> minute .

    r_from          reduce using rule 175 (FIELDS -> minute .)


state 221

    (176) FIELDS -> second .

    r_from          reduce using rule 176 (FIELDS -> second .)


state 222

    (69) CREATETABLE -> create table id para . LDEF parc ptcoma
    (70) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (71) LDEF -> . LDEF coma COLDEF
    (72) LDEF -> . COLDEF
    (73) COLDEF -> . OPCONST
    (74) COLDEF -> . constraint id OPCONST
    (75) COLDEF -> . id TIPO
    (76) COLDEF -> . id TIPO LOPCOLUMN
    (88) OPCONST -> . primary key para LEXP parc
    (89) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (90) OPCONST -> . check para CONDCHECK parc
    (91) OPCONST -> . unique para LEXP parc

    constraint      shift and go to state 295
    id              shift and go to state 291
    primary         shift and go to state 296
    foreign         shift and go to state 297
    check           shift and go to state 298
    unique          shift and go to state 299

    LDEF                           shift and go to state 292
    COLDEF                         shift and go to state 293
    OPCONST                        shift and go to state 294

state 223

    (100) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 300


state 224

    (52) CREATEDB -> create RD if not . exist id
    (53) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 301


state 225

    (55) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 55 (CREATEDB -> create RD id OPCCDB .)


state 226

    (56) OPCCDB -> PROPIETARIO .
    (58) OPCCDB -> PROPIETARIO . MODO
    (67) MODO -> . mode igual int
    (68) MODO -> . mode int

    ptcoma          reduce using rule 56 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 229

    MODO                           shift and go to state 302

state 227

    (57) OPCCDB -> MODO .

    ptcoma          reduce using rule 57 (OPCCDB -> MODO .)


state 228

    (61) PROPIETARIO -> owner . igual id
    (62) PROPIETARIO -> owner . id
    (63) PROPIETARIO -> owner . igual cadena
    (64) PROPIETARIO -> owner . cadena
    (65) PROPIETARIO -> owner . igual cadenaString
    (66) PROPIETARIO -> owner . cadenaString

    igual           shift and go to state 303
    id              shift and go to state 304
    cadena          shift and go to state 305
    cadenaString    shift and go to state 306


state 229

    (67) MODO -> mode . igual int
    (68) MODO -> mode . int

    igual           shift and go to state 307
    int             shift and go to state 308


state 230

    (59) RD -> or replace databases .

    if              reduce using rule 59 (RD -> or replace databases .)
    id              reduce using rule 59 (RD -> or replace databases .)


state 231

    (131) LCAMPOS -> id . igual EXP

    igual           shift and go to state 309


state 232

    (129) UPDATE -> update id set LCAMPOS . where LEXP
    (130) LCAMPOS -> LCAMPOS . id igual EXP

    where           shift and go to state 311
    id              shift and go to state 310


state 233

    (132) DELETE -> delete r_from EXP WHERE .

    ptcoma          reduce using rule 132 (DELETE -> delete r_from EXP WHERE .)


state 234

    (29) ALTER -> alter databases id RO .

    ptcoma          reduce using rule 29 (ALTER -> alter databases id RO .)


state 235

    (31) RO -> rename . to id

    to              shift and go to state 312


state 236

    (32) RO -> owner . to id

    to              shift and go to state 313


state 237

    (42) OP -> alter . column id set not null
    (43) OP -> alter . column id set null
    (48) OP -> alter . column id type TIPO

    column          shift and go to state 314


state 238

    (30) ALTER -> alter table id LOP .
    (33) LOP -> LOP . coma OP

    ptcoma          reduce using rule 30 (ALTER -> alter table id LOP .)
    coma            shift and go to state 315


state 239

    (34) LOP -> OP .

    coma            reduce using rule 34 (LOP -> OP .)
    ptcoma          reduce using rule 34 (LOP -> OP .)


state 240

    (35) OP -> add . column id TIPO
    (36) OP -> add . check para CONDCHECK parc
    (37) OP -> add . constraint id check para CONDCHECK parc
    (38) OP -> add . constraint id unique para LEXP parc
    (39) OP -> add . unique para LEXP parc
    (40) OP -> add . foreign key para LEXP parc references id para LEXP parc
    (41) OP -> add . constraint id foreign key para LEXP parc references id para LEXP parc

    column          shift and go to state 316
    check           shift and go to state 317
    constraint      shift and go to state 318
    unique          shift and go to state 319
    foreign         shift and go to state 320


state 241

    (44) OP -> drop . constraint id
    (45) OP -> drop . column LEXP
    (46) OP -> drop . check id

    constraint      shift and go to state 321
    column          shift and go to state 322
    check           shift and go to state 323


state 242

    (47) OP -> rename . column id to id

    column          shift and go to state 324


state 243

    (25) DROP -> drop all para parc .

    ptcoma          reduce using rule 25 (DROP -> drop all para parc .)


state 244

    (28) DROP -> drop databases if exist . id

    id              shift and go to state 325


state 245

    (23) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 326


state 246

    (24) INSERT -> insert into id para . LEXP parc values para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 327
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 247

    (17) CASE -> case LISTAWHEN ELSE end .

    use             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    select          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    create          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    update          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    delete          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    alter           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    drop            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    insert          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    case            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    show            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    $end            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    r_from          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    coma            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    where           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    group           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    having          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    union           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    intersect       reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    except          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    order           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    limit           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    offset          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    ptcoma          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    mas             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    menos           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    multiplicacion  reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    division        reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    modulo          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    elevado         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    and             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    or              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    mayor           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    menor           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    mayor_igual     reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    menor_igual     reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    igual           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    diferente1      reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    diferente2      reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    between         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    is              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    not             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    as              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    like            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    isnull          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    notnull         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    cadenaString    reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    id              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    cadena          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    in              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    parc            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    then            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    end             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    else            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    when            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    constraint      reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    primary         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    null            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    unique          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    references      reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    check           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    default         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    asc             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    desc            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)


state 248

    (22) ELSE -> else LEXP .
    (135) LEXP -> LEXP . coma EXP

    end             reduce using rule 22 (ELSE -> else LEXP .)
    coma            shift and go to state 89


state 249

    (21) WHEN -> when LEXP then . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 328
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 250

    (50) SHOW -> show tables para id . parc

    parc            shift and go to state 329


state 251

    (51) SHOW -> show collection para parc .

    ptcoma          reduce using rule 51 (SHOW -> show collection para parc .)


state 252

    (101) SELECT -> select distinct LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> LEXP . coma EXP
    (112) WHERE -> . where EXP
    (113) WHERE -> .
    (114) WHERE -> . where EXIST

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 89
    where           shift and go to state 90
    r_from          reduce using rule 113 (WHERE -> .)
    group           reduce using rule 113 (WHERE -> .)
    having          reduce using rule 113 (WHERE -> .)
    union           reduce using rule 113 (WHERE -> .)
    intersect       reduce using rule 113 (WHERE -> .)
    except          reduce using rule 113 (WHERE -> .)
    order           reduce using rule 113 (WHERE -> .)
    limit           reduce using rule 113 (WHERE -> .)
    offset          reduce using rule 113 (WHERE -> .)
    ptcoma          reduce using rule 113 (WHERE -> .)
    mas             reduce using rule 113 (WHERE -> .)
    menos           reduce using rule 113 (WHERE -> .)
    multiplicacion  reduce using rule 113 (WHERE -> .)
    division        reduce using rule 113 (WHERE -> .)
    modulo          reduce using rule 113 (WHERE -> .)
    elevado         reduce using rule 113 (WHERE -> .)
    and             reduce using rule 113 (WHERE -> .)
    or              reduce using rule 113 (WHERE -> .)
    mayor           reduce using rule 113 (WHERE -> .)
    menor           reduce using rule 113 (WHERE -> .)
    mayor_igual     reduce using rule 113 (WHERE -> .)
    menor_igual     reduce using rule 113 (WHERE -> .)
    igual           reduce using rule 113 (WHERE -> .)
    diferente1      reduce using rule 113 (WHERE -> .)
    diferente2      reduce using rule 113 (WHERE -> .)
    between         reduce using rule 113 (WHERE -> .)
    is              reduce using rule 113 (WHERE -> .)
    not             reduce using rule 113 (WHERE -> .)
    as              reduce using rule 113 (WHERE -> .)
    like            reduce using rule 113 (WHERE -> .)
    isnull          reduce using rule 113 (WHERE -> .)
    notnull         reduce using rule 113 (WHERE -> .)
    cadenaString    reduce using rule 113 (WHERE -> .)
    id              reduce using rule 113 (WHERE -> .)
    cadena          reduce using rule 113 (WHERE -> .)
    in              reduce using rule 113 (WHERE -> .)
    parc            reduce using rule 113 (WHERE -> .)
    then            reduce using rule 113 (WHERE -> .)
    end             reduce using rule 113 (WHERE -> .)
    else            reduce using rule 113 (WHERE -> .)
    when            reduce using rule 113 (WHERE -> .)
    constraint      reduce using rule 113 (WHERE -> .)
    primary         reduce using rule 113 (WHERE -> .)
    null            reduce using rule 113 (WHERE -> .)
    unique          reduce using rule 113 (WHERE -> .)
    references      reduce using rule 113 (WHERE -> .)
    check           reduce using rule 113 (WHERE -> .)
    default         reduce using rule 113 (WHERE -> .)
    asc             reduce using rule 113 (WHERE -> .)
    desc            reduce using rule 113 (WHERE -> .)

  ! coma            [ reduce using rule 113 (WHERE -> .) ]
  ! where           [ reduce using rule 113 (WHERE -> .) ]

    WHERE                          shift and go to state 330

state 253

    (102) SELECT -> select LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (120) GROUP -> . group by LEXP
    (121) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 153
    r_from          reduce using rule 121 (GROUP -> .)
    coma            reduce using rule 121 (GROUP -> .)
    where           reduce using rule 121 (GROUP -> .)
    having          reduce using rule 121 (GROUP -> .)
    union           reduce using rule 121 (GROUP -> .)
    intersect       reduce using rule 121 (GROUP -> .)
    except          reduce using rule 121 (GROUP -> .)
    order           reduce using rule 121 (GROUP -> .)
    limit           reduce using rule 121 (GROUP -> .)
    offset          reduce using rule 121 (GROUP -> .)
    ptcoma          reduce using rule 121 (GROUP -> .)
    mas             reduce using rule 121 (GROUP -> .)
    menos           reduce using rule 121 (GROUP -> .)
    multiplicacion  reduce using rule 121 (GROUP -> .)
    division        reduce using rule 121 (GROUP -> .)
    modulo          reduce using rule 121 (GROUP -> .)
    elevado         reduce using rule 121 (GROUP -> .)
    and             reduce using rule 121 (GROUP -> .)
    or              reduce using rule 121 (GROUP -> .)
    mayor           reduce using rule 121 (GROUP -> .)
    menor           reduce using rule 121 (GROUP -> .)
    mayor_igual     reduce using rule 121 (GROUP -> .)
    menor_igual     reduce using rule 121 (GROUP -> .)
    igual           reduce using rule 121 (GROUP -> .)
    diferente1      reduce using rule 121 (GROUP -> .)
    diferente2      reduce using rule 121 (GROUP -> .)
    between         reduce using rule 121 (GROUP -> .)
    is              reduce using rule 121 (GROUP -> .)
    not             reduce using rule 121 (GROUP -> .)
    as              reduce using rule 121 (GROUP -> .)
    like            reduce using rule 121 (GROUP -> .)
    isnull          reduce using rule 121 (GROUP -> .)
    notnull         reduce using rule 121 (GROUP -> .)
    cadenaString    reduce using rule 121 (GROUP -> .)
    id              reduce using rule 121 (GROUP -> .)
    cadena          reduce using rule 121 (GROUP -> .)
    in              reduce using rule 121 (GROUP -> .)
    parc            reduce using rule 121 (GROUP -> .)
    then            reduce using rule 121 (GROUP -> .)
    end             reduce using rule 121 (GROUP -> .)
    else            reduce using rule 121 (GROUP -> .)
    when            reduce using rule 121 (GROUP -> .)
    constraint      reduce using rule 121 (GROUP -> .)
    primary         reduce using rule 121 (GROUP -> .)
    null            reduce using rule 121 (GROUP -> .)
    unique          reduce using rule 121 (GROUP -> .)
    references      reduce using rule 121 (GROUP -> .)
    check           reduce using rule 121 (GROUP -> .)
    default         reduce using rule 121 (GROUP -> .)
    asc             reduce using rule 121 (GROUP -> .)
    desc            reduce using rule 121 (GROUP -> .)

  ! group           [ reduce using rule 121 (GROUP -> .) ]

    GROUP                          shift and go to state 331

state 254

    (103) SELECT -> select LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (115) COMBINING -> . union LEXP
    (116) COMBINING -> . union all LEXP
    (117) COMBINING -> . intersect LEXP
    (118) COMBINING -> . except LEXP
    (119) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 333
    intersect       shift and go to state 334
    except          shift and go to state 335
    r_from          reduce using rule 119 (COMBINING -> .)
    coma            reduce using rule 119 (COMBINING -> .)
    where           reduce using rule 119 (COMBINING -> .)
    group           reduce using rule 119 (COMBINING -> .)
    having          reduce using rule 119 (COMBINING -> .)
    order           reduce using rule 119 (COMBINING -> .)
    limit           reduce using rule 119 (COMBINING -> .)
    offset          reduce using rule 119 (COMBINING -> .)
    ptcoma          reduce using rule 119 (COMBINING -> .)
    mas             reduce using rule 119 (COMBINING -> .)
    menos           reduce using rule 119 (COMBINING -> .)
    multiplicacion  reduce using rule 119 (COMBINING -> .)
    division        reduce using rule 119 (COMBINING -> .)
    modulo          reduce using rule 119 (COMBINING -> .)
    elevado         reduce using rule 119 (COMBINING -> .)
    and             reduce using rule 119 (COMBINING -> .)
    or              reduce using rule 119 (COMBINING -> .)
    mayor           reduce using rule 119 (COMBINING -> .)
    menor           reduce using rule 119 (COMBINING -> .)
    mayor_igual     reduce using rule 119 (COMBINING -> .)
    menor_igual     reduce using rule 119 (COMBINING -> .)
    igual           reduce using rule 119 (COMBINING -> .)
    diferente1      reduce using rule 119 (COMBINING -> .)
    diferente2      reduce using rule 119 (COMBINING -> .)
    between         reduce using rule 119 (COMBINING -> .)
    is              reduce using rule 119 (COMBINING -> .)
    not             reduce using rule 119 (COMBINING -> .)
    as              reduce using rule 119 (COMBINING -> .)
    like            reduce using rule 119 (COMBINING -> .)
    isnull          reduce using rule 119 (COMBINING -> .)
    notnull         reduce using rule 119 (COMBINING -> .)
    cadenaString    reduce using rule 119 (COMBINING -> .)
    id              reduce using rule 119 (COMBINING -> .)
    cadena          reduce using rule 119 (COMBINING -> .)
    in              reduce using rule 119 (COMBINING -> .)
    parc            reduce using rule 119 (COMBINING -> .)
    then            reduce using rule 119 (COMBINING -> .)
    end             reduce using rule 119 (COMBINING -> .)
    else            reduce using rule 119 (COMBINING -> .)
    when            reduce using rule 119 (COMBINING -> .)
    constraint      reduce using rule 119 (COMBINING -> .)
    primary         reduce using rule 119 (COMBINING -> .)
    null            reduce using rule 119 (COMBINING -> .)
    unique          reduce using rule 119 (COMBINING -> .)
    references      reduce using rule 119 (COMBINING -> .)
    check           reduce using rule 119 (COMBINING -> .)
    default         reduce using rule 119 (COMBINING -> .)
    asc             reduce using rule 119 (COMBINING -> .)
    desc            reduce using rule 119 (COMBINING -> .)

  ! union           [ reduce using rule 119 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 119 (COMBINING -> .) ]
  ! except          [ reduce using rule 119 (COMBINING -> .) ]

    COMBINING                      shift and go to state 332

state 255

    (122) HAVING -> having . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 336
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 256

    (120) GROUP -> group by . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 337
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 257

    (134) EXIST -> not exist . para SELECT parc

    para            shift and go to state 338


state 258

    (133) EXIST -> exist para . SELECT parc
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 17

    SELECT                         shift and go to state 339

state 259

    (215) EXP -> EXP between symetric EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 215 (EXP -> EXP between symetric EXP .)
    coma            reduce using rule 215 (EXP -> EXP between symetric EXP .)
    where           reduce using rule 215 (EXP -> EXP between symetric EXP .)
    group           reduce using rule 215 (EXP -> EXP between symetric EXP .)
    having          reduce using rule 215 (EXP -> EXP between symetric EXP .)
    union           reduce using rule 215 (EXP -> EXP between symetric EXP .)
    intersect       reduce using rule 215 (EXP -> EXP between symetric EXP .)
    except          reduce using rule 215 (EXP -> EXP between symetric EXP .)
    order           reduce using rule 215 (EXP -> EXP between symetric EXP .)
    limit           reduce using rule 215 (EXP -> EXP between symetric EXP .)
    offset          reduce using rule 215 (EXP -> EXP between symetric EXP .)
    ptcoma          reduce using rule 215 (EXP -> EXP between symetric EXP .)
    and             reduce using rule 215 (EXP -> EXP between symetric EXP .)
    or              reduce using rule 215 (EXP -> EXP between symetric EXP .)
    between         reduce using rule 215 (EXP -> EXP between symetric EXP .)
    is              reduce using rule 215 (EXP -> EXP between symetric EXP .)
    not             reduce using rule 215 (EXP -> EXP between symetric EXP .)
    as              reduce using rule 215 (EXP -> EXP between symetric EXP .)
    like            reduce using rule 215 (EXP -> EXP between symetric EXP .)
    isnull          reduce using rule 215 (EXP -> EXP between symetric EXP .)
    notnull         reduce using rule 215 (EXP -> EXP between symetric EXP .)
    cadenaString    reduce using rule 215 (EXP -> EXP between symetric EXP .)
    id              reduce using rule 215 (EXP -> EXP between symetric EXP .)
    cadena          reduce using rule 215 (EXP -> EXP between symetric EXP .)
    in              reduce using rule 215 (EXP -> EXP between symetric EXP .)
    parc            reduce using rule 215 (EXP -> EXP between symetric EXP .)
    then            reduce using rule 215 (EXP -> EXP between symetric EXP .)
    end             reduce using rule 215 (EXP -> EXP between symetric EXP .)
    else            reduce using rule 215 (EXP -> EXP between symetric EXP .)
    when            reduce using rule 215 (EXP -> EXP between symetric EXP .)
    constraint      reduce using rule 215 (EXP -> EXP between symetric EXP .)
    primary         reduce using rule 215 (EXP -> EXP between symetric EXP .)
    null            reduce using rule 215 (EXP -> EXP between symetric EXP .)
    unique          reduce using rule 215 (EXP -> EXP between symetric EXP .)
    references      reduce using rule 215 (EXP -> EXP between symetric EXP .)
    check           reduce using rule 215 (EXP -> EXP between symetric EXP .)
    default         reduce using rule 215 (EXP -> EXP between symetric EXP .)
    asc             reduce using rule 215 (EXP -> EXP between symetric EXP .)
    desc            reduce using rule 215 (EXP -> EXP between symetric EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! menos           [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! division        [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! modulo          [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! elevado         [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! mayor           [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! menor           [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! igual           [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! diferente1      [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! diferente2      [ reduce using rule 215 (EXP -> EXP between symetric EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 260

    (193) EXP -> EXP is not null .

    r_from          reduce using rule 193 (EXP -> EXP is not null .)
    coma            reduce using rule 193 (EXP -> EXP is not null .)
    where           reduce using rule 193 (EXP -> EXP is not null .)
    group           reduce using rule 193 (EXP -> EXP is not null .)
    having          reduce using rule 193 (EXP -> EXP is not null .)
    union           reduce using rule 193 (EXP -> EXP is not null .)
    intersect       reduce using rule 193 (EXP -> EXP is not null .)
    except          reduce using rule 193 (EXP -> EXP is not null .)
    order           reduce using rule 193 (EXP -> EXP is not null .)
    limit           reduce using rule 193 (EXP -> EXP is not null .)
    offset          reduce using rule 193 (EXP -> EXP is not null .)
    ptcoma          reduce using rule 193 (EXP -> EXP is not null .)
    mas             reduce using rule 193 (EXP -> EXP is not null .)
    menos           reduce using rule 193 (EXP -> EXP is not null .)
    multiplicacion  reduce using rule 193 (EXP -> EXP is not null .)
    division        reduce using rule 193 (EXP -> EXP is not null .)
    modulo          reduce using rule 193 (EXP -> EXP is not null .)
    elevado         reduce using rule 193 (EXP -> EXP is not null .)
    and             reduce using rule 193 (EXP -> EXP is not null .)
    or              reduce using rule 193 (EXP -> EXP is not null .)
    mayor           reduce using rule 193 (EXP -> EXP is not null .)
    menor           reduce using rule 193 (EXP -> EXP is not null .)
    mayor_igual     reduce using rule 193 (EXP -> EXP is not null .)
    menor_igual     reduce using rule 193 (EXP -> EXP is not null .)
    igual           reduce using rule 193 (EXP -> EXP is not null .)
    diferente1      reduce using rule 193 (EXP -> EXP is not null .)
    diferente2      reduce using rule 193 (EXP -> EXP is not null .)
    between         reduce using rule 193 (EXP -> EXP is not null .)
    is              reduce using rule 193 (EXP -> EXP is not null .)
    not             reduce using rule 193 (EXP -> EXP is not null .)
    as              reduce using rule 193 (EXP -> EXP is not null .)
    like            reduce using rule 193 (EXP -> EXP is not null .)
    isnull          reduce using rule 193 (EXP -> EXP is not null .)
    notnull         reduce using rule 193 (EXP -> EXP is not null .)
    cadenaString    reduce using rule 193 (EXP -> EXP is not null .)
    id              reduce using rule 193 (EXP -> EXP is not null .)
    cadena          reduce using rule 193 (EXP -> EXP is not null .)
    in              reduce using rule 193 (EXP -> EXP is not null .)
    parc            reduce using rule 193 (EXP -> EXP is not null .)
    then            reduce using rule 193 (EXP -> EXP is not null .)
    end             reduce using rule 193 (EXP -> EXP is not null .)
    else            reduce using rule 193 (EXP -> EXP is not null .)
    when            reduce using rule 193 (EXP -> EXP is not null .)
    constraint      reduce using rule 193 (EXP -> EXP is not null .)
    primary         reduce using rule 193 (EXP -> EXP is not null .)
    null            reduce using rule 193 (EXP -> EXP is not null .)
    unique          reduce using rule 193 (EXP -> EXP is not null .)
    references      reduce using rule 193 (EXP -> EXP is not null .)
    check           reduce using rule 193 (EXP -> EXP is not null .)
    default         reduce using rule 193 (EXP -> EXP is not null .)
    asc             reduce using rule 193 (EXP -> EXP is not null .)
    desc            reduce using rule 193 (EXP -> EXP is not null .)


state 261

    (194) EXP -> EXP is not true .

    r_from          reduce using rule 194 (EXP -> EXP is not true .)
    coma            reduce using rule 194 (EXP -> EXP is not true .)
    where           reduce using rule 194 (EXP -> EXP is not true .)
    group           reduce using rule 194 (EXP -> EXP is not true .)
    having          reduce using rule 194 (EXP -> EXP is not true .)
    union           reduce using rule 194 (EXP -> EXP is not true .)
    intersect       reduce using rule 194 (EXP -> EXP is not true .)
    except          reduce using rule 194 (EXP -> EXP is not true .)
    order           reduce using rule 194 (EXP -> EXP is not true .)
    limit           reduce using rule 194 (EXP -> EXP is not true .)
    offset          reduce using rule 194 (EXP -> EXP is not true .)
    ptcoma          reduce using rule 194 (EXP -> EXP is not true .)
    mas             reduce using rule 194 (EXP -> EXP is not true .)
    menos           reduce using rule 194 (EXP -> EXP is not true .)
    multiplicacion  reduce using rule 194 (EXP -> EXP is not true .)
    division        reduce using rule 194 (EXP -> EXP is not true .)
    modulo          reduce using rule 194 (EXP -> EXP is not true .)
    elevado         reduce using rule 194 (EXP -> EXP is not true .)
    and             reduce using rule 194 (EXP -> EXP is not true .)
    or              reduce using rule 194 (EXP -> EXP is not true .)
    mayor           reduce using rule 194 (EXP -> EXP is not true .)
    menor           reduce using rule 194 (EXP -> EXP is not true .)
    mayor_igual     reduce using rule 194 (EXP -> EXP is not true .)
    menor_igual     reduce using rule 194 (EXP -> EXP is not true .)
    igual           reduce using rule 194 (EXP -> EXP is not true .)
    diferente1      reduce using rule 194 (EXP -> EXP is not true .)
    diferente2      reduce using rule 194 (EXP -> EXP is not true .)
    between         reduce using rule 194 (EXP -> EXP is not true .)
    is              reduce using rule 194 (EXP -> EXP is not true .)
    not             reduce using rule 194 (EXP -> EXP is not true .)
    as              reduce using rule 194 (EXP -> EXP is not true .)
    like            reduce using rule 194 (EXP -> EXP is not true .)
    isnull          reduce using rule 194 (EXP -> EXP is not true .)
    notnull         reduce using rule 194 (EXP -> EXP is not true .)
    cadenaString    reduce using rule 194 (EXP -> EXP is not true .)
    id              reduce using rule 194 (EXP -> EXP is not true .)
    cadena          reduce using rule 194 (EXP -> EXP is not true .)
    in              reduce using rule 194 (EXP -> EXP is not true .)
    parc            reduce using rule 194 (EXP -> EXP is not true .)
    then            reduce using rule 194 (EXP -> EXP is not true .)
    end             reduce using rule 194 (EXP -> EXP is not true .)
    else            reduce using rule 194 (EXP -> EXP is not true .)
    when            reduce using rule 194 (EXP -> EXP is not true .)
    constraint      reduce using rule 194 (EXP -> EXP is not true .)
    primary         reduce using rule 194 (EXP -> EXP is not true .)
    null            reduce using rule 194 (EXP -> EXP is not true .)
    unique          reduce using rule 194 (EXP -> EXP is not true .)
    references      reduce using rule 194 (EXP -> EXP is not true .)
    check           reduce using rule 194 (EXP -> EXP is not true .)
    default         reduce using rule 194 (EXP -> EXP is not true .)
    asc             reduce using rule 194 (EXP -> EXP is not true .)
    desc            reduce using rule 194 (EXP -> EXP is not true .)


state 262

    (195) EXP -> EXP is not false .

    r_from          reduce using rule 195 (EXP -> EXP is not false .)
    coma            reduce using rule 195 (EXP -> EXP is not false .)
    where           reduce using rule 195 (EXP -> EXP is not false .)
    group           reduce using rule 195 (EXP -> EXP is not false .)
    having          reduce using rule 195 (EXP -> EXP is not false .)
    union           reduce using rule 195 (EXP -> EXP is not false .)
    intersect       reduce using rule 195 (EXP -> EXP is not false .)
    except          reduce using rule 195 (EXP -> EXP is not false .)
    order           reduce using rule 195 (EXP -> EXP is not false .)
    limit           reduce using rule 195 (EXP -> EXP is not false .)
    offset          reduce using rule 195 (EXP -> EXP is not false .)
    ptcoma          reduce using rule 195 (EXP -> EXP is not false .)
    mas             reduce using rule 195 (EXP -> EXP is not false .)
    menos           reduce using rule 195 (EXP -> EXP is not false .)
    multiplicacion  reduce using rule 195 (EXP -> EXP is not false .)
    division        reduce using rule 195 (EXP -> EXP is not false .)
    modulo          reduce using rule 195 (EXP -> EXP is not false .)
    elevado         reduce using rule 195 (EXP -> EXP is not false .)
    and             reduce using rule 195 (EXP -> EXP is not false .)
    or              reduce using rule 195 (EXP -> EXP is not false .)
    mayor           reduce using rule 195 (EXP -> EXP is not false .)
    menor           reduce using rule 195 (EXP -> EXP is not false .)
    mayor_igual     reduce using rule 195 (EXP -> EXP is not false .)
    menor_igual     reduce using rule 195 (EXP -> EXP is not false .)
    igual           reduce using rule 195 (EXP -> EXP is not false .)
    diferente1      reduce using rule 195 (EXP -> EXP is not false .)
    diferente2      reduce using rule 195 (EXP -> EXP is not false .)
    between         reduce using rule 195 (EXP -> EXP is not false .)
    is              reduce using rule 195 (EXP -> EXP is not false .)
    not             reduce using rule 195 (EXP -> EXP is not false .)
    as              reduce using rule 195 (EXP -> EXP is not false .)
    like            reduce using rule 195 (EXP -> EXP is not false .)
    isnull          reduce using rule 195 (EXP -> EXP is not false .)
    notnull         reduce using rule 195 (EXP -> EXP is not false .)
    cadenaString    reduce using rule 195 (EXP -> EXP is not false .)
    id              reduce using rule 195 (EXP -> EXP is not false .)
    cadena          reduce using rule 195 (EXP -> EXP is not false .)
    in              reduce using rule 195 (EXP -> EXP is not false .)
    parc            reduce using rule 195 (EXP -> EXP is not false .)
    then            reduce using rule 195 (EXP -> EXP is not false .)
    end             reduce using rule 195 (EXP -> EXP is not false .)
    else            reduce using rule 195 (EXP -> EXP is not false .)
    when            reduce using rule 195 (EXP -> EXP is not false .)
    constraint      reduce using rule 195 (EXP -> EXP is not false .)
    primary         reduce using rule 195 (EXP -> EXP is not false .)
    null            reduce using rule 195 (EXP -> EXP is not false .)
    unique          reduce using rule 195 (EXP -> EXP is not false .)
    references      reduce using rule 195 (EXP -> EXP is not false .)
    check           reduce using rule 195 (EXP -> EXP is not false .)
    default         reduce using rule 195 (EXP -> EXP is not false .)
    asc             reduce using rule 195 (EXP -> EXP is not false .)
    desc            reduce using rule 195 (EXP -> EXP is not false .)


state 263

    (196) EXP -> EXP is not unknown .

    r_from          reduce using rule 196 (EXP -> EXP is not unknown .)
    coma            reduce using rule 196 (EXP -> EXP is not unknown .)
    where           reduce using rule 196 (EXP -> EXP is not unknown .)
    group           reduce using rule 196 (EXP -> EXP is not unknown .)
    having          reduce using rule 196 (EXP -> EXP is not unknown .)
    union           reduce using rule 196 (EXP -> EXP is not unknown .)
    intersect       reduce using rule 196 (EXP -> EXP is not unknown .)
    except          reduce using rule 196 (EXP -> EXP is not unknown .)
    order           reduce using rule 196 (EXP -> EXP is not unknown .)
    limit           reduce using rule 196 (EXP -> EXP is not unknown .)
    offset          reduce using rule 196 (EXP -> EXP is not unknown .)
    ptcoma          reduce using rule 196 (EXP -> EXP is not unknown .)
    mas             reduce using rule 196 (EXP -> EXP is not unknown .)
    menos           reduce using rule 196 (EXP -> EXP is not unknown .)
    multiplicacion  reduce using rule 196 (EXP -> EXP is not unknown .)
    division        reduce using rule 196 (EXP -> EXP is not unknown .)
    modulo          reduce using rule 196 (EXP -> EXP is not unknown .)
    elevado         reduce using rule 196 (EXP -> EXP is not unknown .)
    and             reduce using rule 196 (EXP -> EXP is not unknown .)
    or              reduce using rule 196 (EXP -> EXP is not unknown .)
    mayor           reduce using rule 196 (EXP -> EXP is not unknown .)
    menor           reduce using rule 196 (EXP -> EXP is not unknown .)
    mayor_igual     reduce using rule 196 (EXP -> EXP is not unknown .)
    menor_igual     reduce using rule 196 (EXP -> EXP is not unknown .)
    igual           reduce using rule 196 (EXP -> EXP is not unknown .)
    diferente1      reduce using rule 196 (EXP -> EXP is not unknown .)
    diferente2      reduce using rule 196 (EXP -> EXP is not unknown .)
    between         reduce using rule 196 (EXP -> EXP is not unknown .)
    is              reduce using rule 196 (EXP -> EXP is not unknown .)
    not             reduce using rule 196 (EXP -> EXP is not unknown .)
    as              reduce using rule 196 (EXP -> EXP is not unknown .)
    like            reduce using rule 196 (EXP -> EXP is not unknown .)
    isnull          reduce using rule 196 (EXP -> EXP is not unknown .)
    notnull         reduce using rule 196 (EXP -> EXP is not unknown .)
    cadenaString    reduce using rule 196 (EXP -> EXP is not unknown .)
    id              reduce using rule 196 (EXP -> EXP is not unknown .)
    cadena          reduce using rule 196 (EXP -> EXP is not unknown .)
    in              reduce using rule 196 (EXP -> EXP is not unknown .)
    parc            reduce using rule 196 (EXP -> EXP is not unknown .)
    then            reduce using rule 196 (EXP -> EXP is not unknown .)
    end             reduce using rule 196 (EXP -> EXP is not unknown .)
    else            reduce using rule 196 (EXP -> EXP is not unknown .)
    when            reduce using rule 196 (EXP -> EXP is not unknown .)
    constraint      reduce using rule 196 (EXP -> EXP is not unknown .)
    primary         reduce using rule 196 (EXP -> EXP is not unknown .)
    null            reduce using rule 196 (EXP -> EXP is not unknown .)
    unique          reduce using rule 196 (EXP -> EXP is not unknown .)
    references      reduce using rule 196 (EXP -> EXP is not unknown .)
    check           reduce using rule 196 (EXP -> EXP is not unknown .)
    default         reduce using rule 196 (EXP -> EXP is not unknown .)
    asc             reduce using rule 196 (EXP -> EXP is not unknown .)
    desc            reduce using rule 196 (EXP -> EXP is not unknown .)


state 264

    (218) EXP -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 340


state 265

    (219) EXP -> EXP is distinct r_from . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 341
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 266

    (197) EXP -> EXP not like cadena .

    r_from          reduce using rule 197 (EXP -> EXP not like cadena .)
    coma            reduce using rule 197 (EXP -> EXP not like cadena .)
    where           reduce using rule 197 (EXP -> EXP not like cadena .)
    group           reduce using rule 197 (EXP -> EXP not like cadena .)
    having          reduce using rule 197 (EXP -> EXP not like cadena .)
    union           reduce using rule 197 (EXP -> EXP not like cadena .)
    intersect       reduce using rule 197 (EXP -> EXP not like cadena .)
    except          reduce using rule 197 (EXP -> EXP not like cadena .)
    order           reduce using rule 197 (EXP -> EXP not like cadena .)
    limit           reduce using rule 197 (EXP -> EXP not like cadena .)
    offset          reduce using rule 197 (EXP -> EXP not like cadena .)
    ptcoma          reduce using rule 197 (EXP -> EXP not like cadena .)
    mas             reduce using rule 197 (EXP -> EXP not like cadena .)
    menos           reduce using rule 197 (EXP -> EXP not like cadena .)
    multiplicacion  reduce using rule 197 (EXP -> EXP not like cadena .)
    division        reduce using rule 197 (EXP -> EXP not like cadena .)
    modulo          reduce using rule 197 (EXP -> EXP not like cadena .)
    elevado         reduce using rule 197 (EXP -> EXP not like cadena .)
    and             reduce using rule 197 (EXP -> EXP not like cadena .)
    or              reduce using rule 197 (EXP -> EXP not like cadena .)
    mayor           reduce using rule 197 (EXP -> EXP not like cadena .)
    menor           reduce using rule 197 (EXP -> EXP not like cadena .)
    mayor_igual     reduce using rule 197 (EXP -> EXP not like cadena .)
    menor_igual     reduce using rule 197 (EXP -> EXP not like cadena .)
    igual           reduce using rule 197 (EXP -> EXP not like cadena .)
    diferente1      reduce using rule 197 (EXP -> EXP not like cadena .)
    diferente2      reduce using rule 197 (EXP -> EXP not like cadena .)
    between         reduce using rule 197 (EXP -> EXP not like cadena .)
    is              reduce using rule 197 (EXP -> EXP not like cadena .)
    not             reduce using rule 197 (EXP -> EXP not like cadena .)
    as              reduce using rule 197 (EXP -> EXP not like cadena .)
    like            reduce using rule 197 (EXP -> EXP not like cadena .)
    isnull          reduce using rule 197 (EXP -> EXP not like cadena .)
    notnull         reduce using rule 197 (EXP -> EXP not like cadena .)
    cadenaString    reduce using rule 197 (EXP -> EXP not like cadena .)
    id              reduce using rule 197 (EXP -> EXP not like cadena .)
    cadena          reduce using rule 197 (EXP -> EXP not like cadena .)
    in              reduce using rule 197 (EXP -> EXP not like cadena .)
    parc            reduce using rule 197 (EXP -> EXP not like cadena .)
    then            reduce using rule 197 (EXP -> EXP not like cadena .)
    end             reduce using rule 197 (EXP -> EXP not like cadena .)
    else            reduce using rule 197 (EXP -> EXP not like cadena .)
    when            reduce using rule 197 (EXP -> EXP not like cadena .)
    constraint      reduce using rule 197 (EXP -> EXP not like cadena .)
    primary         reduce using rule 197 (EXP -> EXP not like cadena .)
    null            reduce using rule 197 (EXP -> EXP not like cadena .)
    unique          reduce using rule 197 (EXP -> EXP not like cadena .)
    references      reduce using rule 197 (EXP -> EXP not like cadena .)
    check           reduce using rule 197 (EXP -> EXP not like cadena .)
    default         reduce using rule 197 (EXP -> EXP not like cadena .)
    asc             reduce using rule 197 (EXP -> EXP not like cadena .)
    desc            reduce using rule 197 (EXP -> EXP not like cadena .)


state 267

    (214) EXP -> EXP not between EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 214 (EXP -> EXP not between EXP .)
    coma            reduce using rule 214 (EXP -> EXP not between EXP .)
    where           reduce using rule 214 (EXP -> EXP not between EXP .)
    group           reduce using rule 214 (EXP -> EXP not between EXP .)
    having          reduce using rule 214 (EXP -> EXP not between EXP .)
    union           reduce using rule 214 (EXP -> EXP not between EXP .)
    intersect       reduce using rule 214 (EXP -> EXP not between EXP .)
    except          reduce using rule 214 (EXP -> EXP not between EXP .)
    order           reduce using rule 214 (EXP -> EXP not between EXP .)
    limit           reduce using rule 214 (EXP -> EXP not between EXP .)
    offset          reduce using rule 214 (EXP -> EXP not between EXP .)
    ptcoma          reduce using rule 214 (EXP -> EXP not between EXP .)
    and             reduce using rule 214 (EXP -> EXP not between EXP .)
    or              reduce using rule 214 (EXP -> EXP not between EXP .)
    between         reduce using rule 214 (EXP -> EXP not between EXP .)
    is              reduce using rule 214 (EXP -> EXP not between EXP .)
    not             reduce using rule 214 (EXP -> EXP not between EXP .)
    as              reduce using rule 214 (EXP -> EXP not between EXP .)
    like            reduce using rule 214 (EXP -> EXP not between EXP .)
    isnull          reduce using rule 214 (EXP -> EXP not between EXP .)
    notnull         reduce using rule 214 (EXP -> EXP not between EXP .)
    cadenaString    reduce using rule 214 (EXP -> EXP not between EXP .)
    id              reduce using rule 214 (EXP -> EXP not between EXP .)
    cadena          reduce using rule 214 (EXP -> EXP not between EXP .)
    in              reduce using rule 214 (EXP -> EXP not between EXP .)
    parc            reduce using rule 214 (EXP -> EXP not between EXP .)
    then            reduce using rule 214 (EXP -> EXP not between EXP .)
    end             reduce using rule 214 (EXP -> EXP not between EXP .)
    else            reduce using rule 214 (EXP -> EXP not between EXP .)
    when            reduce using rule 214 (EXP -> EXP not between EXP .)
    constraint      reduce using rule 214 (EXP -> EXP not between EXP .)
    primary         reduce using rule 214 (EXP -> EXP not between EXP .)
    null            reduce using rule 214 (EXP -> EXP not between EXP .)
    unique          reduce using rule 214 (EXP -> EXP not between EXP .)
    references      reduce using rule 214 (EXP -> EXP not between EXP .)
    check           reduce using rule 214 (EXP -> EXP not between EXP .)
    default         reduce using rule 214 (EXP -> EXP not between EXP .)
    asc             reduce using rule 214 (EXP -> EXP not between EXP .)
    desc            reduce using rule 214 (EXP -> EXP not between EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! menos           [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! multiplicacion  [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! division        [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! modulo          [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! elevado         [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! mayor           [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! menor           [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! mayor_igual     [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! menor_igual     [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! igual           [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! diferente1      [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! diferente2      [ reduce using rule 214 (EXP -> EXP not between EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 268

    (220) EXP -> EXP not between symetric . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 342
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 269

    (217) EXP -> EXP not in para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 40
    LEXP                           shift and go to state 343
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 270

    (216) EXP -> EXP in para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 344
    coma            shift and go to state 89


state 271

    (137) TIPO -> decimal para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 345
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 272

    (138) TIPO -> numeric para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 346
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 273

    (139) TIPO -> varchar para . int parc

    int             shift and go to state 347


state 274

    (140) TIPO -> timestamp para . int parc
    (147) TIPO -> timestamp para . int parc without time zone
    (148) TIPO -> timestamp para . int parc with time zone

    int             shift and go to state 348


state 275

    (167) TIPO -> timestamp without . time zone

    time            shift and go to state 349


state 276

    (168) TIPO -> timestamp with . time zone

    time            shift and go to state 350


state 277

    (141) TIPO -> character para . int parc

    int             shift and go to state 351


state 278

    (145) TIPO -> character varying . para int parc

    para            shift and go to state 352


state 279

    (142) TIPO -> interval para . int parc
    (151) TIPO -> interval para . int parc cadena

    int             shift and go to state 353


state 280

    (146) TIPO -> interval cadena .

    r_from          reduce using rule 146 (TIPO -> interval cadena .)
    coma            reduce using rule 146 (TIPO -> interval cadena .)
    where           reduce using rule 146 (TIPO -> interval cadena .)
    group           reduce using rule 146 (TIPO -> interval cadena .)
    having          reduce using rule 146 (TIPO -> interval cadena .)
    union           reduce using rule 146 (TIPO -> interval cadena .)
    intersect       reduce using rule 146 (TIPO -> interval cadena .)
    except          reduce using rule 146 (TIPO -> interval cadena .)
    order           reduce using rule 146 (TIPO -> interval cadena .)
    limit           reduce using rule 146 (TIPO -> interval cadena .)
    offset          reduce using rule 146 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 146 (TIPO -> interval cadena .)
    mas             reduce using rule 146 (TIPO -> interval cadena .)
    menos           reduce using rule 146 (TIPO -> interval cadena .)
    multiplicacion  reduce using rule 146 (TIPO -> interval cadena .)
    division        reduce using rule 146 (TIPO -> interval cadena .)
    modulo          reduce using rule 146 (TIPO -> interval cadena .)
    elevado         reduce using rule 146 (TIPO -> interval cadena .)
    and             reduce using rule 146 (TIPO -> interval cadena .)
    or              reduce using rule 146 (TIPO -> interval cadena .)
    mayor           reduce using rule 146 (TIPO -> interval cadena .)
    menor           reduce using rule 146 (TIPO -> interval cadena .)
    mayor_igual     reduce using rule 146 (TIPO -> interval cadena .)
    menor_igual     reduce using rule 146 (TIPO -> interval cadena .)
    igual           reduce using rule 146 (TIPO -> interval cadena .)
    diferente1      reduce using rule 146 (TIPO -> interval cadena .)
    diferente2      reduce using rule 146 (TIPO -> interval cadena .)
    between         reduce using rule 146 (TIPO -> interval cadena .)
    is              reduce using rule 146 (TIPO -> interval cadena .)
    not             reduce using rule 146 (TIPO -> interval cadena .)
    as              reduce using rule 146 (TIPO -> interval cadena .)
    like            reduce using rule 146 (TIPO -> interval cadena .)
    isnull          reduce using rule 146 (TIPO -> interval cadena .)
    notnull         reduce using rule 146 (TIPO -> interval cadena .)
    cadenaString    reduce using rule 146 (TIPO -> interval cadena .)
    id              reduce using rule 146 (TIPO -> interval cadena .)
    cadena          reduce using rule 146 (TIPO -> interval cadena .)
    in              reduce using rule 146 (TIPO -> interval cadena .)
    parc            reduce using rule 146 (TIPO -> interval cadena .)
    then            reduce using rule 146 (TIPO -> interval cadena .)
    end             reduce using rule 146 (TIPO -> interval cadena .)
    else            reduce using rule 146 (TIPO -> interval cadena .)
    when            reduce using rule 146 (TIPO -> interval cadena .)
    constraint      reduce using rule 146 (TIPO -> interval cadena .)
    primary         reduce using rule 146 (TIPO -> interval cadena .)
    null            reduce using rule 146 (TIPO -> interval cadena .)
    unique          reduce using rule 146 (TIPO -> interval cadena .)
    references      reduce using rule 146 (TIPO -> interval cadena .)
    check           reduce using rule 146 (TIPO -> interval cadena .)
    default         reduce using rule 146 (TIPO -> interval cadena .)
    asc             reduce using rule 146 (TIPO -> interval cadena .)
    desc            reduce using rule 146 (TIPO -> interval cadena .)


state 281

    (143) TIPO -> char para . int parc

    int             shift and go to state 354


state 282

    (144) TIPO -> time para . int parc
    (149) TIPO -> time para . int parc without time zone
    (150) TIPO -> time para . int parc with time zone

    int             shift and go to state 355


state 283

    (169) TIPO -> time without . time zone

    time            shift and go to state 356


state 284

    (170) TIPO -> time with . time zone

    time            shift and go to state 357


state 285

    (156) TIPO -> double precision .

    r_from          reduce using rule 156 (TIPO -> double precision .)
    coma            reduce using rule 156 (TIPO -> double precision .)
    where           reduce using rule 156 (TIPO -> double precision .)
    group           reduce using rule 156 (TIPO -> double precision .)
    having          reduce using rule 156 (TIPO -> double precision .)
    union           reduce using rule 156 (TIPO -> double precision .)
    intersect       reduce using rule 156 (TIPO -> double precision .)
    except          reduce using rule 156 (TIPO -> double precision .)
    order           reduce using rule 156 (TIPO -> double precision .)
    limit           reduce using rule 156 (TIPO -> double precision .)
    offset          reduce using rule 156 (TIPO -> double precision .)
    ptcoma          reduce using rule 156 (TIPO -> double precision .)
    mas             reduce using rule 156 (TIPO -> double precision .)
    menos           reduce using rule 156 (TIPO -> double precision .)
    multiplicacion  reduce using rule 156 (TIPO -> double precision .)
    division        reduce using rule 156 (TIPO -> double precision .)
    modulo          reduce using rule 156 (TIPO -> double precision .)
    elevado         reduce using rule 156 (TIPO -> double precision .)
    and             reduce using rule 156 (TIPO -> double precision .)
    or              reduce using rule 156 (TIPO -> double precision .)
    mayor           reduce using rule 156 (TIPO -> double precision .)
    menor           reduce using rule 156 (TIPO -> double precision .)
    mayor_igual     reduce using rule 156 (TIPO -> double precision .)
    menor_igual     reduce using rule 156 (TIPO -> double precision .)
    igual           reduce using rule 156 (TIPO -> double precision .)
    diferente1      reduce using rule 156 (TIPO -> double precision .)
    diferente2      reduce using rule 156 (TIPO -> double precision .)
    between         reduce using rule 156 (TIPO -> double precision .)
    is              reduce using rule 156 (TIPO -> double precision .)
    not             reduce using rule 156 (TIPO -> double precision .)
    as              reduce using rule 156 (TIPO -> double precision .)
    like            reduce using rule 156 (TIPO -> double precision .)
    isnull          reduce using rule 156 (TIPO -> double precision .)
    notnull         reduce using rule 156 (TIPO -> double precision .)
    cadenaString    reduce using rule 156 (TIPO -> double precision .)
    id              reduce using rule 156 (TIPO -> double precision .)
    cadena          reduce using rule 156 (TIPO -> double precision .)
    in              reduce using rule 156 (TIPO -> double precision .)
    parc            reduce using rule 156 (TIPO -> double precision .)
    then            reduce using rule 156 (TIPO -> double precision .)
    end             reduce using rule 156 (TIPO -> double precision .)
    else            reduce using rule 156 (TIPO -> double precision .)
    when            reduce using rule 156 (TIPO -> double precision .)
    constraint      reduce using rule 156 (TIPO -> double precision .)
    primary         reduce using rule 156 (TIPO -> double precision .)
    null            reduce using rule 156 (TIPO -> double precision .)
    unique          reduce using rule 156 (TIPO -> double precision .)
    references      reduce using rule 156 (TIPO -> double precision .)
    check           reduce using rule 156 (TIPO -> double precision .)
    default         reduce using rule 156 (TIPO -> double precision .)
    asc             reduce using rule 156 (TIPO -> double precision .)
    desc            reduce using rule 156 (TIPO -> double precision .)


state 286

    (225) EXP -> id para LEXP parc .

    r_from          reduce using rule 225 (EXP -> id para LEXP parc .)
    coma            reduce using rule 225 (EXP -> id para LEXP parc .)
    where           reduce using rule 225 (EXP -> id para LEXP parc .)
    group           reduce using rule 225 (EXP -> id para LEXP parc .)
    having          reduce using rule 225 (EXP -> id para LEXP parc .)
    union           reduce using rule 225 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 225 (EXP -> id para LEXP parc .)
    except          reduce using rule 225 (EXP -> id para LEXP parc .)
    order           reduce using rule 225 (EXP -> id para LEXP parc .)
    limit           reduce using rule 225 (EXP -> id para LEXP parc .)
    offset          reduce using rule 225 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 225 (EXP -> id para LEXP parc .)
    mas             reduce using rule 225 (EXP -> id para LEXP parc .)
    menos           reduce using rule 225 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 225 (EXP -> id para LEXP parc .)
    division        reduce using rule 225 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 225 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 225 (EXP -> id para LEXP parc .)
    and             reduce using rule 225 (EXP -> id para LEXP parc .)
    or              reduce using rule 225 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 225 (EXP -> id para LEXP parc .)
    menor           reduce using rule 225 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 225 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 225 (EXP -> id para LEXP parc .)
    igual           reduce using rule 225 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 225 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 225 (EXP -> id para LEXP parc .)
    between         reduce using rule 225 (EXP -> id para LEXP parc .)
    is              reduce using rule 225 (EXP -> id para LEXP parc .)
    not             reduce using rule 225 (EXP -> id para LEXP parc .)
    as              reduce using rule 225 (EXP -> id para LEXP parc .)
    like            reduce using rule 225 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 225 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 225 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 225 (EXP -> id para LEXP parc .)
    id              reduce using rule 225 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 225 (EXP -> id para LEXP parc .)
    in              reduce using rule 225 (EXP -> id para LEXP parc .)
    parc            reduce using rule 225 (EXP -> id para LEXP parc .)
    then            reduce using rule 225 (EXP -> id para LEXP parc .)
    end             reduce using rule 225 (EXP -> id para LEXP parc .)
    else            reduce using rule 225 (EXP -> id para LEXP parc .)
    when            reduce using rule 225 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 225 (EXP -> id para LEXP parc .)
    primary         reduce using rule 225 (EXP -> id para LEXP parc .)
    null            reduce using rule 225 (EXP -> id para LEXP parc .)
    unique          reduce using rule 225 (EXP -> id para LEXP parc .)
    references      reduce using rule 225 (EXP -> id para LEXP parc .)
    check           reduce using rule 225 (EXP -> id para LEXP parc .)
    default         reduce using rule 225 (EXP -> id para LEXP parc .)
    asc             reduce using rule 225 (EXP -> id para LEXP parc .)
    desc            reduce using rule 225 (EXP -> id para LEXP parc .)


state 287

    (226) EXP -> any para LEXP parc .

    r_from          reduce using rule 226 (EXP -> any para LEXP parc .)
    coma            reduce using rule 226 (EXP -> any para LEXP parc .)
    where           reduce using rule 226 (EXP -> any para LEXP parc .)
    group           reduce using rule 226 (EXP -> any para LEXP parc .)
    having          reduce using rule 226 (EXP -> any para LEXP parc .)
    union           reduce using rule 226 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 226 (EXP -> any para LEXP parc .)
    except          reduce using rule 226 (EXP -> any para LEXP parc .)
    order           reduce using rule 226 (EXP -> any para LEXP parc .)
    limit           reduce using rule 226 (EXP -> any para LEXP parc .)
    offset          reduce using rule 226 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 226 (EXP -> any para LEXP parc .)
    mas             reduce using rule 226 (EXP -> any para LEXP parc .)
    menos           reduce using rule 226 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 226 (EXP -> any para LEXP parc .)
    division        reduce using rule 226 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 226 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 226 (EXP -> any para LEXP parc .)
    and             reduce using rule 226 (EXP -> any para LEXP parc .)
    or              reduce using rule 226 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 226 (EXP -> any para LEXP parc .)
    menor           reduce using rule 226 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 226 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 226 (EXP -> any para LEXP parc .)
    igual           reduce using rule 226 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 226 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 226 (EXP -> any para LEXP parc .)
    between         reduce using rule 226 (EXP -> any para LEXP parc .)
    is              reduce using rule 226 (EXP -> any para LEXP parc .)
    not             reduce using rule 226 (EXP -> any para LEXP parc .)
    as              reduce using rule 226 (EXP -> any para LEXP parc .)
    like            reduce using rule 226 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 226 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 226 (EXP -> any para LEXP parc .)
    cadenaString    reduce using rule 226 (EXP -> any para LEXP parc .)
    id              reduce using rule 226 (EXP -> any para LEXP parc .)
    cadena          reduce using rule 226 (EXP -> any para LEXP parc .)
    in              reduce using rule 226 (EXP -> any para LEXP parc .)
    parc            reduce using rule 226 (EXP -> any para LEXP parc .)
    then            reduce using rule 226 (EXP -> any para LEXP parc .)
    end             reduce using rule 226 (EXP -> any para LEXP parc .)
    else            reduce using rule 226 (EXP -> any para LEXP parc .)
    when            reduce using rule 226 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 226 (EXP -> any para LEXP parc .)
    primary         reduce using rule 226 (EXP -> any para LEXP parc .)
    null            reduce using rule 226 (EXP -> any para LEXP parc .)
    unique          reduce using rule 226 (EXP -> any para LEXP parc .)
    references      reduce using rule 226 (EXP -> any para LEXP parc .)
    check           reduce using rule 226 (EXP -> any para LEXP parc .)
    default         reduce using rule 226 (EXP -> any para LEXP parc .)
    asc             reduce using rule 226 (EXP -> any para LEXP parc .)
    desc            reduce using rule 226 (EXP -> any para LEXP parc .)


state 288

    (227) EXP -> all para LEXP parc .

    r_from          reduce using rule 227 (EXP -> all para LEXP parc .)
    coma            reduce using rule 227 (EXP -> all para LEXP parc .)
    where           reduce using rule 227 (EXP -> all para LEXP parc .)
    group           reduce using rule 227 (EXP -> all para LEXP parc .)
    having          reduce using rule 227 (EXP -> all para LEXP parc .)
    union           reduce using rule 227 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 227 (EXP -> all para LEXP parc .)
    except          reduce using rule 227 (EXP -> all para LEXP parc .)
    order           reduce using rule 227 (EXP -> all para LEXP parc .)
    limit           reduce using rule 227 (EXP -> all para LEXP parc .)
    offset          reduce using rule 227 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 227 (EXP -> all para LEXP parc .)
    mas             reduce using rule 227 (EXP -> all para LEXP parc .)
    menos           reduce using rule 227 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 227 (EXP -> all para LEXP parc .)
    division        reduce using rule 227 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 227 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 227 (EXP -> all para LEXP parc .)
    and             reduce using rule 227 (EXP -> all para LEXP parc .)
    or              reduce using rule 227 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 227 (EXP -> all para LEXP parc .)
    menor           reduce using rule 227 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 227 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 227 (EXP -> all para LEXP parc .)
    igual           reduce using rule 227 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 227 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 227 (EXP -> all para LEXP parc .)
    between         reduce using rule 227 (EXP -> all para LEXP parc .)
    is              reduce using rule 227 (EXP -> all para LEXP parc .)
    not             reduce using rule 227 (EXP -> all para LEXP parc .)
    as              reduce using rule 227 (EXP -> all para LEXP parc .)
    like            reduce using rule 227 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 227 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 227 (EXP -> all para LEXP parc .)
    cadenaString    reduce using rule 227 (EXP -> all para LEXP parc .)
    id              reduce using rule 227 (EXP -> all para LEXP parc .)
    cadena          reduce using rule 227 (EXP -> all para LEXP parc .)
    in              reduce using rule 227 (EXP -> all para LEXP parc .)
    parc            reduce using rule 227 (EXP -> all para LEXP parc .)
    then            reduce using rule 227 (EXP -> all para LEXP parc .)
    end             reduce using rule 227 (EXP -> all para LEXP parc .)
    else            reduce using rule 227 (EXP -> all para LEXP parc .)
    when            reduce using rule 227 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 227 (EXP -> all para LEXP parc .)
    primary         reduce using rule 227 (EXP -> all para LEXP parc .)
    null            reduce using rule 227 (EXP -> all para LEXP parc .)
    unique          reduce using rule 227 (EXP -> all para LEXP parc .)
    references      reduce using rule 227 (EXP -> all para LEXP parc .)
    check           reduce using rule 227 (EXP -> all para LEXP parc .)
    default         reduce using rule 227 (EXP -> all para LEXP parc .)
    asc             reduce using rule 227 (EXP -> all para LEXP parc .)
    desc            reduce using rule 227 (EXP -> all para LEXP parc .)


state 289

    (228) EXP -> some para LEXP parc .

    r_from          reduce using rule 228 (EXP -> some para LEXP parc .)
    coma            reduce using rule 228 (EXP -> some para LEXP parc .)
    where           reduce using rule 228 (EXP -> some para LEXP parc .)
    group           reduce using rule 228 (EXP -> some para LEXP parc .)
    having          reduce using rule 228 (EXP -> some para LEXP parc .)
    union           reduce using rule 228 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 228 (EXP -> some para LEXP parc .)
    except          reduce using rule 228 (EXP -> some para LEXP parc .)
    order           reduce using rule 228 (EXP -> some para LEXP parc .)
    limit           reduce using rule 228 (EXP -> some para LEXP parc .)
    offset          reduce using rule 228 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 228 (EXP -> some para LEXP parc .)
    mas             reduce using rule 228 (EXP -> some para LEXP parc .)
    menos           reduce using rule 228 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 228 (EXP -> some para LEXP parc .)
    division        reduce using rule 228 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 228 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 228 (EXP -> some para LEXP parc .)
    and             reduce using rule 228 (EXP -> some para LEXP parc .)
    or              reduce using rule 228 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 228 (EXP -> some para LEXP parc .)
    menor           reduce using rule 228 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 228 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 228 (EXP -> some para LEXP parc .)
    igual           reduce using rule 228 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 228 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 228 (EXP -> some para LEXP parc .)
    between         reduce using rule 228 (EXP -> some para LEXP parc .)
    is              reduce using rule 228 (EXP -> some para LEXP parc .)
    not             reduce using rule 228 (EXP -> some para LEXP parc .)
    as              reduce using rule 228 (EXP -> some para LEXP parc .)
    like            reduce using rule 228 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 228 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 228 (EXP -> some para LEXP parc .)
    cadenaString    reduce using rule 228 (EXP -> some para LEXP parc .)
    id              reduce using rule 228 (EXP -> some para LEXP parc .)
    cadena          reduce using rule 228 (EXP -> some para LEXP parc .)
    in              reduce using rule 228 (EXP -> some para LEXP parc .)
    parc            reduce using rule 228 (EXP -> some para LEXP parc .)
    then            reduce using rule 228 (EXP -> some para LEXP parc .)
    end             reduce using rule 228 (EXP -> some para LEXP parc .)
    else            reduce using rule 228 (EXP -> some para LEXP parc .)
    when            reduce using rule 228 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 228 (EXP -> some para LEXP parc .)
    primary         reduce using rule 228 (EXP -> some para LEXP parc .)
    null            reduce using rule 228 (EXP -> some para LEXP parc .)
    unique          reduce using rule 228 (EXP -> some para LEXP parc .)
    references      reduce using rule 228 (EXP -> some para LEXP parc .)
    check           reduce using rule 228 (EXP -> some para LEXP parc .)
    default         reduce using rule 228 (EXP -> some para LEXP parc .)
    asc             reduce using rule 228 (EXP -> some para LEXP parc .)
    desc            reduce using rule 228 (EXP -> some para LEXP parc .)


state 290

    (229) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 358


state 291

    (75) COLDEF -> id . TIPO
    (76) COLDEF -> id . TIPO LOPCOLUMN
    (137) TIPO -> . decimal para LEXP parc
    (138) TIPO -> . numeric para LEXP parc
    (139) TIPO -> . varchar para int parc
    (140) TIPO -> . timestamp para int parc
    (141) TIPO -> . character para int parc
    (142) TIPO -> . interval para int parc
    (143) TIPO -> . char para int parc
    (144) TIPO -> . time para int parc
    (145) TIPO -> . character varying para int parc
    (146) TIPO -> . interval cadena
    (147) TIPO -> . timestamp para int parc without time zone
    (148) TIPO -> . timestamp para int parc with time zone
    (149) TIPO -> . time para int parc without time zone
    (150) TIPO -> . time para int parc with time zone
    (151) TIPO -> . interval para int parc cadena
    (152) TIPO -> . smallint
    (153) TIPO -> . integer
    (154) TIPO -> . bigint
    (155) TIPO -> . real
    (156) TIPO -> . double precision
    (157) TIPO -> . money
    (158) TIPO -> . text
    (159) TIPO -> . timestamp
    (160) TIPO -> . date
    (161) TIPO -> . time
    (162) TIPO -> . interval
    (163) TIPO -> . boolean
    (164) TIPO -> . decimal
    (165) TIPO -> . numeric
    (166) TIPO -> . id
    (167) TIPO -> . timestamp without time zone
    (168) TIPO -> . timestamp with time zone
    (169) TIPO -> . time without time zone
    (170) TIPO -> . time with time zone

    decimal         shift and go to state 191
    numeric         shift and go to state 192
    varchar         shift and go to state 193
    timestamp       shift and go to state 194
    character       shift and go to state 195
    interval        shift and go to state 196
    char            shift and go to state 197
    time            shift and go to state 198
    smallint        shift and go to state 199
    integer         shift and go to state 200
    bigint          shift and go to state 201
    real            shift and go to state 202
    double          shift and go to state 203
    money           shift and go to state 204
    text            shift and go to state 205
    date            shift and go to state 206
    boolean         shift and go to state 207
    id              shift and go to state 208

    TIPO                           shift and go to state 359

state 292

    (69) CREATETABLE -> create table id para LDEF . parc ptcoma
    (70) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (71) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 360
    coma            shift and go to state 361


state 293

    (72) LDEF -> COLDEF .

    parc            reduce using rule 72 (LDEF -> COLDEF .)
    coma            reduce using rule 72 (LDEF -> COLDEF .)


state 294

    (73) COLDEF -> OPCONST .

    parc            reduce using rule 73 (COLDEF -> OPCONST .)
    coma            reduce using rule 73 (COLDEF -> OPCONST .)


state 295

    (74) COLDEF -> constraint . id OPCONST

    id              shift and go to state 362


state 296

    (88) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 363


state 297

    (89) OPCONST -> foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 364


state 298

    (90) OPCONST -> check . para CONDCHECK parc

    para            shift and go to state 365


state 299

    (91) OPCONST -> unique . para LEXP parc

    para            shift and go to state 366


state 300

    (100) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 367


state 301

    (52) CREATEDB -> create RD if not exist . id
    (53) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 368


state 302

    (58) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 58 (OPCCDB -> PROPIETARIO MODO .)


state 303

    (61) PROPIETARIO -> owner igual . id
    (63) PROPIETARIO -> owner igual . cadena
    (65) PROPIETARIO -> owner igual . cadenaString

    id              shift and go to state 369
    cadena          shift and go to state 370
    cadenaString    shift and go to state 371


state 304

    (62) PROPIETARIO -> owner id .

    mode            reduce using rule 62 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 62 (PROPIETARIO -> owner id .)


state 305

    (64) PROPIETARIO -> owner cadena .

    mode            reduce using rule 64 (PROPIETARIO -> owner cadena .)
    ptcoma          reduce using rule 64 (PROPIETARIO -> owner cadena .)


state 306

    (66) PROPIETARIO -> owner cadenaString .

    mode            reduce using rule 66 (PROPIETARIO -> owner cadenaString .)
    ptcoma          reduce using rule 66 (PROPIETARIO -> owner cadenaString .)


state 307

    (67) MODO -> mode igual . int

    int             shift and go to state 372


state 308

    (68) MODO -> mode int .

    ptcoma          reduce using rule 68 (MODO -> mode int .)


state 309

    (131) LCAMPOS -> id igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 373
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 310

    (130) LCAMPOS -> LCAMPOS id . igual EXP

    igual           shift and go to state 374


state 311

    (129) UPDATE -> update id set LCAMPOS where . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 375
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 312

    (31) RO -> rename to . id

    id              shift and go to state 376


state 313

    (32) RO -> owner to . id

    id              shift and go to state 377


state 314

    (42) OP -> alter column . id set not null
    (43) OP -> alter column . id set null
    (48) OP -> alter column . id type TIPO

    id              shift and go to state 378


state 315

    (33) LOP -> LOP coma . OP
    (35) OP -> . add column id TIPO
    (36) OP -> . add check para CONDCHECK parc
    (37) OP -> . add constraint id check para CONDCHECK parc
    (38) OP -> . add constraint id unique para LEXP parc
    (39) OP -> . add unique para LEXP parc
    (40) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (41) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (42) OP -> . alter column id set not null
    (43) OP -> . alter column id set null
    (44) OP -> . drop constraint id
    (45) OP -> . drop column LEXP
    (46) OP -> . drop check id
    (47) OP -> . rename column id to id
    (48) OP -> . alter column id type TIPO

    add             shift and go to state 240
    alter           shift and go to state 237
    drop            shift and go to state 241
    rename          shift and go to state 242

    OP                             shift and go to state 379

state 316

    (35) OP -> add column . id TIPO

    id              shift and go to state 380


state 317

    (36) OP -> add check . para CONDCHECK parc

    para            shift and go to state 381


state 318

    (37) OP -> add constraint . id check para CONDCHECK parc
    (38) OP -> add constraint . id unique para LEXP parc
    (41) OP -> add constraint . id foreign key para LEXP parc references id para LEXP parc

    id              shift and go to state 382


state 319

    (39) OP -> add unique . para LEXP parc

    para            shift and go to state 383


state 320

    (40) OP -> add foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 384


state 321

    (44) OP -> drop constraint . id

    id              shift and go to state 385


state 322

    (45) OP -> drop column . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 386
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 323

    (46) OP -> drop check . id

    id              shift and go to state 387


state 324

    (47) OP -> rename column . id to id

    id              shift and go to state 388


state 325

    (28) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 28 (DROP -> drop databases if exist id .)


state 326

    (23) INSERT -> insert into id values para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 389
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 327

    (24) INSERT -> insert into id para LEXP . parc values para LEXP parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 390
    coma            shift and go to state 89


state 328

    (21) WHEN -> when LEXP then LEXP .
    (135) LEXP -> LEXP . coma EXP

    end             reduce using rule 21 (WHEN -> when LEXP then LEXP .)
    else            reduce using rule 21 (WHEN -> when LEXP then LEXP .)
    when            reduce using rule 21 (WHEN -> when LEXP then LEXP .)
    coma            shift and go to state 89


state 329

    (50) SHOW -> show tables para id parc .

    ptcoma          reduce using rule 50 (SHOW -> show tables para id parc .)


state 330

    (101) SELECT -> select distinct LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (120) GROUP -> . group by LEXP
    (121) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 153
    r_from          reduce using rule 121 (GROUP -> .)
    coma            reduce using rule 121 (GROUP -> .)
    where           reduce using rule 121 (GROUP -> .)
    having          reduce using rule 121 (GROUP -> .)
    union           reduce using rule 121 (GROUP -> .)
    intersect       reduce using rule 121 (GROUP -> .)
    except          reduce using rule 121 (GROUP -> .)
    order           reduce using rule 121 (GROUP -> .)
    limit           reduce using rule 121 (GROUP -> .)
    offset          reduce using rule 121 (GROUP -> .)
    ptcoma          reduce using rule 121 (GROUP -> .)
    mas             reduce using rule 121 (GROUP -> .)
    menos           reduce using rule 121 (GROUP -> .)
    multiplicacion  reduce using rule 121 (GROUP -> .)
    division        reduce using rule 121 (GROUP -> .)
    modulo          reduce using rule 121 (GROUP -> .)
    elevado         reduce using rule 121 (GROUP -> .)
    and             reduce using rule 121 (GROUP -> .)
    or              reduce using rule 121 (GROUP -> .)
    mayor           reduce using rule 121 (GROUP -> .)
    menor           reduce using rule 121 (GROUP -> .)
    mayor_igual     reduce using rule 121 (GROUP -> .)
    menor_igual     reduce using rule 121 (GROUP -> .)
    igual           reduce using rule 121 (GROUP -> .)
    diferente1      reduce using rule 121 (GROUP -> .)
    diferente2      reduce using rule 121 (GROUP -> .)
    between         reduce using rule 121 (GROUP -> .)
    is              reduce using rule 121 (GROUP -> .)
    not             reduce using rule 121 (GROUP -> .)
    as              reduce using rule 121 (GROUP -> .)
    like            reduce using rule 121 (GROUP -> .)
    isnull          reduce using rule 121 (GROUP -> .)
    notnull         reduce using rule 121 (GROUP -> .)
    cadenaString    reduce using rule 121 (GROUP -> .)
    id              reduce using rule 121 (GROUP -> .)
    cadena          reduce using rule 121 (GROUP -> .)
    in              reduce using rule 121 (GROUP -> .)
    parc            reduce using rule 121 (GROUP -> .)
    then            reduce using rule 121 (GROUP -> .)
    end             reduce using rule 121 (GROUP -> .)
    else            reduce using rule 121 (GROUP -> .)
    when            reduce using rule 121 (GROUP -> .)
    constraint      reduce using rule 121 (GROUP -> .)
    primary         reduce using rule 121 (GROUP -> .)
    null            reduce using rule 121 (GROUP -> .)
    unique          reduce using rule 121 (GROUP -> .)
    references      reduce using rule 121 (GROUP -> .)
    check           reduce using rule 121 (GROUP -> .)
    default         reduce using rule 121 (GROUP -> .)
    asc             reduce using rule 121 (GROUP -> .)
    desc            reduce using rule 121 (GROUP -> .)

  ! group           [ reduce using rule 121 (GROUP -> .) ]

    GROUP                          shift and go to state 391

state 331

    (102) SELECT -> select LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (122) HAVING -> . having EXP
    (123) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 255
    r_from          reduce using rule 123 (HAVING -> .)
    coma            reduce using rule 123 (HAVING -> .)
    where           reduce using rule 123 (HAVING -> .)
    group           reduce using rule 123 (HAVING -> .)
    union           reduce using rule 123 (HAVING -> .)
    intersect       reduce using rule 123 (HAVING -> .)
    except          reduce using rule 123 (HAVING -> .)
    order           reduce using rule 123 (HAVING -> .)
    limit           reduce using rule 123 (HAVING -> .)
    offset          reduce using rule 123 (HAVING -> .)
    ptcoma          reduce using rule 123 (HAVING -> .)
    mas             reduce using rule 123 (HAVING -> .)
    menos           reduce using rule 123 (HAVING -> .)
    multiplicacion  reduce using rule 123 (HAVING -> .)
    division        reduce using rule 123 (HAVING -> .)
    modulo          reduce using rule 123 (HAVING -> .)
    elevado         reduce using rule 123 (HAVING -> .)
    and             reduce using rule 123 (HAVING -> .)
    or              reduce using rule 123 (HAVING -> .)
    mayor           reduce using rule 123 (HAVING -> .)
    menor           reduce using rule 123 (HAVING -> .)
    mayor_igual     reduce using rule 123 (HAVING -> .)
    menor_igual     reduce using rule 123 (HAVING -> .)
    igual           reduce using rule 123 (HAVING -> .)
    diferente1      reduce using rule 123 (HAVING -> .)
    diferente2      reduce using rule 123 (HAVING -> .)
    between         reduce using rule 123 (HAVING -> .)
    is              reduce using rule 123 (HAVING -> .)
    not             reduce using rule 123 (HAVING -> .)
    as              reduce using rule 123 (HAVING -> .)
    like            reduce using rule 123 (HAVING -> .)
    isnull          reduce using rule 123 (HAVING -> .)
    notnull         reduce using rule 123 (HAVING -> .)
    cadenaString    reduce using rule 123 (HAVING -> .)
    id              reduce using rule 123 (HAVING -> .)
    cadena          reduce using rule 123 (HAVING -> .)
    in              reduce using rule 123 (HAVING -> .)
    parc            reduce using rule 123 (HAVING -> .)
    then            reduce using rule 123 (HAVING -> .)
    end             reduce using rule 123 (HAVING -> .)
    else            reduce using rule 123 (HAVING -> .)
    when            reduce using rule 123 (HAVING -> .)
    constraint      reduce using rule 123 (HAVING -> .)
    primary         reduce using rule 123 (HAVING -> .)
    null            reduce using rule 123 (HAVING -> .)
    unique          reduce using rule 123 (HAVING -> .)
    references      reduce using rule 123 (HAVING -> .)
    check           reduce using rule 123 (HAVING -> .)
    default         reduce using rule 123 (HAVING -> .)
    asc             reduce using rule 123 (HAVING -> .)
    desc            reduce using rule 123 (HAVING -> .)

  ! having          [ reduce using rule 123 (HAVING -> .) ]

    HAVING                         shift and go to state 392

state 332

    (103) SELECT -> select LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (124) ORDER -> . order by LEXP ORD
    (125) ORDER -> . order by LEXP
    (126) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 394
    r_from          reduce using rule 126 (ORDER -> .)
    coma            reduce using rule 126 (ORDER -> .)
    where           reduce using rule 126 (ORDER -> .)
    group           reduce using rule 126 (ORDER -> .)
    having          reduce using rule 126 (ORDER -> .)
    union           reduce using rule 126 (ORDER -> .)
    intersect       reduce using rule 126 (ORDER -> .)
    except          reduce using rule 126 (ORDER -> .)
    limit           reduce using rule 126 (ORDER -> .)
    offset          reduce using rule 126 (ORDER -> .)
    ptcoma          reduce using rule 126 (ORDER -> .)
    mas             reduce using rule 126 (ORDER -> .)
    menos           reduce using rule 126 (ORDER -> .)
    multiplicacion  reduce using rule 126 (ORDER -> .)
    division        reduce using rule 126 (ORDER -> .)
    modulo          reduce using rule 126 (ORDER -> .)
    elevado         reduce using rule 126 (ORDER -> .)
    and             reduce using rule 126 (ORDER -> .)
    or              reduce using rule 126 (ORDER -> .)
    mayor           reduce using rule 126 (ORDER -> .)
    menor           reduce using rule 126 (ORDER -> .)
    mayor_igual     reduce using rule 126 (ORDER -> .)
    menor_igual     reduce using rule 126 (ORDER -> .)
    igual           reduce using rule 126 (ORDER -> .)
    diferente1      reduce using rule 126 (ORDER -> .)
    diferente2      reduce using rule 126 (ORDER -> .)
    between         reduce using rule 126 (ORDER -> .)
    is              reduce using rule 126 (ORDER -> .)
    not             reduce using rule 126 (ORDER -> .)
    as              reduce using rule 126 (ORDER -> .)
    like            reduce using rule 126 (ORDER -> .)
    isnull          reduce using rule 126 (ORDER -> .)
    notnull         reduce using rule 126 (ORDER -> .)
    cadenaString    reduce using rule 126 (ORDER -> .)
    id              reduce using rule 126 (ORDER -> .)
    cadena          reduce using rule 126 (ORDER -> .)
    in              reduce using rule 126 (ORDER -> .)
    parc            reduce using rule 126 (ORDER -> .)
    then            reduce using rule 126 (ORDER -> .)
    end             reduce using rule 126 (ORDER -> .)
    else            reduce using rule 126 (ORDER -> .)
    when            reduce using rule 126 (ORDER -> .)
    constraint      reduce using rule 126 (ORDER -> .)
    primary         reduce using rule 126 (ORDER -> .)
    null            reduce using rule 126 (ORDER -> .)
    unique          reduce using rule 126 (ORDER -> .)
    references      reduce using rule 126 (ORDER -> .)
    check           reduce using rule 126 (ORDER -> .)
    default         reduce using rule 126 (ORDER -> .)
    asc             reduce using rule 126 (ORDER -> .)
    desc            reduce using rule 126 (ORDER -> .)

  ! order           [ reduce using rule 126 (ORDER -> .) ]

    ORDER                          shift and go to state 393

state 333

    (115) COMBINING -> union . LEXP
    (116) COMBINING -> union . all LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    all             shift and go to state 396
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 395
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 334

    (117) COMBINING -> intersect . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 397
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 335

    (118) COMBINING -> except . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 398
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 336

    (122) HAVING -> having EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for like resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
    r_from          reduce using rule 122 (HAVING -> having EXP .)
    coma            reduce using rule 122 (HAVING -> having EXP .)
    where           reduce using rule 122 (HAVING -> having EXP .)
    group           reduce using rule 122 (HAVING -> having EXP .)
    having          reduce using rule 122 (HAVING -> having EXP .)
    union           reduce using rule 122 (HAVING -> having EXP .)
    intersect       reduce using rule 122 (HAVING -> having EXP .)
    except          reduce using rule 122 (HAVING -> having EXP .)
    order           reduce using rule 122 (HAVING -> having EXP .)
    limit           reduce using rule 122 (HAVING -> having EXP .)
    offset          reduce using rule 122 (HAVING -> having EXP .)
    ptcoma          reduce using rule 122 (HAVING -> having EXP .)
    parc            reduce using rule 122 (HAVING -> having EXP .)
    then            reduce using rule 122 (HAVING -> having EXP .)
    end             reduce using rule 122 (HAVING -> having EXP .)
    else            reduce using rule 122 (HAVING -> having EXP .)
    when            reduce using rule 122 (HAVING -> having EXP .)
    constraint      reduce using rule 122 (HAVING -> having EXP .)
    primary         reduce using rule 122 (HAVING -> having EXP .)
    null            reduce using rule 122 (HAVING -> having EXP .)
    unique          reduce using rule 122 (HAVING -> having EXP .)
    references      reduce using rule 122 (HAVING -> having EXP .)
    check           reduce using rule 122 (HAVING -> having EXP .)
    default         reduce using rule 122 (HAVING -> having EXP .)
    asc             reduce using rule 122 (HAVING -> having EXP .)
    desc            reduce using rule 122 (HAVING -> having EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116

  ! mas             [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! menos           [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! multiplicacion  [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! division        [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! modulo          [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! elevado         [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! and             [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! or              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! mayor           [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! menor           [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! mayor_igual     [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! menor_igual     [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! igual           [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! diferente1      [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! diferente2      [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! between         [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! is              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! not             [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! as              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! like            [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! isnull          [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! notnull         [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! cadenaString    [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! id              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! cadena          [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! in              [ reduce using rule 122 (HAVING -> having EXP .) ]


state 337

    (120) GROUP -> group by LEXP .
    (135) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 120 (GROUP -> group by LEXP .)
    where           reduce using rule 120 (GROUP -> group by LEXP .)
    group           reduce using rule 120 (GROUP -> group by LEXP .)
    having          reduce using rule 120 (GROUP -> group by LEXP .)
    union           reduce using rule 120 (GROUP -> group by LEXP .)
    intersect       reduce using rule 120 (GROUP -> group by LEXP .)
    except          reduce using rule 120 (GROUP -> group by LEXP .)
    order           reduce using rule 120 (GROUP -> group by LEXP .)
    limit           reduce using rule 120 (GROUP -> group by LEXP .)
    offset          reduce using rule 120 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 120 (GROUP -> group by LEXP .)
    mas             reduce using rule 120 (GROUP -> group by LEXP .)
    menos           reduce using rule 120 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 120 (GROUP -> group by LEXP .)
    division        reduce using rule 120 (GROUP -> group by LEXP .)
    modulo          reduce using rule 120 (GROUP -> group by LEXP .)
    elevado         reduce using rule 120 (GROUP -> group by LEXP .)
    and             reduce using rule 120 (GROUP -> group by LEXP .)
    or              reduce using rule 120 (GROUP -> group by LEXP .)
    mayor           reduce using rule 120 (GROUP -> group by LEXP .)
    menor           reduce using rule 120 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 120 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 120 (GROUP -> group by LEXP .)
    igual           reduce using rule 120 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 120 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 120 (GROUP -> group by LEXP .)
    between         reduce using rule 120 (GROUP -> group by LEXP .)
    is              reduce using rule 120 (GROUP -> group by LEXP .)
    not             reduce using rule 120 (GROUP -> group by LEXP .)
    as              reduce using rule 120 (GROUP -> group by LEXP .)
    like            reduce using rule 120 (GROUP -> group by LEXP .)
    isnull          reduce using rule 120 (GROUP -> group by LEXP .)
    notnull         reduce using rule 120 (GROUP -> group by LEXP .)
    cadenaString    reduce using rule 120 (GROUP -> group by LEXP .)
    id              reduce using rule 120 (GROUP -> group by LEXP .)
    cadena          reduce using rule 120 (GROUP -> group by LEXP .)
    in              reduce using rule 120 (GROUP -> group by LEXP .)
    parc            reduce using rule 120 (GROUP -> group by LEXP .)
    then            reduce using rule 120 (GROUP -> group by LEXP .)
    end             reduce using rule 120 (GROUP -> group by LEXP .)
    else            reduce using rule 120 (GROUP -> group by LEXP .)
    when            reduce using rule 120 (GROUP -> group by LEXP .)
    constraint      reduce using rule 120 (GROUP -> group by LEXP .)
    primary         reduce using rule 120 (GROUP -> group by LEXP .)
    null            reduce using rule 120 (GROUP -> group by LEXP .)
    unique          reduce using rule 120 (GROUP -> group by LEXP .)
    references      reduce using rule 120 (GROUP -> group by LEXP .)
    check           reduce using rule 120 (GROUP -> group by LEXP .)
    default         reduce using rule 120 (GROUP -> group by LEXP .)
    asc             reduce using rule 120 (GROUP -> group by LEXP .)
    desc            reduce using rule 120 (GROUP -> group by LEXP .)
    coma            shift and go to state 89

  ! coma            [ reduce using rule 120 (GROUP -> group by LEXP .) ]


state 338

    (134) EXIST -> not exist para . SELECT parc
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 17

    SELECT                         shift and go to state 399

state 339

    (133) EXIST -> exist para SELECT . parc

    parc            shift and go to state 400


state 340

    (218) EXP -> EXP is not distinct r_from . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 401
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 341

    (219) EXP -> EXP is distinct r_from EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    coma            reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    where           reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    group           reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    having          reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    union           reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    except          reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    order           reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    limit           reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    offset          reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    and             reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    or              reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    between         reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    is              reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    not             reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    as              reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    like            reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    cadenaString    reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    id              reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    cadena          reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    in              reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    parc            reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    then            reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    end             reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    else            reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    when            reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    primary         reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    null            reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    unique          reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    references      reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    check           reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    default         reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    asc             reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    desc            reduce using rule 219 (EXP -> EXP is distinct r_from EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! menos           [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! division        [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor           [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! igual           [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 219 (EXP -> EXP is distinct r_from EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 342

    (220) EXP -> EXP not between symetric EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    coma            reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    where           reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    group           reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    having          reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    union           reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    intersect       reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    except          reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    order           reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    limit           reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    offset          reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    and             reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    or              reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    between         reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    is              reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    not             reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    as              reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    like            reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    isnull          reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    notnull         reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    cadenaString    reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    id              reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    cadena          reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    in              reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    parc            reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    then            reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    end             reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    else            reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    when            reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    constraint      reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    primary         reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    null            reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    unique          reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    references      reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    check           reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    default         reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    asc             reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    desc            reduce using rule 220 (EXP -> EXP not between symetric EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! menos           [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! division        [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! modulo          [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! elevado         [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! mayor           [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! menor           [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! igual           [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! diferente1      [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! diferente2      [ reduce using rule 220 (EXP -> EXP not between symetric EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 343

    (217) EXP -> EXP not in para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 402
    coma            shift and go to state 89


state 344

    (216) EXP -> EXP in para LEXP parc .

    r_from          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    coma            reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    where           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    group           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    having          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    union           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    intersect       reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    except          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    order           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    limit           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    offset          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    ptcoma          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    mas             reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    menos           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    multiplicacion  reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    division        reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    modulo          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    elevado         reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    and             reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    or              reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    mayor           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    menor           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    mayor_igual     reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    menor_igual     reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    igual           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    diferente1      reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    diferente2      reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    between         reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    is              reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    not             reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    as              reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    like            reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    isnull          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    notnull         reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    cadenaString    reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    id              reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    cadena          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    in              reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    parc            reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    then            reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    end             reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    else            reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    when            reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    constraint      reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    primary         reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    null            reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    unique          reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    references      reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    check           reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    default         reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    asc             reduce using rule 216 (EXP -> EXP in para LEXP parc .)
    desc            reduce using rule 216 (EXP -> EXP in para LEXP parc .)


state 345

    (137) TIPO -> decimal para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 403
    coma            shift and go to state 89


state 346

    (138) TIPO -> numeric para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 404
    coma            shift and go to state 89


state 347

    (139) TIPO -> varchar para int . parc

    parc            shift and go to state 405


state 348

    (140) TIPO -> timestamp para int . parc
    (147) TIPO -> timestamp para int . parc without time zone
    (148) TIPO -> timestamp para int . parc with time zone

    parc            shift and go to state 406


state 349

    (167) TIPO -> timestamp without time . zone

    zone            shift and go to state 407


state 350

    (168) TIPO -> timestamp with time . zone

    zone            shift and go to state 408


state 351

    (141) TIPO -> character para int . parc

    parc            shift and go to state 409


state 352

    (145) TIPO -> character varying para . int parc

    int             shift and go to state 410


state 353

    (142) TIPO -> interval para int . parc
    (151) TIPO -> interval para int . parc cadena

    parc            shift and go to state 411


state 354

    (143) TIPO -> char para int . parc

    parc            shift and go to state 412


state 355

    (144) TIPO -> time para int . parc
    (149) TIPO -> time para int . parc without time zone
    (150) TIPO -> time para int . parc with time zone

    parc            shift and go to state 413


state 356

    (169) TIPO -> time without time . zone

    zone            shift and go to state 414


state 357

    (170) TIPO -> time with time . zone

    zone            shift and go to state 415


state 358

    (229) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 416


state 359

    (75) COLDEF -> id TIPO .
    (76) COLDEF -> id TIPO . LOPCOLUMN
    (77) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (78) LOPCOLUMN -> . OPCOLUMN
    (79) OPCOLUMN -> . constraint id unique
    (80) OPCOLUMN -> . not null
    (81) OPCOLUMN -> . primary key
    (82) OPCOLUMN -> . null
    (83) OPCOLUMN -> . unique
    (84) OPCOLUMN -> . references id
    (85) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (86) OPCOLUMN -> . check para CONDCHECK parc
    (87) OPCOLUMN -> . default EXP

    parc            reduce using rule 75 (COLDEF -> id TIPO .)
    coma            reduce using rule 75 (COLDEF -> id TIPO .)
    constraint      shift and go to state 419
    not             shift and go to state 421
    primary         shift and go to state 423
    null            shift and go to state 422
    unique          shift and go to state 420
    references      shift and go to state 424
    check           shift and go to state 425
    default         shift and go to state 426

    LOPCOLUMN                      shift and go to state 417
    OPCOLUMN                       shift and go to state 418

state 360

    (69) CREATETABLE -> create table id para LDEF parc . ptcoma
    (70) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (99) HERENCIA -> . inherits para LEXP parc

    ptcoma          shift and go to state 427
    inherits        shift and go to state 429

    HERENCIA                       shift and go to state 428

state 361

    (71) LDEF -> LDEF coma . COLDEF
    (73) COLDEF -> . OPCONST
    (74) COLDEF -> . constraint id OPCONST
    (75) COLDEF -> . id TIPO
    (76) COLDEF -> . id TIPO LOPCOLUMN
    (88) OPCONST -> . primary key para LEXP parc
    (89) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (90) OPCONST -> . check para CONDCHECK parc
    (91) OPCONST -> . unique para LEXP parc

    constraint      shift and go to state 295
    id              shift and go to state 291
    primary         shift and go to state 296
    foreign         shift and go to state 297
    check           shift and go to state 298
    unique          shift and go to state 299

    COLDEF                         shift and go to state 430
    OPCONST                        shift and go to state 294

state 362

    (74) COLDEF -> constraint id . OPCONST
    (88) OPCONST -> . primary key para LEXP parc
    (89) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (90) OPCONST -> . check para CONDCHECK parc
    (91) OPCONST -> . unique para LEXP parc

    primary         shift and go to state 296
    foreign         shift and go to state 297
    check           shift and go to state 298
    unique          shift and go to state 299

    OPCONST                        shift and go to state 431

state 363

    (88) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 432


state 364

    (89) OPCONST -> foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 433


state 365

    (90) OPCONST -> check para . CONDCHECK parc
    (92) CONDCHECK -> . EXP mayor EXP
    (93) CONDCHECK -> . EXP menor EXP
    (94) CONDCHECK -> . EXP mayor_igual EXP
    (95) CONDCHECK -> . EXP menor_igual EXP
    (96) CONDCHECK -> . EXP igual EXP
    (97) CONDCHECK -> . EXP diferente1 EXP
    (98) CONDCHECK -> . EXP diferente2 EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 434
    EXP                            shift and go to state 435
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 366

    (91) OPCONST -> unique para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 436
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 367

    (100) CREATETYPE -> create type id as enum para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 437
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 368

    (52) CREATEDB -> create RD if not exist id .
    (53) CREATEDB -> create RD if not exist id . OPCCDB
    (56) OPCCDB -> . PROPIETARIO
    (57) OPCCDB -> . MODO
    (58) OPCCDB -> . PROPIETARIO MODO
    (61) PROPIETARIO -> . owner igual id
    (62) PROPIETARIO -> . owner id
    (63) PROPIETARIO -> . owner igual cadena
    (64) PROPIETARIO -> . owner cadena
    (65) PROPIETARIO -> . owner igual cadenaString
    (66) PROPIETARIO -> . owner cadenaString
    (67) MODO -> . mode igual int
    (68) MODO -> . mode int

    ptcoma          reduce using rule 52 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 228
    mode            shift and go to state 229

    OPCCDB                         shift and go to state 438
    PROPIETARIO                    shift and go to state 226
    MODO                           shift and go to state 227

state 369

    (61) PROPIETARIO -> owner igual id .

    mode            reduce using rule 61 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 61 (PROPIETARIO -> owner igual id .)


state 370

    (63) PROPIETARIO -> owner igual cadena .

    mode            reduce using rule 63 (PROPIETARIO -> owner igual cadena .)
    ptcoma          reduce using rule 63 (PROPIETARIO -> owner igual cadena .)


state 371

    (65) PROPIETARIO -> owner igual cadenaString .

    mode            reduce using rule 65 (PROPIETARIO -> owner igual cadenaString .)
    ptcoma          reduce using rule 65 (PROPIETARIO -> owner igual cadenaString .)


state 372

    (67) MODO -> mode igual int .

    ptcoma          reduce using rule 67 (MODO -> mode igual int .)


state 373

    (131) LCAMPOS -> id igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    where           reduce using rule 131 (LCAMPOS -> id igual EXP .)
    id              reduce using rule 131 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    cadena          shift and go to state 110
    in              shift and go to state 116

  ! id              [ shift and go to state 112 ]


state 374

    (130) LCAMPOS -> LCAMPOS id igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 439
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 375

    (129) UPDATE -> update id set LCAMPOS where LEXP .
    (135) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 129 (UPDATE -> update id set LCAMPOS where LEXP .)
    coma            shift and go to state 89


state 376

    (31) RO -> rename to id .

    ptcoma          reduce using rule 31 (RO -> rename to id .)


state 377

    (32) RO -> owner to id .

    ptcoma          reduce using rule 32 (RO -> owner to id .)


state 378

    (42) OP -> alter column id . set not null
    (43) OP -> alter column id . set null
    (48) OP -> alter column id . type TIPO

    set             shift and go to state 440
    type            shift and go to state 441


state 379

    (33) LOP -> LOP coma OP .

    coma            reduce using rule 33 (LOP -> LOP coma OP .)
    ptcoma          reduce using rule 33 (LOP -> LOP coma OP .)


state 380

    (35) OP -> add column id . TIPO
    (137) TIPO -> . decimal para LEXP parc
    (138) TIPO -> . numeric para LEXP parc
    (139) TIPO -> . varchar para int parc
    (140) TIPO -> . timestamp para int parc
    (141) TIPO -> . character para int parc
    (142) TIPO -> . interval para int parc
    (143) TIPO -> . char para int parc
    (144) TIPO -> . time para int parc
    (145) TIPO -> . character varying para int parc
    (146) TIPO -> . interval cadena
    (147) TIPO -> . timestamp para int parc without time zone
    (148) TIPO -> . timestamp para int parc with time zone
    (149) TIPO -> . time para int parc without time zone
    (150) TIPO -> . time para int parc with time zone
    (151) TIPO -> . interval para int parc cadena
    (152) TIPO -> . smallint
    (153) TIPO -> . integer
    (154) TIPO -> . bigint
    (155) TIPO -> . real
    (156) TIPO -> . double precision
    (157) TIPO -> . money
    (158) TIPO -> . text
    (159) TIPO -> . timestamp
    (160) TIPO -> . date
    (161) TIPO -> . time
    (162) TIPO -> . interval
    (163) TIPO -> . boolean
    (164) TIPO -> . decimal
    (165) TIPO -> . numeric
    (166) TIPO -> . id
    (167) TIPO -> . timestamp without time zone
    (168) TIPO -> . timestamp with time zone
    (169) TIPO -> . time without time zone
    (170) TIPO -> . time with time zone

    decimal         shift and go to state 191
    numeric         shift and go to state 192
    varchar         shift and go to state 193
    timestamp       shift and go to state 194
    character       shift and go to state 195
    interval        shift and go to state 196
    char            shift and go to state 197
    time            shift and go to state 198
    smallint        shift and go to state 199
    integer         shift and go to state 200
    bigint          shift and go to state 201
    real            shift and go to state 202
    double          shift and go to state 203
    money           shift and go to state 204
    text            shift and go to state 205
    date            shift and go to state 206
    boolean         shift and go to state 207
    id              shift and go to state 208

    TIPO                           shift and go to state 442

state 381

    (36) OP -> add check para . CONDCHECK parc
    (92) CONDCHECK -> . EXP mayor EXP
    (93) CONDCHECK -> . EXP menor EXP
    (94) CONDCHECK -> . EXP mayor_igual EXP
    (95) CONDCHECK -> . EXP menor_igual EXP
    (96) CONDCHECK -> . EXP igual EXP
    (97) CONDCHECK -> . EXP diferente1 EXP
    (98) CONDCHECK -> . EXP diferente2 EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 443
    EXP                            shift and go to state 435
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 382

    (37) OP -> add constraint id . check para CONDCHECK parc
    (38) OP -> add constraint id . unique para LEXP parc
    (41) OP -> add constraint id . foreign key para LEXP parc references id para LEXP parc

    check           shift and go to state 444
    unique          shift and go to state 445
    foreign         shift and go to state 446


state 383

    (39) OP -> add unique para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 447
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 384

    (40) OP -> add foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 448


state 385

    (44) OP -> drop constraint id .

    coma            reduce using rule 44 (OP -> drop constraint id .)
    ptcoma          reduce using rule 44 (OP -> drop constraint id .)


state 386

    (45) OP -> drop column LEXP .
    (135) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    ptcoma          reduce using rule 45 (OP -> drop column LEXP .)
    coma            shift and go to state 89

  ! coma            [ reduce using rule 45 (OP -> drop column LEXP .) ]


state 387

    (46) OP -> drop check id .

    coma            reduce using rule 46 (OP -> drop check id .)
    ptcoma          reduce using rule 46 (OP -> drop check id .)


state 388

    (47) OP -> rename column id . to id

    to              shift and go to state 449


state 389

    (23) INSERT -> insert into id values para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 450
    coma            shift and go to state 89


state 390

    (24) INSERT -> insert into id para LEXP parc . values para LEXP parc

    values          shift and go to state 451


state 391

    (101) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (122) HAVING -> . having EXP
    (123) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 255
    r_from          reduce using rule 123 (HAVING -> .)
    coma            reduce using rule 123 (HAVING -> .)
    where           reduce using rule 123 (HAVING -> .)
    group           reduce using rule 123 (HAVING -> .)
    union           reduce using rule 123 (HAVING -> .)
    intersect       reduce using rule 123 (HAVING -> .)
    except          reduce using rule 123 (HAVING -> .)
    order           reduce using rule 123 (HAVING -> .)
    limit           reduce using rule 123 (HAVING -> .)
    offset          reduce using rule 123 (HAVING -> .)
    ptcoma          reduce using rule 123 (HAVING -> .)
    mas             reduce using rule 123 (HAVING -> .)
    menos           reduce using rule 123 (HAVING -> .)
    multiplicacion  reduce using rule 123 (HAVING -> .)
    division        reduce using rule 123 (HAVING -> .)
    modulo          reduce using rule 123 (HAVING -> .)
    elevado         reduce using rule 123 (HAVING -> .)
    and             reduce using rule 123 (HAVING -> .)
    or              reduce using rule 123 (HAVING -> .)
    mayor           reduce using rule 123 (HAVING -> .)
    menor           reduce using rule 123 (HAVING -> .)
    mayor_igual     reduce using rule 123 (HAVING -> .)
    menor_igual     reduce using rule 123 (HAVING -> .)
    igual           reduce using rule 123 (HAVING -> .)
    diferente1      reduce using rule 123 (HAVING -> .)
    diferente2      reduce using rule 123 (HAVING -> .)
    between         reduce using rule 123 (HAVING -> .)
    is              reduce using rule 123 (HAVING -> .)
    not             reduce using rule 123 (HAVING -> .)
    as              reduce using rule 123 (HAVING -> .)
    like            reduce using rule 123 (HAVING -> .)
    isnull          reduce using rule 123 (HAVING -> .)
    notnull         reduce using rule 123 (HAVING -> .)
    cadenaString    reduce using rule 123 (HAVING -> .)
    id              reduce using rule 123 (HAVING -> .)
    cadena          reduce using rule 123 (HAVING -> .)
    in              reduce using rule 123 (HAVING -> .)
    parc            reduce using rule 123 (HAVING -> .)
    then            reduce using rule 123 (HAVING -> .)
    end             reduce using rule 123 (HAVING -> .)
    else            reduce using rule 123 (HAVING -> .)
    when            reduce using rule 123 (HAVING -> .)
    constraint      reduce using rule 123 (HAVING -> .)
    primary         reduce using rule 123 (HAVING -> .)
    null            reduce using rule 123 (HAVING -> .)
    unique          reduce using rule 123 (HAVING -> .)
    references      reduce using rule 123 (HAVING -> .)
    check           reduce using rule 123 (HAVING -> .)
    default         reduce using rule 123 (HAVING -> .)
    asc             reduce using rule 123 (HAVING -> .)
    desc            reduce using rule 123 (HAVING -> .)

  ! having          [ reduce using rule 123 (HAVING -> .) ]

    HAVING                         shift and go to state 452

state 392

    (102) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (115) COMBINING -> . union LEXP
    (116) COMBINING -> . union all LEXP
    (117) COMBINING -> . intersect LEXP
    (118) COMBINING -> . except LEXP
    (119) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 333
    intersect       shift and go to state 334
    except          shift and go to state 335
    r_from          reduce using rule 119 (COMBINING -> .)
    coma            reduce using rule 119 (COMBINING -> .)
    where           reduce using rule 119 (COMBINING -> .)
    group           reduce using rule 119 (COMBINING -> .)
    having          reduce using rule 119 (COMBINING -> .)
    order           reduce using rule 119 (COMBINING -> .)
    limit           reduce using rule 119 (COMBINING -> .)
    offset          reduce using rule 119 (COMBINING -> .)
    ptcoma          reduce using rule 119 (COMBINING -> .)
    mas             reduce using rule 119 (COMBINING -> .)
    menos           reduce using rule 119 (COMBINING -> .)
    multiplicacion  reduce using rule 119 (COMBINING -> .)
    division        reduce using rule 119 (COMBINING -> .)
    modulo          reduce using rule 119 (COMBINING -> .)
    elevado         reduce using rule 119 (COMBINING -> .)
    and             reduce using rule 119 (COMBINING -> .)
    or              reduce using rule 119 (COMBINING -> .)
    mayor           reduce using rule 119 (COMBINING -> .)
    menor           reduce using rule 119 (COMBINING -> .)
    mayor_igual     reduce using rule 119 (COMBINING -> .)
    menor_igual     reduce using rule 119 (COMBINING -> .)
    igual           reduce using rule 119 (COMBINING -> .)
    diferente1      reduce using rule 119 (COMBINING -> .)
    diferente2      reduce using rule 119 (COMBINING -> .)
    between         reduce using rule 119 (COMBINING -> .)
    is              reduce using rule 119 (COMBINING -> .)
    not             reduce using rule 119 (COMBINING -> .)
    as              reduce using rule 119 (COMBINING -> .)
    like            reduce using rule 119 (COMBINING -> .)
    isnull          reduce using rule 119 (COMBINING -> .)
    notnull         reduce using rule 119 (COMBINING -> .)
    cadenaString    reduce using rule 119 (COMBINING -> .)
    id              reduce using rule 119 (COMBINING -> .)
    cadena          reduce using rule 119 (COMBINING -> .)
    in              reduce using rule 119 (COMBINING -> .)
    parc            reduce using rule 119 (COMBINING -> .)
    then            reduce using rule 119 (COMBINING -> .)
    end             reduce using rule 119 (COMBINING -> .)
    else            reduce using rule 119 (COMBINING -> .)
    when            reduce using rule 119 (COMBINING -> .)
    constraint      reduce using rule 119 (COMBINING -> .)
    primary         reduce using rule 119 (COMBINING -> .)
    null            reduce using rule 119 (COMBINING -> .)
    unique          reduce using rule 119 (COMBINING -> .)
    references      reduce using rule 119 (COMBINING -> .)
    check           reduce using rule 119 (COMBINING -> .)
    default         reduce using rule 119 (COMBINING -> .)
    asc             reduce using rule 119 (COMBINING -> .)
    desc            reduce using rule 119 (COMBINING -> .)

  ! union           [ reduce using rule 119 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 119 (COMBINING -> .) ]
  ! except          [ reduce using rule 119 (COMBINING -> .) ]

    COMBINING                      shift and go to state 453

state 393

    (103) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (104) LIMIT -> . limit int
    (105) LIMIT -> . limit all
    (106) LIMIT -> . offset int
    (107) LIMIT -> . limit int offset int
    (108) LIMIT -> . offset int limit int
    (109) LIMIT -> . limit all offset int
    (110) LIMIT -> . offset int limit all
    (111) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 455
    offset          shift and go to state 456
    ptcoma          reduce using rule 111 (LIMIT -> .)
    r_from          reduce using rule 111 (LIMIT -> .)
    coma            reduce using rule 111 (LIMIT -> .)
    where           reduce using rule 111 (LIMIT -> .)
    group           reduce using rule 111 (LIMIT -> .)
    having          reduce using rule 111 (LIMIT -> .)
    union           reduce using rule 111 (LIMIT -> .)
    intersect       reduce using rule 111 (LIMIT -> .)
    except          reduce using rule 111 (LIMIT -> .)
    order           reduce using rule 111 (LIMIT -> .)
    mas             reduce using rule 111 (LIMIT -> .)
    menos           reduce using rule 111 (LIMIT -> .)
    multiplicacion  reduce using rule 111 (LIMIT -> .)
    division        reduce using rule 111 (LIMIT -> .)
    modulo          reduce using rule 111 (LIMIT -> .)
    elevado         reduce using rule 111 (LIMIT -> .)
    and             reduce using rule 111 (LIMIT -> .)
    or              reduce using rule 111 (LIMIT -> .)
    mayor           reduce using rule 111 (LIMIT -> .)
    menor           reduce using rule 111 (LIMIT -> .)
    mayor_igual     reduce using rule 111 (LIMIT -> .)
    menor_igual     reduce using rule 111 (LIMIT -> .)
    igual           reduce using rule 111 (LIMIT -> .)
    diferente1      reduce using rule 111 (LIMIT -> .)
    diferente2      reduce using rule 111 (LIMIT -> .)
    between         reduce using rule 111 (LIMIT -> .)
    is              reduce using rule 111 (LIMIT -> .)
    not             reduce using rule 111 (LIMIT -> .)
    as              reduce using rule 111 (LIMIT -> .)
    like            reduce using rule 111 (LIMIT -> .)
    isnull          reduce using rule 111 (LIMIT -> .)
    notnull         reduce using rule 111 (LIMIT -> .)
    cadenaString    reduce using rule 111 (LIMIT -> .)
    id              reduce using rule 111 (LIMIT -> .)
    cadena          reduce using rule 111 (LIMIT -> .)
    in              reduce using rule 111 (LIMIT -> .)
    parc            reduce using rule 111 (LIMIT -> .)
    then            reduce using rule 111 (LIMIT -> .)
    end             reduce using rule 111 (LIMIT -> .)
    else            reduce using rule 111 (LIMIT -> .)
    when            reduce using rule 111 (LIMIT -> .)
    constraint      reduce using rule 111 (LIMIT -> .)
    primary         reduce using rule 111 (LIMIT -> .)
    null            reduce using rule 111 (LIMIT -> .)
    unique          reduce using rule 111 (LIMIT -> .)
    references      reduce using rule 111 (LIMIT -> .)
    check           reduce using rule 111 (LIMIT -> .)
    default         reduce using rule 111 (LIMIT -> .)
    asc             reduce using rule 111 (LIMIT -> .)
    desc            reduce using rule 111 (LIMIT -> .)

  ! limit           [ reduce using rule 111 (LIMIT -> .) ]
  ! offset          [ reduce using rule 111 (LIMIT -> .) ]

    LIMIT                          shift and go to state 454

state 394

    (124) ORDER -> order . by LEXP ORD
    (125) ORDER -> order . by LEXP

    by              shift and go to state 457


state 395

    (115) COMBINING -> union LEXP .
    (135) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 115 (COMBINING -> union LEXP .)
    where           reduce using rule 115 (COMBINING -> union LEXP .)
    group           reduce using rule 115 (COMBINING -> union LEXP .)
    having          reduce using rule 115 (COMBINING -> union LEXP .)
    union           reduce using rule 115 (COMBINING -> union LEXP .)
    intersect       reduce using rule 115 (COMBINING -> union LEXP .)
    except          reduce using rule 115 (COMBINING -> union LEXP .)
    order           reduce using rule 115 (COMBINING -> union LEXP .)
    limit           reduce using rule 115 (COMBINING -> union LEXP .)
    offset          reduce using rule 115 (COMBINING -> union LEXP .)
    ptcoma          reduce using rule 115 (COMBINING -> union LEXP .)
    mas             reduce using rule 115 (COMBINING -> union LEXP .)
    menos           reduce using rule 115 (COMBINING -> union LEXP .)
    multiplicacion  reduce using rule 115 (COMBINING -> union LEXP .)
    division        reduce using rule 115 (COMBINING -> union LEXP .)
    modulo          reduce using rule 115 (COMBINING -> union LEXP .)
    elevado         reduce using rule 115 (COMBINING -> union LEXP .)
    and             reduce using rule 115 (COMBINING -> union LEXP .)
    or              reduce using rule 115 (COMBINING -> union LEXP .)
    mayor           reduce using rule 115 (COMBINING -> union LEXP .)
    menor           reduce using rule 115 (COMBINING -> union LEXP .)
    mayor_igual     reduce using rule 115 (COMBINING -> union LEXP .)
    menor_igual     reduce using rule 115 (COMBINING -> union LEXP .)
    igual           reduce using rule 115 (COMBINING -> union LEXP .)
    diferente1      reduce using rule 115 (COMBINING -> union LEXP .)
    diferente2      reduce using rule 115 (COMBINING -> union LEXP .)
    between         reduce using rule 115 (COMBINING -> union LEXP .)
    is              reduce using rule 115 (COMBINING -> union LEXP .)
    not             reduce using rule 115 (COMBINING -> union LEXP .)
    as              reduce using rule 115 (COMBINING -> union LEXP .)
    like            reduce using rule 115 (COMBINING -> union LEXP .)
    isnull          reduce using rule 115 (COMBINING -> union LEXP .)
    notnull         reduce using rule 115 (COMBINING -> union LEXP .)
    cadenaString    reduce using rule 115 (COMBINING -> union LEXP .)
    id              reduce using rule 115 (COMBINING -> union LEXP .)
    cadena          reduce using rule 115 (COMBINING -> union LEXP .)
    in              reduce using rule 115 (COMBINING -> union LEXP .)
    parc            reduce using rule 115 (COMBINING -> union LEXP .)
    then            reduce using rule 115 (COMBINING -> union LEXP .)
    end             reduce using rule 115 (COMBINING -> union LEXP .)
    else            reduce using rule 115 (COMBINING -> union LEXP .)
    when            reduce using rule 115 (COMBINING -> union LEXP .)
    constraint      reduce using rule 115 (COMBINING -> union LEXP .)
    primary         reduce using rule 115 (COMBINING -> union LEXP .)
    null            reduce using rule 115 (COMBINING -> union LEXP .)
    unique          reduce using rule 115 (COMBINING -> union LEXP .)
    references      reduce using rule 115 (COMBINING -> union LEXP .)
    check           reduce using rule 115 (COMBINING -> union LEXP .)
    default         reduce using rule 115 (COMBINING -> union LEXP .)
    asc             reduce using rule 115 (COMBINING -> union LEXP .)
    desc            reduce using rule 115 (COMBINING -> union LEXP .)
    coma            shift and go to state 89

  ! coma            [ reduce using rule 115 (COMBINING -> union LEXP .) ]


state 396

    (116) COMBINING -> union all . LEXP
    (227) EXP -> all . para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    para            shift and go to state 459
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 458
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 397

    (117) COMBINING -> intersect LEXP .
    (135) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 117 (COMBINING -> intersect LEXP .)
    where           reduce using rule 117 (COMBINING -> intersect LEXP .)
    group           reduce using rule 117 (COMBINING -> intersect LEXP .)
    having          reduce using rule 117 (COMBINING -> intersect LEXP .)
    union           reduce using rule 117 (COMBINING -> intersect LEXP .)
    intersect       reduce using rule 117 (COMBINING -> intersect LEXP .)
    except          reduce using rule 117 (COMBINING -> intersect LEXP .)
    order           reduce using rule 117 (COMBINING -> intersect LEXP .)
    limit           reduce using rule 117 (COMBINING -> intersect LEXP .)
    offset          reduce using rule 117 (COMBINING -> intersect LEXP .)
    ptcoma          reduce using rule 117 (COMBINING -> intersect LEXP .)
    mas             reduce using rule 117 (COMBINING -> intersect LEXP .)
    menos           reduce using rule 117 (COMBINING -> intersect LEXP .)
    multiplicacion  reduce using rule 117 (COMBINING -> intersect LEXP .)
    division        reduce using rule 117 (COMBINING -> intersect LEXP .)
    modulo          reduce using rule 117 (COMBINING -> intersect LEXP .)
    elevado         reduce using rule 117 (COMBINING -> intersect LEXP .)
    and             reduce using rule 117 (COMBINING -> intersect LEXP .)
    or              reduce using rule 117 (COMBINING -> intersect LEXP .)
    mayor           reduce using rule 117 (COMBINING -> intersect LEXP .)
    menor           reduce using rule 117 (COMBINING -> intersect LEXP .)
    mayor_igual     reduce using rule 117 (COMBINING -> intersect LEXP .)
    menor_igual     reduce using rule 117 (COMBINING -> intersect LEXP .)
    igual           reduce using rule 117 (COMBINING -> intersect LEXP .)
    diferente1      reduce using rule 117 (COMBINING -> intersect LEXP .)
    diferente2      reduce using rule 117 (COMBINING -> intersect LEXP .)
    between         reduce using rule 117 (COMBINING -> intersect LEXP .)
    is              reduce using rule 117 (COMBINING -> intersect LEXP .)
    not             reduce using rule 117 (COMBINING -> intersect LEXP .)
    as              reduce using rule 117 (COMBINING -> intersect LEXP .)
    like            reduce using rule 117 (COMBINING -> intersect LEXP .)
    isnull          reduce using rule 117 (COMBINING -> intersect LEXP .)
    notnull         reduce using rule 117 (COMBINING -> intersect LEXP .)
    cadenaString    reduce using rule 117 (COMBINING -> intersect LEXP .)
    id              reduce using rule 117 (COMBINING -> intersect LEXP .)
    cadena          reduce using rule 117 (COMBINING -> intersect LEXP .)
    in              reduce using rule 117 (COMBINING -> intersect LEXP .)
    parc            reduce using rule 117 (COMBINING -> intersect LEXP .)
    then            reduce using rule 117 (COMBINING -> intersect LEXP .)
    end             reduce using rule 117 (COMBINING -> intersect LEXP .)
    else            reduce using rule 117 (COMBINING -> intersect LEXP .)
    when            reduce using rule 117 (COMBINING -> intersect LEXP .)
    constraint      reduce using rule 117 (COMBINING -> intersect LEXP .)
    primary         reduce using rule 117 (COMBINING -> intersect LEXP .)
    null            reduce using rule 117 (COMBINING -> intersect LEXP .)
    unique          reduce using rule 117 (COMBINING -> intersect LEXP .)
    references      reduce using rule 117 (COMBINING -> intersect LEXP .)
    check           reduce using rule 117 (COMBINING -> intersect LEXP .)
    default         reduce using rule 117 (COMBINING -> intersect LEXP .)
    asc             reduce using rule 117 (COMBINING -> intersect LEXP .)
    desc            reduce using rule 117 (COMBINING -> intersect LEXP .)
    coma            shift and go to state 89

  ! coma            [ reduce using rule 117 (COMBINING -> intersect LEXP .) ]


state 398

    (118) COMBINING -> except LEXP .
    (135) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 118 (COMBINING -> except LEXP .)
    where           reduce using rule 118 (COMBINING -> except LEXP .)
    group           reduce using rule 118 (COMBINING -> except LEXP .)
    having          reduce using rule 118 (COMBINING -> except LEXP .)
    union           reduce using rule 118 (COMBINING -> except LEXP .)
    intersect       reduce using rule 118 (COMBINING -> except LEXP .)
    except          reduce using rule 118 (COMBINING -> except LEXP .)
    order           reduce using rule 118 (COMBINING -> except LEXP .)
    limit           reduce using rule 118 (COMBINING -> except LEXP .)
    offset          reduce using rule 118 (COMBINING -> except LEXP .)
    ptcoma          reduce using rule 118 (COMBINING -> except LEXP .)
    mas             reduce using rule 118 (COMBINING -> except LEXP .)
    menos           reduce using rule 118 (COMBINING -> except LEXP .)
    multiplicacion  reduce using rule 118 (COMBINING -> except LEXP .)
    division        reduce using rule 118 (COMBINING -> except LEXP .)
    modulo          reduce using rule 118 (COMBINING -> except LEXP .)
    elevado         reduce using rule 118 (COMBINING -> except LEXP .)
    and             reduce using rule 118 (COMBINING -> except LEXP .)
    or              reduce using rule 118 (COMBINING -> except LEXP .)
    mayor           reduce using rule 118 (COMBINING -> except LEXP .)
    menor           reduce using rule 118 (COMBINING -> except LEXP .)
    mayor_igual     reduce using rule 118 (COMBINING -> except LEXP .)
    menor_igual     reduce using rule 118 (COMBINING -> except LEXP .)
    igual           reduce using rule 118 (COMBINING -> except LEXP .)
    diferente1      reduce using rule 118 (COMBINING -> except LEXP .)
    diferente2      reduce using rule 118 (COMBINING -> except LEXP .)
    between         reduce using rule 118 (COMBINING -> except LEXP .)
    is              reduce using rule 118 (COMBINING -> except LEXP .)
    not             reduce using rule 118 (COMBINING -> except LEXP .)
    as              reduce using rule 118 (COMBINING -> except LEXP .)
    like            reduce using rule 118 (COMBINING -> except LEXP .)
    isnull          reduce using rule 118 (COMBINING -> except LEXP .)
    notnull         reduce using rule 118 (COMBINING -> except LEXP .)
    cadenaString    reduce using rule 118 (COMBINING -> except LEXP .)
    id              reduce using rule 118 (COMBINING -> except LEXP .)
    cadena          reduce using rule 118 (COMBINING -> except LEXP .)
    in              reduce using rule 118 (COMBINING -> except LEXP .)
    parc            reduce using rule 118 (COMBINING -> except LEXP .)
    then            reduce using rule 118 (COMBINING -> except LEXP .)
    end             reduce using rule 118 (COMBINING -> except LEXP .)
    else            reduce using rule 118 (COMBINING -> except LEXP .)
    when            reduce using rule 118 (COMBINING -> except LEXP .)
    constraint      reduce using rule 118 (COMBINING -> except LEXP .)
    primary         reduce using rule 118 (COMBINING -> except LEXP .)
    null            reduce using rule 118 (COMBINING -> except LEXP .)
    unique          reduce using rule 118 (COMBINING -> except LEXP .)
    references      reduce using rule 118 (COMBINING -> except LEXP .)
    check           reduce using rule 118 (COMBINING -> except LEXP .)
    default         reduce using rule 118 (COMBINING -> except LEXP .)
    asc             reduce using rule 118 (COMBINING -> except LEXP .)
    desc            reduce using rule 118 (COMBINING -> except LEXP .)
    coma            shift and go to state 89

  ! coma            [ reduce using rule 118 (COMBINING -> except LEXP .) ]


state 399

    (134) EXIST -> not exist para SELECT . parc

    parc            shift and go to state 460


state 400

    (133) EXIST -> exist para SELECT parc .

    r_from          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 133 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    ptcoma          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 133 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 133 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 133 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    like            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    cadenaString    reduce using rule 133 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    cadena          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    end             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    else            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    unique          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    check           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 133 (EXIST -> exist para SELECT parc .)


state 401

    (218) EXP -> EXP is not distinct r_from EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    where           reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    group           reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    having          reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    union           reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    except          reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    order           reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    and             reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    or              reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    between         reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    is              reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    not             reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    as              reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    like            reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    cadenaString    reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    id              reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    cadena          reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    in              reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    then            reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    end             reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    else            reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    when            reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    null            reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    unique          reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    references      reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    check           reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    default         reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menos           [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! division        [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor           [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! igual           [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 218 (EXP -> EXP is not distinct r_from EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 402

    (217) EXP -> EXP not in para LEXP parc .

    r_from          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    coma            reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    where           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    group           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    having          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    union           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    intersect       reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    except          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    order           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    limit           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    offset          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    ptcoma          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    mas             reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    menos           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    multiplicacion  reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    division        reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    modulo          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    elevado         reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    and             reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    or              reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    mayor           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    menor           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    mayor_igual     reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    menor_igual     reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    igual           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    diferente1      reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    diferente2      reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    between         reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    is              reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    not             reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    as              reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    like            reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    isnull          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    notnull         reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    cadenaString    reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    id              reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    cadena          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    in              reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    parc            reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    then            reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    end             reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    else            reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    when            reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    constraint      reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    primary         reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    null            reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    unique          reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    references      reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    check           reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    default         reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    asc             reduce using rule 217 (EXP -> EXP not in para LEXP parc .)
    desc            reduce using rule 217 (EXP -> EXP not in para LEXP parc .)


state 403

    (137) TIPO -> decimal para LEXP parc .

    r_from          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    coma            reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    where           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    group           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    having          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    union           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    intersect       reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    except          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    order           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    limit           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    offset          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    ptcoma          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    mas             reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    menos           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    multiplicacion  reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    division        reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    modulo          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    elevado         reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    and             reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    or              reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    mayor           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    menor           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    mayor_igual     reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    menor_igual     reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    igual           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    diferente1      reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    diferente2      reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    between         reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    is              reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    not             reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    as              reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    like            reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    isnull          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    notnull         reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    cadenaString    reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    id              reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    cadena          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    in              reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    parc            reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    then            reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    end             reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    else            reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    when            reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    constraint      reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    primary         reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    null            reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    unique          reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    references      reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    check           reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    default         reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    asc             reduce using rule 137 (TIPO -> decimal para LEXP parc .)
    desc            reduce using rule 137 (TIPO -> decimal para LEXP parc .)


state 404

    (138) TIPO -> numeric para LEXP parc .

    r_from          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    coma            reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    where           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    group           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    having          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    union           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    intersect       reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    except          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    order           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    limit           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    offset          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    ptcoma          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    mas             reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    menos           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    multiplicacion  reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    division        reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    modulo          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    elevado         reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    and             reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    or              reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    mayor           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    menor           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    mayor_igual     reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    menor_igual     reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    igual           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    diferente1      reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    diferente2      reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    between         reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    is              reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    not             reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    as              reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    like            reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    isnull          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    notnull         reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    cadenaString    reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    id              reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    cadena          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    in              reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    parc            reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    then            reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    end             reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    else            reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    when            reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    constraint      reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    primary         reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    null            reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    unique          reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    references      reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    check           reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    default         reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    asc             reduce using rule 138 (TIPO -> numeric para LEXP parc .)
    desc            reduce using rule 138 (TIPO -> numeric para LEXP parc .)


state 405

    (139) TIPO -> varchar para int parc .

    r_from          reduce using rule 139 (TIPO -> varchar para int parc .)
    coma            reduce using rule 139 (TIPO -> varchar para int parc .)
    where           reduce using rule 139 (TIPO -> varchar para int parc .)
    group           reduce using rule 139 (TIPO -> varchar para int parc .)
    having          reduce using rule 139 (TIPO -> varchar para int parc .)
    union           reduce using rule 139 (TIPO -> varchar para int parc .)
    intersect       reduce using rule 139 (TIPO -> varchar para int parc .)
    except          reduce using rule 139 (TIPO -> varchar para int parc .)
    order           reduce using rule 139 (TIPO -> varchar para int parc .)
    limit           reduce using rule 139 (TIPO -> varchar para int parc .)
    offset          reduce using rule 139 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 139 (TIPO -> varchar para int parc .)
    mas             reduce using rule 139 (TIPO -> varchar para int parc .)
    menos           reduce using rule 139 (TIPO -> varchar para int parc .)
    multiplicacion  reduce using rule 139 (TIPO -> varchar para int parc .)
    division        reduce using rule 139 (TIPO -> varchar para int parc .)
    modulo          reduce using rule 139 (TIPO -> varchar para int parc .)
    elevado         reduce using rule 139 (TIPO -> varchar para int parc .)
    and             reduce using rule 139 (TIPO -> varchar para int parc .)
    or              reduce using rule 139 (TIPO -> varchar para int parc .)
    mayor           reduce using rule 139 (TIPO -> varchar para int parc .)
    menor           reduce using rule 139 (TIPO -> varchar para int parc .)
    mayor_igual     reduce using rule 139 (TIPO -> varchar para int parc .)
    menor_igual     reduce using rule 139 (TIPO -> varchar para int parc .)
    igual           reduce using rule 139 (TIPO -> varchar para int parc .)
    diferente1      reduce using rule 139 (TIPO -> varchar para int parc .)
    diferente2      reduce using rule 139 (TIPO -> varchar para int parc .)
    between         reduce using rule 139 (TIPO -> varchar para int parc .)
    is              reduce using rule 139 (TIPO -> varchar para int parc .)
    not             reduce using rule 139 (TIPO -> varchar para int parc .)
    as              reduce using rule 139 (TIPO -> varchar para int parc .)
    like            reduce using rule 139 (TIPO -> varchar para int parc .)
    isnull          reduce using rule 139 (TIPO -> varchar para int parc .)
    notnull         reduce using rule 139 (TIPO -> varchar para int parc .)
    cadenaString    reduce using rule 139 (TIPO -> varchar para int parc .)
    id              reduce using rule 139 (TIPO -> varchar para int parc .)
    cadena          reduce using rule 139 (TIPO -> varchar para int parc .)
    in              reduce using rule 139 (TIPO -> varchar para int parc .)
    parc            reduce using rule 139 (TIPO -> varchar para int parc .)
    then            reduce using rule 139 (TIPO -> varchar para int parc .)
    end             reduce using rule 139 (TIPO -> varchar para int parc .)
    else            reduce using rule 139 (TIPO -> varchar para int parc .)
    when            reduce using rule 139 (TIPO -> varchar para int parc .)
    constraint      reduce using rule 139 (TIPO -> varchar para int parc .)
    primary         reduce using rule 139 (TIPO -> varchar para int parc .)
    null            reduce using rule 139 (TIPO -> varchar para int parc .)
    unique          reduce using rule 139 (TIPO -> varchar para int parc .)
    references      reduce using rule 139 (TIPO -> varchar para int parc .)
    check           reduce using rule 139 (TIPO -> varchar para int parc .)
    default         reduce using rule 139 (TIPO -> varchar para int parc .)
    asc             reduce using rule 139 (TIPO -> varchar para int parc .)
    desc            reduce using rule 139 (TIPO -> varchar para int parc .)


state 406

    (140) TIPO -> timestamp para int parc .
    (147) TIPO -> timestamp para int parc . without time zone
    (148) TIPO -> timestamp para int parc . with time zone

    r_from          reduce using rule 140 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 140 (TIPO -> timestamp para int parc .)
    where           reduce using rule 140 (TIPO -> timestamp para int parc .)
    group           reduce using rule 140 (TIPO -> timestamp para int parc .)
    having          reduce using rule 140 (TIPO -> timestamp para int parc .)
    union           reduce using rule 140 (TIPO -> timestamp para int parc .)
    intersect       reduce using rule 140 (TIPO -> timestamp para int parc .)
    except          reduce using rule 140 (TIPO -> timestamp para int parc .)
    order           reduce using rule 140 (TIPO -> timestamp para int parc .)
    limit           reduce using rule 140 (TIPO -> timestamp para int parc .)
    offset          reduce using rule 140 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 140 (TIPO -> timestamp para int parc .)
    mas             reduce using rule 140 (TIPO -> timestamp para int parc .)
    menos           reduce using rule 140 (TIPO -> timestamp para int parc .)
    multiplicacion  reduce using rule 140 (TIPO -> timestamp para int parc .)
    division        reduce using rule 140 (TIPO -> timestamp para int parc .)
    modulo          reduce using rule 140 (TIPO -> timestamp para int parc .)
    elevado         reduce using rule 140 (TIPO -> timestamp para int parc .)
    and             reduce using rule 140 (TIPO -> timestamp para int parc .)
    or              reduce using rule 140 (TIPO -> timestamp para int parc .)
    mayor           reduce using rule 140 (TIPO -> timestamp para int parc .)
    menor           reduce using rule 140 (TIPO -> timestamp para int parc .)
    mayor_igual     reduce using rule 140 (TIPO -> timestamp para int parc .)
    menor_igual     reduce using rule 140 (TIPO -> timestamp para int parc .)
    igual           reduce using rule 140 (TIPO -> timestamp para int parc .)
    diferente1      reduce using rule 140 (TIPO -> timestamp para int parc .)
    diferente2      reduce using rule 140 (TIPO -> timestamp para int parc .)
    between         reduce using rule 140 (TIPO -> timestamp para int parc .)
    is              reduce using rule 140 (TIPO -> timestamp para int parc .)
    not             reduce using rule 140 (TIPO -> timestamp para int parc .)
    as              reduce using rule 140 (TIPO -> timestamp para int parc .)
    like            reduce using rule 140 (TIPO -> timestamp para int parc .)
    isnull          reduce using rule 140 (TIPO -> timestamp para int parc .)
    notnull         reduce using rule 140 (TIPO -> timestamp para int parc .)
    cadenaString    reduce using rule 140 (TIPO -> timestamp para int parc .)
    id              reduce using rule 140 (TIPO -> timestamp para int parc .)
    cadena          reduce using rule 140 (TIPO -> timestamp para int parc .)
    in              reduce using rule 140 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 140 (TIPO -> timestamp para int parc .)
    then            reduce using rule 140 (TIPO -> timestamp para int parc .)
    end             reduce using rule 140 (TIPO -> timestamp para int parc .)
    else            reduce using rule 140 (TIPO -> timestamp para int parc .)
    when            reduce using rule 140 (TIPO -> timestamp para int parc .)
    constraint      reduce using rule 140 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 140 (TIPO -> timestamp para int parc .)
    null            reduce using rule 140 (TIPO -> timestamp para int parc .)
    unique          reduce using rule 140 (TIPO -> timestamp para int parc .)
    references      reduce using rule 140 (TIPO -> timestamp para int parc .)
    check           reduce using rule 140 (TIPO -> timestamp para int parc .)
    default         reduce using rule 140 (TIPO -> timestamp para int parc .)
    asc             reduce using rule 140 (TIPO -> timestamp para int parc .)
    desc            reduce using rule 140 (TIPO -> timestamp para int parc .)
    without         shift and go to state 461
    with            shift and go to state 462


state 407

    (167) TIPO -> timestamp without time zone .

    r_from          reduce using rule 167 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 167 (TIPO -> timestamp without time zone .)
    where           reduce using rule 167 (TIPO -> timestamp without time zone .)
    group           reduce using rule 167 (TIPO -> timestamp without time zone .)
    having          reduce using rule 167 (TIPO -> timestamp without time zone .)
    union           reduce using rule 167 (TIPO -> timestamp without time zone .)
    intersect       reduce using rule 167 (TIPO -> timestamp without time zone .)
    except          reduce using rule 167 (TIPO -> timestamp without time zone .)
    order           reduce using rule 167 (TIPO -> timestamp without time zone .)
    limit           reduce using rule 167 (TIPO -> timestamp without time zone .)
    offset          reduce using rule 167 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 167 (TIPO -> timestamp without time zone .)
    mas             reduce using rule 167 (TIPO -> timestamp without time zone .)
    menos           reduce using rule 167 (TIPO -> timestamp without time zone .)
    multiplicacion  reduce using rule 167 (TIPO -> timestamp without time zone .)
    division        reduce using rule 167 (TIPO -> timestamp without time zone .)
    modulo          reduce using rule 167 (TIPO -> timestamp without time zone .)
    elevado         reduce using rule 167 (TIPO -> timestamp without time zone .)
    and             reduce using rule 167 (TIPO -> timestamp without time zone .)
    or              reduce using rule 167 (TIPO -> timestamp without time zone .)
    mayor           reduce using rule 167 (TIPO -> timestamp without time zone .)
    menor           reduce using rule 167 (TIPO -> timestamp without time zone .)
    mayor_igual     reduce using rule 167 (TIPO -> timestamp without time zone .)
    menor_igual     reduce using rule 167 (TIPO -> timestamp without time zone .)
    igual           reduce using rule 167 (TIPO -> timestamp without time zone .)
    diferente1      reduce using rule 167 (TIPO -> timestamp without time zone .)
    diferente2      reduce using rule 167 (TIPO -> timestamp without time zone .)
    between         reduce using rule 167 (TIPO -> timestamp without time zone .)
    is              reduce using rule 167 (TIPO -> timestamp without time zone .)
    not             reduce using rule 167 (TIPO -> timestamp without time zone .)
    as              reduce using rule 167 (TIPO -> timestamp without time zone .)
    like            reduce using rule 167 (TIPO -> timestamp without time zone .)
    isnull          reduce using rule 167 (TIPO -> timestamp without time zone .)
    notnull         reduce using rule 167 (TIPO -> timestamp without time zone .)
    cadenaString    reduce using rule 167 (TIPO -> timestamp without time zone .)
    id              reduce using rule 167 (TIPO -> timestamp without time zone .)
    cadena          reduce using rule 167 (TIPO -> timestamp without time zone .)
    in              reduce using rule 167 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 167 (TIPO -> timestamp without time zone .)
    then            reduce using rule 167 (TIPO -> timestamp without time zone .)
    end             reduce using rule 167 (TIPO -> timestamp without time zone .)
    else            reduce using rule 167 (TIPO -> timestamp without time zone .)
    when            reduce using rule 167 (TIPO -> timestamp without time zone .)
    constraint      reduce using rule 167 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 167 (TIPO -> timestamp without time zone .)
    null            reduce using rule 167 (TIPO -> timestamp without time zone .)
    unique          reduce using rule 167 (TIPO -> timestamp without time zone .)
    references      reduce using rule 167 (TIPO -> timestamp without time zone .)
    check           reduce using rule 167 (TIPO -> timestamp without time zone .)
    default         reduce using rule 167 (TIPO -> timestamp without time zone .)
    asc             reduce using rule 167 (TIPO -> timestamp without time zone .)
    desc            reduce using rule 167 (TIPO -> timestamp without time zone .)


state 408

    (168) TIPO -> timestamp with time zone .

    r_from          reduce using rule 168 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 168 (TIPO -> timestamp with time zone .)
    where           reduce using rule 168 (TIPO -> timestamp with time zone .)
    group           reduce using rule 168 (TIPO -> timestamp with time zone .)
    having          reduce using rule 168 (TIPO -> timestamp with time zone .)
    union           reduce using rule 168 (TIPO -> timestamp with time zone .)
    intersect       reduce using rule 168 (TIPO -> timestamp with time zone .)
    except          reduce using rule 168 (TIPO -> timestamp with time zone .)
    order           reduce using rule 168 (TIPO -> timestamp with time zone .)
    limit           reduce using rule 168 (TIPO -> timestamp with time zone .)
    offset          reduce using rule 168 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 168 (TIPO -> timestamp with time zone .)
    mas             reduce using rule 168 (TIPO -> timestamp with time zone .)
    menos           reduce using rule 168 (TIPO -> timestamp with time zone .)
    multiplicacion  reduce using rule 168 (TIPO -> timestamp with time zone .)
    division        reduce using rule 168 (TIPO -> timestamp with time zone .)
    modulo          reduce using rule 168 (TIPO -> timestamp with time zone .)
    elevado         reduce using rule 168 (TIPO -> timestamp with time zone .)
    and             reduce using rule 168 (TIPO -> timestamp with time zone .)
    or              reduce using rule 168 (TIPO -> timestamp with time zone .)
    mayor           reduce using rule 168 (TIPO -> timestamp with time zone .)
    menor           reduce using rule 168 (TIPO -> timestamp with time zone .)
    mayor_igual     reduce using rule 168 (TIPO -> timestamp with time zone .)
    menor_igual     reduce using rule 168 (TIPO -> timestamp with time zone .)
    igual           reduce using rule 168 (TIPO -> timestamp with time zone .)
    diferente1      reduce using rule 168 (TIPO -> timestamp with time zone .)
    diferente2      reduce using rule 168 (TIPO -> timestamp with time zone .)
    between         reduce using rule 168 (TIPO -> timestamp with time zone .)
    is              reduce using rule 168 (TIPO -> timestamp with time zone .)
    not             reduce using rule 168 (TIPO -> timestamp with time zone .)
    as              reduce using rule 168 (TIPO -> timestamp with time zone .)
    like            reduce using rule 168 (TIPO -> timestamp with time zone .)
    isnull          reduce using rule 168 (TIPO -> timestamp with time zone .)
    notnull         reduce using rule 168 (TIPO -> timestamp with time zone .)
    cadenaString    reduce using rule 168 (TIPO -> timestamp with time zone .)
    id              reduce using rule 168 (TIPO -> timestamp with time zone .)
    cadena          reduce using rule 168 (TIPO -> timestamp with time zone .)
    in              reduce using rule 168 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 168 (TIPO -> timestamp with time zone .)
    then            reduce using rule 168 (TIPO -> timestamp with time zone .)
    end             reduce using rule 168 (TIPO -> timestamp with time zone .)
    else            reduce using rule 168 (TIPO -> timestamp with time zone .)
    when            reduce using rule 168 (TIPO -> timestamp with time zone .)
    constraint      reduce using rule 168 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 168 (TIPO -> timestamp with time zone .)
    null            reduce using rule 168 (TIPO -> timestamp with time zone .)
    unique          reduce using rule 168 (TIPO -> timestamp with time zone .)
    references      reduce using rule 168 (TIPO -> timestamp with time zone .)
    check           reduce using rule 168 (TIPO -> timestamp with time zone .)
    default         reduce using rule 168 (TIPO -> timestamp with time zone .)
    asc             reduce using rule 168 (TIPO -> timestamp with time zone .)
    desc            reduce using rule 168 (TIPO -> timestamp with time zone .)


state 409

    (141) TIPO -> character para int parc .

    r_from          reduce using rule 141 (TIPO -> character para int parc .)
    coma            reduce using rule 141 (TIPO -> character para int parc .)
    where           reduce using rule 141 (TIPO -> character para int parc .)
    group           reduce using rule 141 (TIPO -> character para int parc .)
    having          reduce using rule 141 (TIPO -> character para int parc .)
    union           reduce using rule 141 (TIPO -> character para int parc .)
    intersect       reduce using rule 141 (TIPO -> character para int parc .)
    except          reduce using rule 141 (TIPO -> character para int parc .)
    order           reduce using rule 141 (TIPO -> character para int parc .)
    limit           reduce using rule 141 (TIPO -> character para int parc .)
    offset          reduce using rule 141 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 141 (TIPO -> character para int parc .)
    mas             reduce using rule 141 (TIPO -> character para int parc .)
    menos           reduce using rule 141 (TIPO -> character para int parc .)
    multiplicacion  reduce using rule 141 (TIPO -> character para int parc .)
    division        reduce using rule 141 (TIPO -> character para int parc .)
    modulo          reduce using rule 141 (TIPO -> character para int parc .)
    elevado         reduce using rule 141 (TIPO -> character para int parc .)
    and             reduce using rule 141 (TIPO -> character para int parc .)
    or              reduce using rule 141 (TIPO -> character para int parc .)
    mayor           reduce using rule 141 (TIPO -> character para int parc .)
    menor           reduce using rule 141 (TIPO -> character para int parc .)
    mayor_igual     reduce using rule 141 (TIPO -> character para int parc .)
    menor_igual     reduce using rule 141 (TIPO -> character para int parc .)
    igual           reduce using rule 141 (TIPO -> character para int parc .)
    diferente1      reduce using rule 141 (TIPO -> character para int parc .)
    diferente2      reduce using rule 141 (TIPO -> character para int parc .)
    between         reduce using rule 141 (TIPO -> character para int parc .)
    is              reduce using rule 141 (TIPO -> character para int parc .)
    not             reduce using rule 141 (TIPO -> character para int parc .)
    as              reduce using rule 141 (TIPO -> character para int parc .)
    like            reduce using rule 141 (TIPO -> character para int parc .)
    isnull          reduce using rule 141 (TIPO -> character para int parc .)
    notnull         reduce using rule 141 (TIPO -> character para int parc .)
    cadenaString    reduce using rule 141 (TIPO -> character para int parc .)
    id              reduce using rule 141 (TIPO -> character para int parc .)
    cadena          reduce using rule 141 (TIPO -> character para int parc .)
    in              reduce using rule 141 (TIPO -> character para int parc .)
    parc            reduce using rule 141 (TIPO -> character para int parc .)
    then            reduce using rule 141 (TIPO -> character para int parc .)
    end             reduce using rule 141 (TIPO -> character para int parc .)
    else            reduce using rule 141 (TIPO -> character para int parc .)
    when            reduce using rule 141 (TIPO -> character para int parc .)
    constraint      reduce using rule 141 (TIPO -> character para int parc .)
    primary         reduce using rule 141 (TIPO -> character para int parc .)
    null            reduce using rule 141 (TIPO -> character para int parc .)
    unique          reduce using rule 141 (TIPO -> character para int parc .)
    references      reduce using rule 141 (TIPO -> character para int parc .)
    check           reduce using rule 141 (TIPO -> character para int parc .)
    default         reduce using rule 141 (TIPO -> character para int parc .)
    asc             reduce using rule 141 (TIPO -> character para int parc .)
    desc            reduce using rule 141 (TIPO -> character para int parc .)


state 410

    (145) TIPO -> character varying para int . parc

    parc            shift and go to state 463


state 411

    (142) TIPO -> interval para int parc .
    (151) TIPO -> interval para int parc . cadena

  ! shift/reduce conflict for cadena resolved as shift
    r_from          reduce using rule 142 (TIPO -> interval para int parc .)
    coma            reduce using rule 142 (TIPO -> interval para int parc .)
    where           reduce using rule 142 (TIPO -> interval para int parc .)
    group           reduce using rule 142 (TIPO -> interval para int parc .)
    having          reduce using rule 142 (TIPO -> interval para int parc .)
    union           reduce using rule 142 (TIPO -> interval para int parc .)
    intersect       reduce using rule 142 (TIPO -> interval para int parc .)
    except          reduce using rule 142 (TIPO -> interval para int parc .)
    order           reduce using rule 142 (TIPO -> interval para int parc .)
    limit           reduce using rule 142 (TIPO -> interval para int parc .)
    offset          reduce using rule 142 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 142 (TIPO -> interval para int parc .)
    mas             reduce using rule 142 (TIPO -> interval para int parc .)
    menos           reduce using rule 142 (TIPO -> interval para int parc .)
    multiplicacion  reduce using rule 142 (TIPO -> interval para int parc .)
    division        reduce using rule 142 (TIPO -> interval para int parc .)
    modulo          reduce using rule 142 (TIPO -> interval para int parc .)
    elevado         reduce using rule 142 (TIPO -> interval para int parc .)
    and             reduce using rule 142 (TIPO -> interval para int parc .)
    or              reduce using rule 142 (TIPO -> interval para int parc .)
    mayor           reduce using rule 142 (TIPO -> interval para int parc .)
    menor           reduce using rule 142 (TIPO -> interval para int parc .)
    mayor_igual     reduce using rule 142 (TIPO -> interval para int parc .)
    menor_igual     reduce using rule 142 (TIPO -> interval para int parc .)
    igual           reduce using rule 142 (TIPO -> interval para int parc .)
    diferente1      reduce using rule 142 (TIPO -> interval para int parc .)
    diferente2      reduce using rule 142 (TIPO -> interval para int parc .)
    between         reduce using rule 142 (TIPO -> interval para int parc .)
    is              reduce using rule 142 (TIPO -> interval para int parc .)
    not             reduce using rule 142 (TIPO -> interval para int parc .)
    as              reduce using rule 142 (TIPO -> interval para int parc .)
    like            reduce using rule 142 (TIPO -> interval para int parc .)
    isnull          reduce using rule 142 (TIPO -> interval para int parc .)
    notnull         reduce using rule 142 (TIPO -> interval para int parc .)
    cadenaString    reduce using rule 142 (TIPO -> interval para int parc .)
    id              reduce using rule 142 (TIPO -> interval para int parc .)
    in              reduce using rule 142 (TIPO -> interval para int parc .)
    parc            reduce using rule 142 (TIPO -> interval para int parc .)
    then            reduce using rule 142 (TIPO -> interval para int parc .)
    end             reduce using rule 142 (TIPO -> interval para int parc .)
    else            reduce using rule 142 (TIPO -> interval para int parc .)
    when            reduce using rule 142 (TIPO -> interval para int parc .)
    constraint      reduce using rule 142 (TIPO -> interval para int parc .)
    primary         reduce using rule 142 (TIPO -> interval para int parc .)
    null            reduce using rule 142 (TIPO -> interval para int parc .)
    unique          reduce using rule 142 (TIPO -> interval para int parc .)
    references      reduce using rule 142 (TIPO -> interval para int parc .)
    check           reduce using rule 142 (TIPO -> interval para int parc .)
    default         reduce using rule 142 (TIPO -> interval para int parc .)
    asc             reduce using rule 142 (TIPO -> interval para int parc .)
    desc            reduce using rule 142 (TIPO -> interval para int parc .)
    cadena          shift and go to state 464

  ! cadena          [ reduce using rule 142 (TIPO -> interval para int parc .) ]


state 412

    (143) TIPO -> char para int parc .

    r_from          reduce using rule 143 (TIPO -> char para int parc .)
    coma            reduce using rule 143 (TIPO -> char para int parc .)
    where           reduce using rule 143 (TIPO -> char para int parc .)
    group           reduce using rule 143 (TIPO -> char para int parc .)
    having          reduce using rule 143 (TIPO -> char para int parc .)
    union           reduce using rule 143 (TIPO -> char para int parc .)
    intersect       reduce using rule 143 (TIPO -> char para int parc .)
    except          reduce using rule 143 (TIPO -> char para int parc .)
    order           reduce using rule 143 (TIPO -> char para int parc .)
    limit           reduce using rule 143 (TIPO -> char para int parc .)
    offset          reduce using rule 143 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 143 (TIPO -> char para int parc .)
    mas             reduce using rule 143 (TIPO -> char para int parc .)
    menos           reduce using rule 143 (TIPO -> char para int parc .)
    multiplicacion  reduce using rule 143 (TIPO -> char para int parc .)
    division        reduce using rule 143 (TIPO -> char para int parc .)
    modulo          reduce using rule 143 (TIPO -> char para int parc .)
    elevado         reduce using rule 143 (TIPO -> char para int parc .)
    and             reduce using rule 143 (TIPO -> char para int parc .)
    or              reduce using rule 143 (TIPO -> char para int parc .)
    mayor           reduce using rule 143 (TIPO -> char para int parc .)
    menor           reduce using rule 143 (TIPO -> char para int parc .)
    mayor_igual     reduce using rule 143 (TIPO -> char para int parc .)
    menor_igual     reduce using rule 143 (TIPO -> char para int parc .)
    igual           reduce using rule 143 (TIPO -> char para int parc .)
    diferente1      reduce using rule 143 (TIPO -> char para int parc .)
    diferente2      reduce using rule 143 (TIPO -> char para int parc .)
    between         reduce using rule 143 (TIPO -> char para int parc .)
    is              reduce using rule 143 (TIPO -> char para int parc .)
    not             reduce using rule 143 (TIPO -> char para int parc .)
    as              reduce using rule 143 (TIPO -> char para int parc .)
    like            reduce using rule 143 (TIPO -> char para int parc .)
    isnull          reduce using rule 143 (TIPO -> char para int parc .)
    notnull         reduce using rule 143 (TIPO -> char para int parc .)
    cadenaString    reduce using rule 143 (TIPO -> char para int parc .)
    id              reduce using rule 143 (TIPO -> char para int parc .)
    cadena          reduce using rule 143 (TIPO -> char para int parc .)
    in              reduce using rule 143 (TIPO -> char para int parc .)
    parc            reduce using rule 143 (TIPO -> char para int parc .)
    then            reduce using rule 143 (TIPO -> char para int parc .)
    end             reduce using rule 143 (TIPO -> char para int parc .)
    else            reduce using rule 143 (TIPO -> char para int parc .)
    when            reduce using rule 143 (TIPO -> char para int parc .)
    constraint      reduce using rule 143 (TIPO -> char para int parc .)
    primary         reduce using rule 143 (TIPO -> char para int parc .)
    null            reduce using rule 143 (TIPO -> char para int parc .)
    unique          reduce using rule 143 (TIPO -> char para int parc .)
    references      reduce using rule 143 (TIPO -> char para int parc .)
    check           reduce using rule 143 (TIPO -> char para int parc .)
    default         reduce using rule 143 (TIPO -> char para int parc .)
    asc             reduce using rule 143 (TIPO -> char para int parc .)
    desc            reduce using rule 143 (TIPO -> char para int parc .)


state 413

    (144) TIPO -> time para int parc .
    (149) TIPO -> time para int parc . without time zone
    (150) TIPO -> time para int parc . with time zone

    r_from          reduce using rule 144 (TIPO -> time para int parc .)
    coma            reduce using rule 144 (TIPO -> time para int parc .)
    where           reduce using rule 144 (TIPO -> time para int parc .)
    group           reduce using rule 144 (TIPO -> time para int parc .)
    having          reduce using rule 144 (TIPO -> time para int parc .)
    union           reduce using rule 144 (TIPO -> time para int parc .)
    intersect       reduce using rule 144 (TIPO -> time para int parc .)
    except          reduce using rule 144 (TIPO -> time para int parc .)
    order           reduce using rule 144 (TIPO -> time para int parc .)
    limit           reduce using rule 144 (TIPO -> time para int parc .)
    offset          reduce using rule 144 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 144 (TIPO -> time para int parc .)
    mas             reduce using rule 144 (TIPO -> time para int parc .)
    menos           reduce using rule 144 (TIPO -> time para int parc .)
    multiplicacion  reduce using rule 144 (TIPO -> time para int parc .)
    division        reduce using rule 144 (TIPO -> time para int parc .)
    modulo          reduce using rule 144 (TIPO -> time para int parc .)
    elevado         reduce using rule 144 (TIPO -> time para int parc .)
    and             reduce using rule 144 (TIPO -> time para int parc .)
    or              reduce using rule 144 (TIPO -> time para int parc .)
    mayor           reduce using rule 144 (TIPO -> time para int parc .)
    menor           reduce using rule 144 (TIPO -> time para int parc .)
    mayor_igual     reduce using rule 144 (TIPO -> time para int parc .)
    menor_igual     reduce using rule 144 (TIPO -> time para int parc .)
    igual           reduce using rule 144 (TIPO -> time para int parc .)
    diferente1      reduce using rule 144 (TIPO -> time para int parc .)
    diferente2      reduce using rule 144 (TIPO -> time para int parc .)
    between         reduce using rule 144 (TIPO -> time para int parc .)
    is              reduce using rule 144 (TIPO -> time para int parc .)
    not             reduce using rule 144 (TIPO -> time para int parc .)
    as              reduce using rule 144 (TIPO -> time para int parc .)
    like            reduce using rule 144 (TIPO -> time para int parc .)
    isnull          reduce using rule 144 (TIPO -> time para int parc .)
    notnull         reduce using rule 144 (TIPO -> time para int parc .)
    cadenaString    reduce using rule 144 (TIPO -> time para int parc .)
    id              reduce using rule 144 (TIPO -> time para int parc .)
    cadena          reduce using rule 144 (TIPO -> time para int parc .)
    in              reduce using rule 144 (TIPO -> time para int parc .)
    parc            reduce using rule 144 (TIPO -> time para int parc .)
    then            reduce using rule 144 (TIPO -> time para int parc .)
    end             reduce using rule 144 (TIPO -> time para int parc .)
    else            reduce using rule 144 (TIPO -> time para int parc .)
    when            reduce using rule 144 (TIPO -> time para int parc .)
    constraint      reduce using rule 144 (TIPO -> time para int parc .)
    primary         reduce using rule 144 (TIPO -> time para int parc .)
    null            reduce using rule 144 (TIPO -> time para int parc .)
    unique          reduce using rule 144 (TIPO -> time para int parc .)
    references      reduce using rule 144 (TIPO -> time para int parc .)
    check           reduce using rule 144 (TIPO -> time para int parc .)
    default         reduce using rule 144 (TIPO -> time para int parc .)
    asc             reduce using rule 144 (TIPO -> time para int parc .)
    desc            reduce using rule 144 (TIPO -> time para int parc .)
    without         shift and go to state 465
    with            shift and go to state 466


state 414

    (169) TIPO -> time without time zone .

    r_from          reduce using rule 169 (TIPO -> time without time zone .)
    coma            reduce using rule 169 (TIPO -> time without time zone .)
    where           reduce using rule 169 (TIPO -> time without time zone .)
    group           reduce using rule 169 (TIPO -> time without time zone .)
    having          reduce using rule 169 (TIPO -> time without time zone .)
    union           reduce using rule 169 (TIPO -> time without time zone .)
    intersect       reduce using rule 169 (TIPO -> time without time zone .)
    except          reduce using rule 169 (TIPO -> time without time zone .)
    order           reduce using rule 169 (TIPO -> time without time zone .)
    limit           reduce using rule 169 (TIPO -> time without time zone .)
    offset          reduce using rule 169 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 169 (TIPO -> time without time zone .)
    mas             reduce using rule 169 (TIPO -> time without time zone .)
    menos           reduce using rule 169 (TIPO -> time without time zone .)
    multiplicacion  reduce using rule 169 (TIPO -> time without time zone .)
    division        reduce using rule 169 (TIPO -> time without time zone .)
    modulo          reduce using rule 169 (TIPO -> time without time zone .)
    elevado         reduce using rule 169 (TIPO -> time without time zone .)
    and             reduce using rule 169 (TIPO -> time without time zone .)
    or              reduce using rule 169 (TIPO -> time without time zone .)
    mayor           reduce using rule 169 (TIPO -> time without time zone .)
    menor           reduce using rule 169 (TIPO -> time without time zone .)
    mayor_igual     reduce using rule 169 (TIPO -> time without time zone .)
    menor_igual     reduce using rule 169 (TIPO -> time without time zone .)
    igual           reduce using rule 169 (TIPO -> time without time zone .)
    diferente1      reduce using rule 169 (TIPO -> time without time zone .)
    diferente2      reduce using rule 169 (TIPO -> time without time zone .)
    between         reduce using rule 169 (TIPO -> time without time zone .)
    is              reduce using rule 169 (TIPO -> time without time zone .)
    not             reduce using rule 169 (TIPO -> time without time zone .)
    as              reduce using rule 169 (TIPO -> time without time zone .)
    like            reduce using rule 169 (TIPO -> time without time zone .)
    isnull          reduce using rule 169 (TIPO -> time without time zone .)
    notnull         reduce using rule 169 (TIPO -> time without time zone .)
    cadenaString    reduce using rule 169 (TIPO -> time without time zone .)
    id              reduce using rule 169 (TIPO -> time without time zone .)
    cadena          reduce using rule 169 (TIPO -> time without time zone .)
    in              reduce using rule 169 (TIPO -> time without time zone .)
    parc            reduce using rule 169 (TIPO -> time without time zone .)
    then            reduce using rule 169 (TIPO -> time without time zone .)
    end             reduce using rule 169 (TIPO -> time without time zone .)
    else            reduce using rule 169 (TIPO -> time without time zone .)
    when            reduce using rule 169 (TIPO -> time without time zone .)
    constraint      reduce using rule 169 (TIPO -> time without time zone .)
    primary         reduce using rule 169 (TIPO -> time without time zone .)
    null            reduce using rule 169 (TIPO -> time without time zone .)
    unique          reduce using rule 169 (TIPO -> time without time zone .)
    references      reduce using rule 169 (TIPO -> time without time zone .)
    check           reduce using rule 169 (TIPO -> time without time zone .)
    default         reduce using rule 169 (TIPO -> time without time zone .)
    asc             reduce using rule 169 (TIPO -> time without time zone .)
    desc            reduce using rule 169 (TIPO -> time without time zone .)


state 415

    (170) TIPO -> time with time zone .

    r_from          reduce using rule 170 (TIPO -> time with time zone .)
    coma            reduce using rule 170 (TIPO -> time with time zone .)
    where           reduce using rule 170 (TIPO -> time with time zone .)
    group           reduce using rule 170 (TIPO -> time with time zone .)
    having          reduce using rule 170 (TIPO -> time with time zone .)
    union           reduce using rule 170 (TIPO -> time with time zone .)
    intersect       reduce using rule 170 (TIPO -> time with time zone .)
    except          reduce using rule 170 (TIPO -> time with time zone .)
    order           reduce using rule 170 (TIPO -> time with time zone .)
    limit           reduce using rule 170 (TIPO -> time with time zone .)
    offset          reduce using rule 170 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 170 (TIPO -> time with time zone .)
    mas             reduce using rule 170 (TIPO -> time with time zone .)
    menos           reduce using rule 170 (TIPO -> time with time zone .)
    multiplicacion  reduce using rule 170 (TIPO -> time with time zone .)
    division        reduce using rule 170 (TIPO -> time with time zone .)
    modulo          reduce using rule 170 (TIPO -> time with time zone .)
    elevado         reduce using rule 170 (TIPO -> time with time zone .)
    and             reduce using rule 170 (TIPO -> time with time zone .)
    or              reduce using rule 170 (TIPO -> time with time zone .)
    mayor           reduce using rule 170 (TIPO -> time with time zone .)
    menor           reduce using rule 170 (TIPO -> time with time zone .)
    mayor_igual     reduce using rule 170 (TIPO -> time with time zone .)
    menor_igual     reduce using rule 170 (TIPO -> time with time zone .)
    igual           reduce using rule 170 (TIPO -> time with time zone .)
    diferente1      reduce using rule 170 (TIPO -> time with time zone .)
    diferente2      reduce using rule 170 (TIPO -> time with time zone .)
    between         reduce using rule 170 (TIPO -> time with time zone .)
    is              reduce using rule 170 (TIPO -> time with time zone .)
    not             reduce using rule 170 (TIPO -> time with time zone .)
    as              reduce using rule 170 (TIPO -> time with time zone .)
    like            reduce using rule 170 (TIPO -> time with time zone .)
    isnull          reduce using rule 170 (TIPO -> time with time zone .)
    notnull         reduce using rule 170 (TIPO -> time with time zone .)
    cadenaString    reduce using rule 170 (TIPO -> time with time zone .)
    id              reduce using rule 170 (TIPO -> time with time zone .)
    cadena          reduce using rule 170 (TIPO -> time with time zone .)
    in              reduce using rule 170 (TIPO -> time with time zone .)
    parc            reduce using rule 170 (TIPO -> time with time zone .)
    then            reduce using rule 170 (TIPO -> time with time zone .)
    end             reduce using rule 170 (TIPO -> time with time zone .)
    else            reduce using rule 170 (TIPO -> time with time zone .)
    when            reduce using rule 170 (TIPO -> time with time zone .)
    constraint      reduce using rule 170 (TIPO -> time with time zone .)
    primary         reduce using rule 170 (TIPO -> time with time zone .)
    null            reduce using rule 170 (TIPO -> time with time zone .)
    unique          reduce using rule 170 (TIPO -> time with time zone .)
    references      reduce using rule 170 (TIPO -> time with time zone .)
    check           reduce using rule 170 (TIPO -> time with time zone .)
    default         reduce using rule 170 (TIPO -> time with time zone .)
    asc             reduce using rule 170 (TIPO -> time with time zone .)
    desc            reduce using rule 170 (TIPO -> time with time zone .)


state 416

    (229) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 467


state 417

    (76) COLDEF -> id TIPO LOPCOLUMN .
    (77) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (79) OPCOLUMN -> . constraint id unique
    (80) OPCOLUMN -> . not null
    (81) OPCOLUMN -> . primary key
    (82) OPCOLUMN -> . null
    (83) OPCOLUMN -> . unique
    (84) OPCOLUMN -> . references id
    (85) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (86) OPCOLUMN -> . check para CONDCHECK parc
    (87) OPCOLUMN -> . default EXP

    parc            reduce using rule 76 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 76 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 419
    not             shift and go to state 421
    primary         shift and go to state 423
    null            shift and go to state 422
    unique          shift and go to state 420
    references      shift and go to state 424
    check           shift and go to state 425
    default         shift and go to state 426

    OPCOLUMN                       shift and go to state 468

state 418

    (78) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    unique          reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    check           reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 78 (LOPCOLUMN -> OPCOLUMN .)


state 419

    (79) OPCOLUMN -> constraint . id unique
    (85) OPCOLUMN -> constraint . id check para CONDCHECK parc

    id              shift and go to state 469


state 420

    (83) OPCOLUMN -> unique .

    constraint      reduce using rule 83 (OPCOLUMN -> unique .)
    not             reduce using rule 83 (OPCOLUMN -> unique .)
    primary         reduce using rule 83 (OPCOLUMN -> unique .)
    null            reduce using rule 83 (OPCOLUMN -> unique .)
    unique          reduce using rule 83 (OPCOLUMN -> unique .)
    references      reduce using rule 83 (OPCOLUMN -> unique .)
    check           reduce using rule 83 (OPCOLUMN -> unique .)
    default         reduce using rule 83 (OPCOLUMN -> unique .)
    parc            reduce using rule 83 (OPCOLUMN -> unique .)
    coma            reduce using rule 83 (OPCOLUMN -> unique .)


state 421

    (80) OPCOLUMN -> not . null

    null            shift and go to state 470


state 422

    (82) OPCOLUMN -> null .

    constraint      reduce using rule 82 (OPCOLUMN -> null .)
    not             reduce using rule 82 (OPCOLUMN -> null .)
    primary         reduce using rule 82 (OPCOLUMN -> null .)
    null            reduce using rule 82 (OPCOLUMN -> null .)
    unique          reduce using rule 82 (OPCOLUMN -> null .)
    references      reduce using rule 82 (OPCOLUMN -> null .)
    check           reduce using rule 82 (OPCOLUMN -> null .)
    default         reduce using rule 82 (OPCOLUMN -> null .)
    parc            reduce using rule 82 (OPCOLUMN -> null .)
    coma            reduce using rule 82 (OPCOLUMN -> null .)


state 423

    (81) OPCOLUMN -> primary . key

    key             shift and go to state 471


state 424

    (84) OPCOLUMN -> references . id

    id              shift and go to state 472


state 425

    (86) OPCOLUMN -> check . para CONDCHECK parc

    para            shift and go to state 473


state 426

    (87) OPCOLUMN -> default . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 474
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 427

    (69) CREATETABLE -> create table id para LDEF parc ptcoma .

    use             reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    select          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 69 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 428

    (70) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 475


state 429

    (99) HERENCIA -> inherits . para LEXP parc

    para            shift and go to state 476


state 430

    (71) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 71 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 71 (LDEF -> LDEF coma COLDEF .)


state 431

    (74) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 74 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 74 (COLDEF -> constraint id OPCONST .)


state 432

    (88) OPCONST -> primary key para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 477
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 433

    (89) OPCONST -> foreign key para . LEXP parc references id para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 478
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 434

    (90) OPCONST -> check para CONDCHECK . parc

    parc            shift and go to state 479


state 435

    (92) CONDCHECK -> EXP . mayor EXP
    (93) CONDCHECK -> EXP . menor EXP
    (94) CONDCHECK -> EXP . mayor_igual EXP
    (95) CONDCHECK -> EXP . menor_igual EXP
    (96) CONDCHECK -> EXP . igual EXP
    (97) CONDCHECK -> EXP . diferente1 EXP
    (98) CONDCHECK -> EXP . diferente2 EXP
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    mayor           shift and go to state 480
    menor           shift and go to state 481
    mayor_igual     shift and go to state 482
    menor_igual     shift and go to state 483
    igual           shift and go to state 484
    diferente1      shift and go to state 485
    diferente2      shift and go to state 486
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116


state 436

    (91) OPCONST -> unique para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 487
    coma            shift and go to state 89


state 437

    (100) CREATETYPE -> create type id as enum para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 488
    coma            shift and go to state 89


state 438

    (53) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 53 (CREATEDB -> create RD if not exist id OPCCDB .)


state 439

    (130) LCAMPOS -> LCAMPOS id igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    where           reduce using rule 130 (LCAMPOS -> LCAMPOS id igual EXP .)
    id              reduce using rule 130 (LCAMPOS -> LCAMPOS id igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    cadena          shift and go to state 110
    in              shift and go to state 116

  ! id              [ shift and go to state 112 ]


state 440

    (42) OP -> alter column id set . not null
    (43) OP -> alter column id set . null

    not             shift and go to state 489
    null            shift and go to state 490


state 441

    (48) OP -> alter column id type . TIPO
    (137) TIPO -> . decimal para LEXP parc
    (138) TIPO -> . numeric para LEXP parc
    (139) TIPO -> . varchar para int parc
    (140) TIPO -> . timestamp para int parc
    (141) TIPO -> . character para int parc
    (142) TIPO -> . interval para int parc
    (143) TIPO -> . char para int parc
    (144) TIPO -> . time para int parc
    (145) TIPO -> . character varying para int parc
    (146) TIPO -> . interval cadena
    (147) TIPO -> . timestamp para int parc without time zone
    (148) TIPO -> . timestamp para int parc with time zone
    (149) TIPO -> . time para int parc without time zone
    (150) TIPO -> . time para int parc with time zone
    (151) TIPO -> . interval para int parc cadena
    (152) TIPO -> . smallint
    (153) TIPO -> . integer
    (154) TIPO -> . bigint
    (155) TIPO -> . real
    (156) TIPO -> . double precision
    (157) TIPO -> . money
    (158) TIPO -> . text
    (159) TIPO -> . timestamp
    (160) TIPO -> . date
    (161) TIPO -> . time
    (162) TIPO -> . interval
    (163) TIPO -> . boolean
    (164) TIPO -> . decimal
    (165) TIPO -> . numeric
    (166) TIPO -> . id
    (167) TIPO -> . timestamp without time zone
    (168) TIPO -> . timestamp with time zone
    (169) TIPO -> . time without time zone
    (170) TIPO -> . time with time zone

    decimal         shift and go to state 191
    numeric         shift and go to state 192
    varchar         shift and go to state 193
    timestamp       shift and go to state 194
    character       shift and go to state 195
    interval        shift and go to state 196
    char            shift and go to state 197
    time            shift and go to state 198
    smallint        shift and go to state 199
    integer         shift and go to state 200
    bigint          shift and go to state 201
    real            shift and go to state 202
    double          shift and go to state 203
    money           shift and go to state 204
    text            shift and go to state 205
    date            shift and go to state 206
    boolean         shift and go to state 207
    id              shift and go to state 208

    TIPO                           shift and go to state 491

state 442

    (35) OP -> add column id TIPO .

    coma            reduce using rule 35 (OP -> add column id TIPO .)
    ptcoma          reduce using rule 35 (OP -> add column id TIPO .)


state 443

    (36) OP -> add check para CONDCHECK . parc

    parc            shift and go to state 492


state 444

    (37) OP -> add constraint id check . para CONDCHECK parc

    para            shift and go to state 493


state 445

    (38) OP -> add constraint id unique . para LEXP parc

    para            shift and go to state 494


state 446

    (41) OP -> add constraint id foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 495


state 447

    (39) OP -> add unique para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 496
    coma            shift and go to state 89


state 448

    (40) OP -> add foreign key para . LEXP parc references id para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 497
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 449

    (47) OP -> rename column id to . id

    id              shift and go to state 498


state 450

    (23) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 23 (INSERT -> insert into id values para LEXP parc .)


state 451

    (24) INSERT -> insert into id para LEXP parc values . para LEXP parc

    para            shift and go to state 499


state 452

    (101) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (115) COMBINING -> . union LEXP
    (116) COMBINING -> . union all LEXP
    (117) COMBINING -> . intersect LEXP
    (118) COMBINING -> . except LEXP
    (119) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 333
    intersect       shift and go to state 334
    except          shift and go to state 335
    r_from          reduce using rule 119 (COMBINING -> .)
    coma            reduce using rule 119 (COMBINING -> .)
    where           reduce using rule 119 (COMBINING -> .)
    group           reduce using rule 119 (COMBINING -> .)
    having          reduce using rule 119 (COMBINING -> .)
    order           reduce using rule 119 (COMBINING -> .)
    limit           reduce using rule 119 (COMBINING -> .)
    offset          reduce using rule 119 (COMBINING -> .)
    ptcoma          reduce using rule 119 (COMBINING -> .)
    mas             reduce using rule 119 (COMBINING -> .)
    menos           reduce using rule 119 (COMBINING -> .)
    multiplicacion  reduce using rule 119 (COMBINING -> .)
    division        reduce using rule 119 (COMBINING -> .)
    modulo          reduce using rule 119 (COMBINING -> .)
    elevado         reduce using rule 119 (COMBINING -> .)
    and             reduce using rule 119 (COMBINING -> .)
    or              reduce using rule 119 (COMBINING -> .)
    mayor           reduce using rule 119 (COMBINING -> .)
    menor           reduce using rule 119 (COMBINING -> .)
    mayor_igual     reduce using rule 119 (COMBINING -> .)
    menor_igual     reduce using rule 119 (COMBINING -> .)
    igual           reduce using rule 119 (COMBINING -> .)
    diferente1      reduce using rule 119 (COMBINING -> .)
    diferente2      reduce using rule 119 (COMBINING -> .)
    between         reduce using rule 119 (COMBINING -> .)
    is              reduce using rule 119 (COMBINING -> .)
    not             reduce using rule 119 (COMBINING -> .)
    as              reduce using rule 119 (COMBINING -> .)
    like            reduce using rule 119 (COMBINING -> .)
    isnull          reduce using rule 119 (COMBINING -> .)
    notnull         reduce using rule 119 (COMBINING -> .)
    cadenaString    reduce using rule 119 (COMBINING -> .)
    id              reduce using rule 119 (COMBINING -> .)
    cadena          reduce using rule 119 (COMBINING -> .)
    in              reduce using rule 119 (COMBINING -> .)
    parc            reduce using rule 119 (COMBINING -> .)
    then            reduce using rule 119 (COMBINING -> .)
    end             reduce using rule 119 (COMBINING -> .)
    else            reduce using rule 119 (COMBINING -> .)
    when            reduce using rule 119 (COMBINING -> .)
    constraint      reduce using rule 119 (COMBINING -> .)
    primary         reduce using rule 119 (COMBINING -> .)
    null            reduce using rule 119 (COMBINING -> .)
    unique          reduce using rule 119 (COMBINING -> .)
    references      reduce using rule 119 (COMBINING -> .)
    check           reduce using rule 119 (COMBINING -> .)
    default         reduce using rule 119 (COMBINING -> .)
    asc             reduce using rule 119 (COMBINING -> .)
    desc            reduce using rule 119 (COMBINING -> .)

  ! union           [ reduce using rule 119 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 119 (COMBINING -> .) ]
  ! except          [ reduce using rule 119 (COMBINING -> .) ]

    COMBINING                      shift and go to state 500

state 453

    (102) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (124) ORDER -> . order by LEXP ORD
    (125) ORDER -> . order by LEXP
    (126) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 394
    r_from          reduce using rule 126 (ORDER -> .)
    coma            reduce using rule 126 (ORDER -> .)
    where           reduce using rule 126 (ORDER -> .)
    group           reduce using rule 126 (ORDER -> .)
    having          reduce using rule 126 (ORDER -> .)
    union           reduce using rule 126 (ORDER -> .)
    intersect       reduce using rule 126 (ORDER -> .)
    except          reduce using rule 126 (ORDER -> .)
    limit           reduce using rule 126 (ORDER -> .)
    offset          reduce using rule 126 (ORDER -> .)
    ptcoma          reduce using rule 126 (ORDER -> .)
    mas             reduce using rule 126 (ORDER -> .)
    menos           reduce using rule 126 (ORDER -> .)
    multiplicacion  reduce using rule 126 (ORDER -> .)
    division        reduce using rule 126 (ORDER -> .)
    modulo          reduce using rule 126 (ORDER -> .)
    elevado         reduce using rule 126 (ORDER -> .)
    and             reduce using rule 126 (ORDER -> .)
    or              reduce using rule 126 (ORDER -> .)
    mayor           reduce using rule 126 (ORDER -> .)
    menor           reduce using rule 126 (ORDER -> .)
    mayor_igual     reduce using rule 126 (ORDER -> .)
    menor_igual     reduce using rule 126 (ORDER -> .)
    igual           reduce using rule 126 (ORDER -> .)
    diferente1      reduce using rule 126 (ORDER -> .)
    diferente2      reduce using rule 126 (ORDER -> .)
    between         reduce using rule 126 (ORDER -> .)
    is              reduce using rule 126 (ORDER -> .)
    not             reduce using rule 126 (ORDER -> .)
    as              reduce using rule 126 (ORDER -> .)
    like            reduce using rule 126 (ORDER -> .)
    isnull          reduce using rule 126 (ORDER -> .)
    notnull         reduce using rule 126 (ORDER -> .)
    cadenaString    reduce using rule 126 (ORDER -> .)
    id              reduce using rule 126 (ORDER -> .)
    cadena          reduce using rule 126 (ORDER -> .)
    in              reduce using rule 126 (ORDER -> .)
    parc            reduce using rule 126 (ORDER -> .)
    then            reduce using rule 126 (ORDER -> .)
    end             reduce using rule 126 (ORDER -> .)
    else            reduce using rule 126 (ORDER -> .)
    when            reduce using rule 126 (ORDER -> .)
    constraint      reduce using rule 126 (ORDER -> .)
    primary         reduce using rule 126 (ORDER -> .)
    null            reduce using rule 126 (ORDER -> .)
    unique          reduce using rule 126 (ORDER -> .)
    references      reduce using rule 126 (ORDER -> .)
    check           reduce using rule 126 (ORDER -> .)
    default         reduce using rule 126 (ORDER -> .)
    asc             reduce using rule 126 (ORDER -> .)
    desc            reduce using rule 126 (ORDER -> .)

  ! order           [ reduce using rule 126 (ORDER -> .) ]

    ORDER                          shift and go to state 501

state 454

    (103) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 103 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 455

    (104) LIMIT -> limit . int
    (105) LIMIT -> limit . all
    (107) LIMIT -> limit . int offset int
    (109) LIMIT -> limit . all offset int

    int             shift and go to state 502
    all             shift and go to state 503


state 456

    (106) LIMIT -> offset . int
    (108) LIMIT -> offset . int limit int
    (110) LIMIT -> offset . int limit all

    int             shift and go to state 504


state 457

    (124) ORDER -> order by . LEXP ORD
    (125) ORDER -> order by . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 505
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 458

    (116) COMBINING -> union all LEXP .
    (135) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 116 (COMBINING -> union all LEXP .)
    where           reduce using rule 116 (COMBINING -> union all LEXP .)
    group           reduce using rule 116 (COMBINING -> union all LEXP .)
    having          reduce using rule 116 (COMBINING -> union all LEXP .)
    union           reduce using rule 116 (COMBINING -> union all LEXP .)
    intersect       reduce using rule 116 (COMBINING -> union all LEXP .)
    except          reduce using rule 116 (COMBINING -> union all LEXP .)
    order           reduce using rule 116 (COMBINING -> union all LEXP .)
    limit           reduce using rule 116 (COMBINING -> union all LEXP .)
    offset          reduce using rule 116 (COMBINING -> union all LEXP .)
    ptcoma          reduce using rule 116 (COMBINING -> union all LEXP .)
    mas             reduce using rule 116 (COMBINING -> union all LEXP .)
    menos           reduce using rule 116 (COMBINING -> union all LEXP .)
    multiplicacion  reduce using rule 116 (COMBINING -> union all LEXP .)
    division        reduce using rule 116 (COMBINING -> union all LEXP .)
    modulo          reduce using rule 116 (COMBINING -> union all LEXP .)
    elevado         reduce using rule 116 (COMBINING -> union all LEXP .)
    and             reduce using rule 116 (COMBINING -> union all LEXP .)
    or              reduce using rule 116 (COMBINING -> union all LEXP .)
    mayor           reduce using rule 116 (COMBINING -> union all LEXP .)
    menor           reduce using rule 116 (COMBINING -> union all LEXP .)
    mayor_igual     reduce using rule 116 (COMBINING -> union all LEXP .)
    menor_igual     reduce using rule 116 (COMBINING -> union all LEXP .)
    igual           reduce using rule 116 (COMBINING -> union all LEXP .)
    diferente1      reduce using rule 116 (COMBINING -> union all LEXP .)
    diferente2      reduce using rule 116 (COMBINING -> union all LEXP .)
    between         reduce using rule 116 (COMBINING -> union all LEXP .)
    is              reduce using rule 116 (COMBINING -> union all LEXP .)
    not             reduce using rule 116 (COMBINING -> union all LEXP .)
    as              reduce using rule 116 (COMBINING -> union all LEXP .)
    like            reduce using rule 116 (COMBINING -> union all LEXP .)
    isnull          reduce using rule 116 (COMBINING -> union all LEXP .)
    notnull         reduce using rule 116 (COMBINING -> union all LEXP .)
    cadenaString    reduce using rule 116 (COMBINING -> union all LEXP .)
    id              reduce using rule 116 (COMBINING -> union all LEXP .)
    cadena          reduce using rule 116 (COMBINING -> union all LEXP .)
    in              reduce using rule 116 (COMBINING -> union all LEXP .)
    parc            reduce using rule 116 (COMBINING -> union all LEXP .)
    then            reduce using rule 116 (COMBINING -> union all LEXP .)
    end             reduce using rule 116 (COMBINING -> union all LEXP .)
    else            reduce using rule 116 (COMBINING -> union all LEXP .)
    when            reduce using rule 116 (COMBINING -> union all LEXP .)
    constraint      reduce using rule 116 (COMBINING -> union all LEXP .)
    primary         reduce using rule 116 (COMBINING -> union all LEXP .)
    null            reduce using rule 116 (COMBINING -> union all LEXP .)
    unique          reduce using rule 116 (COMBINING -> union all LEXP .)
    references      reduce using rule 116 (COMBINING -> union all LEXP .)
    check           reduce using rule 116 (COMBINING -> union all LEXP .)
    default         reduce using rule 116 (COMBINING -> union all LEXP .)
    asc             reduce using rule 116 (COMBINING -> union all LEXP .)
    desc            reduce using rule 116 (COMBINING -> union all LEXP .)
    coma            shift and go to state 89

  ! coma            [ reduce using rule 116 (COMBINING -> union all LEXP .) ]


state 459

    (227) EXP -> all para . LEXP parc
    (223) EXP -> para . EXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 213
    EXP                            shift and go to state 506
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 460

    (134) EXIST -> not exist para SELECT parc .

    r_from          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    coma            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    where           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    group           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    having          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    union           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    intersect       reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    except          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    order           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    limit           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    offset          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    ptcoma          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    mas             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    menos           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    multiplicacion  reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    division        reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    modulo          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    elevado         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    and             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    or              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    mayor           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    menor           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    mayor_igual     reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    menor_igual     reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    igual           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    diferente1      reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    diferente2      reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    between         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    is              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    not             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    as              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    like            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    isnull          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    notnull         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    cadenaString    reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    id              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    cadena          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    in              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    parc            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    then            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    end             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    else            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    when            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    constraint      reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    primary         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    null            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    unique          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    references      reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    check           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    default         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    asc             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    desc            reduce using rule 134 (EXIST -> not exist para SELECT parc .)


state 461

    (147) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 507


state 462

    (148) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 508


state 463

    (145) TIPO -> character varying para int parc .

    r_from          reduce using rule 145 (TIPO -> character varying para int parc .)
    coma            reduce using rule 145 (TIPO -> character varying para int parc .)
    where           reduce using rule 145 (TIPO -> character varying para int parc .)
    group           reduce using rule 145 (TIPO -> character varying para int parc .)
    having          reduce using rule 145 (TIPO -> character varying para int parc .)
    union           reduce using rule 145 (TIPO -> character varying para int parc .)
    intersect       reduce using rule 145 (TIPO -> character varying para int parc .)
    except          reduce using rule 145 (TIPO -> character varying para int parc .)
    order           reduce using rule 145 (TIPO -> character varying para int parc .)
    limit           reduce using rule 145 (TIPO -> character varying para int parc .)
    offset          reduce using rule 145 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 145 (TIPO -> character varying para int parc .)
    mas             reduce using rule 145 (TIPO -> character varying para int parc .)
    menos           reduce using rule 145 (TIPO -> character varying para int parc .)
    multiplicacion  reduce using rule 145 (TIPO -> character varying para int parc .)
    division        reduce using rule 145 (TIPO -> character varying para int parc .)
    modulo          reduce using rule 145 (TIPO -> character varying para int parc .)
    elevado         reduce using rule 145 (TIPO -> character varying para int parc .)
    and             reduce using rule 145 (TIPO -> character varying para int parc .)
    or              reduce using rule 145 (TIPO -> character varying para int parc .)
    mayor           reduce using rule 145 (TIPO -> character varying para int parc .)
    menor           reduce using rule 145 (TIPO -> character varying para int parc .)
    mayor_igual     reduce using rule 145 (TIPO -> character varying para int parc .)
    menor_igual     reduce using rule 145 (TIPO -> character varying para int parc .)
    igual           reduce using rule 145 (TIPO -> character varying para int parc .)
    diferente1      reduce using rule 145 (TIPO -> character varying para int parc .)
    diferente2      reduce using rule 145 (TIPO -> character varying para int parc .)
    between         reduce using rule 145 (TIPO -> character varying para int parc .)
    is              reduce using rule 145 (TIPO -> character varying para int parc .)
    not             reduce using rule 145 (TIPO -> character varying para int parc .)
    as              reduce using rule 145 (TIPO -> character varying para int parc .)
    like            reduce using rule 145 (TIPO -> character varying para int parc .)
    isnull          reduce using rule 145 (TIPO -> character varying para int parc .)
    notnull         reduce using rule 145 (TIPO -> character varying para int parc .)
    cadenaString    reduce using rule 145 (TIPO -> character varying para int parc .)
    id              reduce using rule 145 (TIPO -> character varying para int parc .)
    cadena          reduce using rule 145 (TIPO -> character varying para int parc .)
    in              reduce using rule 145 (TIPO -> character varying para int parc .)
    parc            reduce using rule 145 (TIPO -> character varying para int parc .)
    then            reduce using rule 145 (TIPO -> character varying para int parc .)
    end             reduce using rule 145 (TIPO -> character varying para int parc .)
    else            reduce using rule 145 (TIPO -> character varying para int parc .)
    when            reduce using rule 145 (TIPO -> character varying para int parc .)
    constraint      reduce using rule 145 (TIPO -> character varying para int parc .)
    primary         reduce using rule 145 (TIPO -> character varying para int parc .)
    null            reduce using rule 145 (TIPO -> character varying para int parc .)
    unique          reduce using rule 145 (TIPO -> character varying para int parc .)
    references      reduce using rule 145 (TIPO -> character varying para int parc .)
    check           reduce using rule 145 (TIPO -> character varying para int parc .)
    default         reduce using rule 145 (TIPO -> character varying para int parc .)
    asc             reduce using rule 145 (TIPO -> character varying para int parc .)
    desc            reduce using rule 145 (TIPO -> character varying para int parc .)


state 464

    (151) TIPO -> interval para int parc cadena .

    r_from          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 151 (TIPO -> interval para int parc cadena .)
    where           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    group           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    having          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    union           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    intersect       reduce using rule 151 (TIPO -> interval para int parc cadena .)
    except          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    order           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    limit           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    offset          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    mas             reduce using rule 151 (TIPO -> interval para int parc cadena .)
    menos           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    multiplicacion  reduce using rule 151 (TIPO -> interval para int parc cadena .)
    division        reduce using rule 151 (TIPO -> interval para int parc cadena .)
    modulo          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    elevado         reduce using rule 151 (TIPO -> interval para int parc cadena .)
    and             reduce using rule 151 (TIPO -> interval para int parc cadena .)
    or              reduce using rule 151 (TIPO -> interval para int parc cadena .)
    mayor           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    menor           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    mayor_igual     reduce using rule 151 (TIPO -> interval para int parc cadena .)
    menor_igual     reduce using rule 151 (TIPO -> interval para int parc cadena .)
    igual           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    diferente1      reduce using rule 151 (TIPO -> interval para int parc cadena .)
    diferente2      reduce using rule 151 (TIPO -> interval para int parc cadena .)
    between         reduce using rule 151 (TIPO -> interval para int parc cadena .)
    is              reduce using rule 151 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 151 (TIPO -> interval para int parc cadena .)
    as              reduce using rule 151 (TIPO -> interval para int parc cadena .)
    like            reduce using rule 151 (TIPO -> interval para int parc cadena .)
    isnull          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    notnull         reduce using rule 151 (TIPO -> interval para int parc cadena .)
    cadenaString    reduce using rule 151 (TIPO -> interval para int parc cadena .)
    id              reduce using rule 151 (TIPO -> interval para int parc cadena .)
    cadena          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    in              reduce using rule 151 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 151 (TIPO -> interval para int parc cadena .)
    then            reduce using rule 151 (TIPO -> interval para int parc cadena .)
    end             reduce using rule 151 (TIPO -> interval para int parc cadena .)
    else            reduce using rule 151 (TIPO -> interval para int parc cadena .)
    when            reduce using rule 151 (TIPO -> interval para int parc cadena .)
    constraint      reduce using rule 151 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 151 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 151 (TIPO -> interval para int parc cadena .)
    unique          reduce using rule 151 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 151 (TIPO -> interval para int parc cadena .)
    check           reduce using rule 151 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 151 (TIPO -> interval para int parc cadena .)
    asc             reduce using rule 151 (TIPO -> interval para int parc cadena .)
    desc            reduce using rule 151 (TIPO -> interval para int parc cadena .)


state 465

    (149) TIPO -> time para int parc without . time zone

    time            shift and go to state 509


state 466

    (150) TIPO -> time para int parc with . time zone

    time            shift and go to state 510


state 467

    (229) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    like            reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadenaString    reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadena          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    end             reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    else            reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    unique          reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    check           reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 229 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 468

    (77) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    unique          reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    check           reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 77 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 469

    (79) OPCOLUMN -> constraint id . unique
    (85) OPCOLUMN -> constraint id . check para CONDCHECK parc

    unique          shift and go to state 511
    check           shift and go to state 512


state 470

    (80) OPCOLUMN -> not null .

    constraint      reduce using rule 80 (OPCOLUMN -> not null .)
    not             reduce using rule 80 (OPCOLUMN -> not null .)
    primary         reduce using rule 80 (OPCOLUMN -> not null .)
    null            reduce using rule 80 (OPCOLUMN -> not null .)
    unique          reduce using rule 80 (OPCOLUMN -> not null .)
    references      reduce using rule 80 (OPCOLUMN -> not null .)
    check           reduce using rule 80 (OPCOLUMN -> not null .)
    default         reduce using rule 80 (OPCOLUMN -> not null .)
    parc            reduce using rule 80 (OPCOLUMN -> not null .)
    coma            reduce using rule 80 (OPCOLUMN -> not null .)


state 471

    (81) OPCOLUMN -> primary key .

    constraint      reduce using rule 81 (OPCOLUMN -> primary key .)
    not             reduce using rule 81 (OPCOLUMN -> primary key .)
    primary         reduce using rule 81 (OPCOLUMN -> primary key .)
    null            reduce using rule 81 (OPCOLUMN -> primary key .)
    unique          reduce using rule 81 (OPCOLUMN -> primary key .)
    references      reduce using rule 81 (OPCOLUMN -> primary key .)
    check           reduce using rule 81 (OPCOLUMN -> primary key .)
    default         reduce using rule 81 (OPCOLUMN -> primary key .)
    parc            reduce using rule 81 (OPCOLUMN -> primary key .)
    coma            reduce using rule 81 (OPCOLUMN -> primary key .)


state 472

    (84) OPCOLUMN -> references id .

    constraint      reduce using rule 84 (OPCOLUMN -> references id .)
    not             reduce using rule 84 (OPCOLUMN -> references id .)
    primary         reduce using rule 84 (OPCOLUMN -> references id .)
    null            reduce using rule 84 (OPCOLUMN -> references id .)
    unique          reduce using rule 84 (OPCOLUMN -> references id .)
    references      reduce using rule 84 (OPCOLUMN -> references id .)
    check           reduce using rule 84 (OPCOLUMN -> references id .)
    default         reduce using rule 84 (OPCOLUMN -> references id .)
    parc            reduce using rule 84 (OPCOLUMN -> references id .)
    coma            reduce using rule 84 (OPCOLUMN -> references id .)


state 473

    (86) OPCOLUMN -> check para . CONDCHECK parc
    (92) CONDCHECK -> . EXP mayor EXP
    (93) CONDCHECK -> . EXP menor EXP
    (94) CONDCHECK -> . EXP mayor_igual EXP
    (95) CONDCHECK -> . EXP menor_igual EXP
    (96) CONDCHECK -> . EXP igual EXP
    (97) CONDCHECK -> . EXP diferente1 EXP
    (98) CONDCHECK -> . EXP diferente2 EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 513
    EXP                            shift and go to state 435
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 474

    (87) OPCOLUMN -> default EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 87 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 87 (OPCOLUMN -> default EXP .)
    null            reduce using rule 87 (OPCOLUMN -> default EXP .)
    unique          reduce using rule 87 (OPCOLUMN -> default EXP .)
    references      reduce using rule 87 (OPCOLUMN -> default EXP .)
    check           reduce using rule 87 (OPCOLUMN -> default EXP .)
    default         reduce using rule 87 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 87 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 87 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116

  ! not             [ reduce using rule 87 (OPCOLUMN -> default EXP .) ]


state 475

    (70) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    use             reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    select          reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 70 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 476

    (99) HERENCIA -> inherits para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 514
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 477

    (88) OPCONST -> primary key para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 515
    coma            shift and go to state 89


state 478

    (89) OPCONST -> foreign key para LEXP . parc references id para LEXP parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 516
    coma            shift and go to state 89


state 479

    (90) OPCONST -> check para CONDCHECK parc .

    parc            reduce using rule 90 (OPCONST -> check para CONDCHECK parc .)
    coma            reduce using rule 90 (OPCONST -> check para CONDCHECK parc .)


state 480

    (92) CONDCHECK -> EXP mayor . EXP
    (185) EXP -> EXP mayor . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 517
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 481

    (93) CONDCHECK -> EXP menor . EXP
    (186) EXP -> EXP menor . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 518
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 482

    (94) CONDCHECK -> EXP mayor_igual . EXP
    (187) EXP -> EXP mayor_igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 519
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 483

    (95) CONDCHECK -> EXP menor_igual . EXP
    (188) EXP -> EXP menor_igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 520
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 484

    (96) CONDCHECK -> EXP igual . EXP
    (189) EXP -> EXP igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 521
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 485

    (97) CONDCHECK -> EXP diferente1 . EXP
    (190) EXP -> EXP diferente1 . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 522
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 486

    (98) CONDCHECK -> EXP diferente2 . EXP
    (191) EXP -> EXP diferente2 . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 523
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 487

    (91) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 91 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 91 (OPCONST -> unique para LEXP parc .)


state 488

    (100) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 100 (CREATETYPE -> create type id as enum para LEXP parc .)


state 489

    (42) OP -> alter column id set not . null

    null            shift and go to state 524


state 490

    (43) OP -> alter column id set null .

    coma            reduce using rule 43 (OP -> alter column id set null .)
    ptcoma          reduce using rule 43 (OP -> alter column id set null .)


state 491

    (48) OP -> alter column id type TIPO .

    coma            reduce using rule 48 (OP -> alter column id type TIPO .)
    ptcoma          reduce using rule 48 (OP -> alter column id type TIPO .)


state 492

    (36) OP -> add check para CONDCHECK parc .

    coma            reduce using rule 36 (OP -> add check para CONDCHECK parc .)
    ptcoma          reduce using rule 36 (OP -> add check para CONDCHECK parc .)


state 493

    (37) OP -> add constraint id check para . CONDCHECK parc
    (92) CONDCHECK -> . EXP mayor EXP
    (93) CONDCHECK -> . EXP menor EXP
    (94) CONDCHECK -> . EXP mayor_igual EXP
    (95) CONDCHECK -> . EXP menor_igual EXP
    (96) CONDCHECK -> . EXP igual EXP
    (97) CONDCHECK -> . EXP diferente1 EXP
    (98) CONDCHECK -> . EXP diferente2 EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 525
    EXP                            shift and go to state 435
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 494

    (38) OP -> add constraint id unique para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 526
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 495

    (41) OP -> add constraint id foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 527


state 496

    (39) OP -> add unique para LEXP parc .

    coma            reduce using rule 39 (OP -> add unique para LEXP parc .)
    ptcoma          reduce using rule 39 (OP -> add unique para LEXP parc .)


state 497

    (40) OP -> add foreign key para LEXP . parc references id para LEXP parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 528
    coma            shift and go to state 89


state 498

    (47) OP -> rename column id to id .

    coma            reduce using rule 47 (OP -> rename column id to id .)
    ptcoma          reduce using rule 47 (OP -> rename column id to id .)


state 499

    (24) INSERT -> insert into id para LEXP parc values para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 529
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 500

    (101) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (124) ORDER -> . order by LEXP ORD
    (125) ORDER -> . order by LEXP
    (126) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 394
    r_from          reduce using rule 126 (ORDER -> .)
    coma            reduce using rule 126 (ORDER -> .)
    where           reduce using rule 126 (ORDER -> .)
    group           reduce using rule 126 (ORDER -> .)
    having          reduce using rule 126 (ORDER -> .)
    union           reduce using rule 126 (ORDER -> .)
    intersect       reduce using rule 126 (ORDER -> .)
    except          reduce using rule 126 (ORDER -> .)
    limit           reduce using rule 126 (ORDER -> .)
    offset          reduce using rule 126 (ORDER -> .)
    ptcoma          reduce using rule 126 (ORDER -> .)
    mas             reduce using rule 126 (ORDER -> .)
    menos           reduce using rule 126 (ORDER -> .)
    multiplicacion  reduce using rule 126 (ORDER -> .)
    division        reduce using rule 126 (ORDER -> .)
    modulo          reduce using rule 126 (ORDER -> .)
    elevado         reduce using rule 126 (ORDER -> .)
    and             reduce using rule 126 (ORDER -> .)
    or              reduce using rule 126 (ORDER -> .)
    mayor           reduce using rule 126 (ORDER -> .)
    menor           reduce using rule 126 (ORDER -> .)
    mayor_igual     reduce using rule 126 (ORDER -> .)
    menor_igual     reduce using rule 126 (ORDER -> .)
    igual           reduce using rule 126 (ORDER -> .)
    diferente1      reduce using rule 126 (ORDER -> .)
    diferente2      reduce using rule 126 (ORDER -> .)
    between         reduce using rule 126 (ORDER -> .)
    is              reduce using rule 126 (ORDER -> .)
    not             reduce using rule 126 (ORDER -> .)
    as              reduce using rule 126 (ORDER -> .)
    like            reduce using rule 126 (ORDER -> .)
    isnull          reduce using rule 126 (ORDER -> .)
    notnull         reduce using rule 126 (ORDER -> .)
    cadenaString    reduce using rule 126 (ORDER -> .)
    id              reduce using rule 126 (ORDER -> .)
    cadena          reduce using rule 126 (ORDER -> .)
    in              reduce using rule 126 (ORDER -> .)
    parc            reduce using rule 126 (ORDER -> .)
    then            reduce using rule 126 (ORDER -> .)
    end             reduce using rule 126 (ORDER -> .)
    else            reduce using rule 126 (ORDER -> .)
    when            reduce using rule 126 (ORDER -> .)
    constraint      reduce using rule 126 (ORDER -> .)
    primary         reduce using rule 126 (ORDER -> .)
    null            reduce using rule 126 (ORDER -> .)
    unique          reduce using rule 126 (ORDER -> .)
    references      reduce using rule 126 (ORDER -> .)
    check           reduce using rule 126 (ORDER -> .)
    default         reduce using rule 126 (ORDER -> .)
    asc             reduce using rule 126 (ORDER -> .)
    desc            reduce using rule 126 (ORDER -> .)

  ! order           [ reduce using rule 126 (ORDER -> .) ]

    ORDER                          shift and go to state 530

state 501

    (102) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (104) LIMIT -> . limit int
    (105) LIMIT -> . limit all
    (106) LIMIT -> . offset int
    (107) LIMIT -> . limit int offset int
    (108) LIMIT -> . offset int limit int
    (109) LIMIT -> . limit all offset int
    (110) LIMIT -> . offset int limit all
    (111) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 455
    offset          shift and go to state 456
    ptcoma          reduce using rule 111 (LIMIT -> .)
    r_from          reduce using rule 111 (LIMIT -> .)
    coma            reduce using rule 111 (LIMIT -> .)
    where           reduce using rule 111 (LIMIT -> .)
    group           reduce using rule 111 (LIMIT -> .)
    having          reduce using rule 111 (LIMIT -> .)
    union           reduce using rule 111 (LIMIT -> .)
    intersect       reduce using rule 111 (LIMIT -> .)
    except          reduce using rule 111 (LIMIT -> .)
    order           reduce using rule 111 (LIMIT -> .)
    mas             reduce using rule 111 (LIMIT -> .)
    menos           reduce using rule 111 (LIMIT -> .)
    multiplicacion  reduce using rule 111 (LIMIT -> .)
    division        reduce using rule 111 (LIMIT -> .)
    modulo          reduce using rule 111 (LIMIT -> .)
    elevado         reduce using rule 111 (LIMIT -> .)
    and             reduce using rule 111 (LIMIT -> .)
    or              reduce using rule 111 (LIMIT -> .)
    mayor           reduce using rule 111 (LIMIT -> .)
    menor           reduce using rule 111 (LIMIT -> .)
    mayor_igual     reduce using rule 111 (LIMIT -> .)
    menor_igual     reduce using rule 111 (LIMIT -> .)
    igual           reduce using rule 111 (LIMIT -> .)
    diferente1      reduce using rule 111 (LIMIT -> .)
    diferente2      reduce using rule 111 (LIMIT -> .)
    between         reduce using rule 111 (LIMIT -> .)
    is              reduce using rule 111 (LIMIT -> .)
    not             reduce using rule 111 (LIMIT -> .)
    as              reduce using rule 111 (LIMIT -> .)
    like            reduce using rule 111 (LIMIT -> .)
    isnull          reduce using rule 111 (LIMIT -> .)
    notnull         reduce using rule 111 (LIMIT -> .)
    cadenaString    reduce using rule 111 (LIMIT -> .)
    id              reduce using rule 111 (LIMIT -> .)
    cadena          reduce using rule 111 (LIMIT -> .)
    in              reduce using rule 111 (LIMIT -> .)
    parc            reduce using rule 111 (LIMIT -> .)
    then            reduce using rule 111 (LIMIT -> .)
    end             reduce using rule 111 (LIMIT -> .)
    else            reduce using rule 111 (LIMIT -> .)
    when            reduce using rule 111 (LIMIT -> .)
    constraint      reduce using rule 111 (LIMIT -> .)
    primary         reduce using rule 111 (LIMIT -> .)
    null            reduce using rule 111 (LIMIT -> .)
    unique          reduce using rule 111 (LIMIT -> .)
    references      reduce using rule 111 (LIMIT -> .)
    check           reduce using rule 111 (LIMIT -> .)
    default         reduce using rule 111 (LIMIT -> .)
    asc             reduce using rule 111 (LIMIT -> .)
    desc            reduce using rule 111 (LIMIT -> .)

  ! limit           [ reduce using rule 111 (LIMIT -> .) ]
  ! offset          [ reduce using rule 111 (LIMIT -> .) ]

    LIMIT                          shift and go to state 531

state 502

    (104) LIMIT -> limit int .
    (107) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 104 (LIMIT -> limit int .)
    r_from          reduce using rule 104 (LIMIT -> limit int .)
    coma            reduce using rule 104 (LIMIT -> limit int .)
    where           reduce using rule 104 (LIMIT -> limit int .)
    group           reduce using rule 104 (LIMIT -> limit int .)
    having          reduce using rule 104 (LIMIT -> limit int .)
    union           reduce using rule 104 (LIMIT -> limit int .)
    intersect       reduce using rule 104 (LIMIT -> limit int .)
    except          reduce using rule 104 (LIMIT -> limit int .)
    order           reduce using rule 104 (LIMIT -> limit int .)
    limit           reduce using rule 104 (LIMIT -> limit int .)
    mas             reduce using rule 104 (LIMIT -> limit int .)
    menos           reduce using rule 104 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 104 (LIMIT -> limit int .)
    division        reduce using rule 104 (LIMIT -> limit int .)
    modulo          reduce using rule 104 (LIMIT -> limit int .)
    elevado         reduce using rule 104 (LIMIT -> limit int .)
    and             reduce using rule 104 (LIMIT -> limit int .)
    or              reduce using rule 104 (LIMIT -> limit int .)
    mayor           reduce using rule 104 (LIMIT -> limit int .)
    menor           reduce using rule 104 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 104 (LIMIT -> limit int .)
    menor_igual     reduce using rule 104 (LIMIT -> limit int .)
    igual           reduce using rule 104 (LIMIT -> limit int .)
    diferente1      reduce using rule 104 (LIMIT -> limit int .)
    diferente2      reduce using rule 104 (LIMIT -> limit int .)
    between         reduce using rule 104 (LIMIT -> limit int .)
    is              reduce using rule 104 (LIMIT -> limit int .)
    not             reduce using rule 104 (LIMIT -> limit int .)
    as              reduce using rule 104 (LIMIT -> limit int .)
    like            reduce using rule 104 (LIMIT -> limit int .)
    isnull          reduce using rule 104 (LIMIT -> limit int .)
    notnull         reduce using rule 104 (LIMIT -> limit int .)
    cadenaString    reduce using rule 104 (LIMIT -> limit int .)
    id              reduce using rule 104 (LIMIT -> limit int .)
    cadena          reduce using rule 104 (LIMIT -> limit int .)
    in              reduce using rule 104 (LIMIT -> limit int .)
    parc            reduce using rule 104 (LIMIT -> limit int .)
    then            reduce using rule 104 (LIMIT -> limit int .)
    end             reduce using rule 104 (LIMIT -> limit int .)
    else            reduce using rule 104 (LIMIT -> limit int .)
    when            reduce using rule 104 (LIMIT -> limit int .)
    constraint      reduce using rule 104 (LIMIT -> limit int .)
    primary         reduce using rule 104 (LIMIT -> limit int .)
    null            reduce using rule 104 (LIMIT -> limit int .)
    unique          reduce using rule 104 (LIMIT -> limit int .)
    references      reduce using rule 104 (LIMIT -> limit int .)
    check           reduce using rule 104 (LIMIT -> limit int .)
    default         reduce using rule 104 (LIMIT -> limit int .)
    asc             reduce using rule 104 (LIMIT -> limit int .)
    desc            reduce using rule 104 (LIMIT -> limit int .)
    offset          shift and go to state 532

  ! offset          [ reduce using rule 104 (LIMIT -> limit int .) ]


state 503

    (105) LIMIT -> limit all .
    (109) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 105 (LIMIT -> limit all .)
    r_from          reduce using rule 105 (LIMIT -> limit all .)
    coma            reduce using rule 105 (LIMIT -> limit all .)
    where           reduce using rule 105 (LIMIT -> limit all .)
    group           reduce using rule 105 (LIMIT -> limit all .)
    having          reduce using rule 105 (LIMIT -> limit all .)
    union           reduce using rule 105 (LIMIT -> limit all .)
    intersect       reduce using rule 105 (LIMIT -> limit all .)
    except          reduce using rule 105 (LIMIT -> limit all .)
    order           reduce using rule 105 (LIMIT -> limit all .)
    limit           reduce using rule 105 (LIMIT -> limit all .)
    mas             reduce using rule 105 (LIMIT -> limit all .)
    menos           reduce using rule 105 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 105 (LIMIT -> limit all .)
    division        reduce using rule 105 (LIMIT -> limit all .)
    modulo          reduce using rule 105 (LIMIT -> limit all .)
    elevado         reduce using rule 105 (LIMIT -> limit all .)
    and             reduce using rule 105 (LIMIT -> limit all .)
    or              reduce using rule 105 (LIMIT -> limit all .)
    mayor           reduce using rule 105 (LIMIT -> limit all .)
    menor           reduce using rule 105 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 105 (LIMIT -> limit all .)
    menor_igual     reduce using rule 105 (LIMIT -> limit all .)
    igual           reduce using rule 105 (LIMIT -> limit all .)
    diferente1      reduce using rule 105 (LIMIT -> limit all .)
    diferente2      reduce using rule 105 (LIMIT -> limit all .)
    between         reduce using rule 105 (LIMIT -> limit all .)
    is              reduce using rule 105 (LIMIT -> limit all .)
    not             reduce using rule 105 (LIMIT -> limit all .)
    as              reduce using rule 105 (LIMIT -> limit all .)
    like            reduce using rule 105 (LIMIT -> limit all .)
    isnull          reduce using rule 105 (LIMIT -> limit all .)
    notnull         reduce using rule 105 (LIMIT -> limit all .)
    cadenaString    reduce using rule 105 (LIMIT -> limit all .)
    id              reduce using rule 105 (LIMIT -> limit all .)
    cadena          reduce using rule 105 (LIMIT -> limit all .)
    in              reduce using rule 105 (LIMIT -> limit all .)
    parc            reduce using rule 105 (LIMIT -> limit all .)
    then            reduce using rule 105 (LIMIT -> limit all .)
    end             reduce using rule 105 (LIMIT -> limit all .)
    else            reduce using rule 105 (LIMIT -> limit all .)
    when            reduce using rule 105 (LIMIT -> limit all .)
    constraint      reduce using rule 105 (LIMIT -> limit all .)
    primary         reduce using rule 105 (LIMIT -> limit all .)
    null            reduce using rule 105 (LIMIT -> limit all .)
    unique          reduce using rule 105 (LIMIT -> limit all .)
    references      reduce using rule 105 (LIMIT -> limit all .)
    check           reduce using rule 105 (LIMIT -> limit all .)
    default         reduce using rule 105 (LIMIT -> limit all .)
    asc             reduce using rule 105 (LIMIT -> limit all .)
    desc            reduce using rule 105 (LIMIT -> limit all .)
    offset          shift and go to state 533

  ! offset          [ reduce using rule 105 (LIMIT -> limit all .) ]


state 504

    (106) LIMIT -> offset int .
    (108) LIMIT -> offset int . limit int
    (110) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    ptcoma          reduce using rule 106 (LIMIT -> offset int .)
    r_from          reduce using rule 106 (LIMIT -> offset int .)
    coma            reduce using rule 106 (LIMIT -> offset int .)
    where           reduce using rule 106 (LIMIT -> offset int .)
    group           reduce using rule 106 (LIMIT -> offset int .)
    having          reduce using rule 106 (LIMIT -> offset int .)
    union           reduce using rule 106 (LIMIT -> offset int .)
    intersect       reduce using rule 106 (LIMIT -> offset int .)
    except          reduce using rule 106 (LIMIT -> offset int .)
    order           reduce using rule 106 (LIMIT -> offset int .)
    offset          reduce using rule 106 (LIMIT -> offset int .)
    mas             reduce using rule 106 (LIMIT -> offset int .)
    menos           reduce using rule 106 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 106 (LIMIT -> offset int .)
    division        reduce using rule 106 (LIMIT -> offset int .)
    modulo          reduce using rule 106 (LIMIT -> offset int .)
    elevado         reduce using rule 106 (LIMIT -> offset int .)
    and             reduce using rule 106 (LIMIT -> offset int .)
    or              reduce using rule 106 (LIMIT -> offset int .)
    mayor           reduce using rule 106 (LIMIT -> offset int .)
    menor           reduce using rule 106 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 106 (LIMIT -> offset int .)
    menor_igual     reduce using rule 106 (LIMIT -> offset int .)
    igual           reduce using rule 106 (LIMIT -> offset int .)
    diferente1      reduce using rule 106 (LIMIT -> offset int .)
    diferente2      reduce using rule 106 (LIMIT -> offset int .)
    between         reduce using rule 106 (LIMIT -> offset int .)
    is              reduce using rule 106 (LIMIT -> offset int .)
    not             reduce using rule 106 (LIMIT -> offset int .)
    as              reduce using rule 106 (LIMIT -> offset int .)
    like            reduce using rule 106 (LIMIT -> offset int .)
    isnull          reduce using rule 106 (LIMIT -> offset int .)
    notnull         reduce using rule 106 (LIMIT -> offset int .)
    cadenaString    reduce using rule 106 (LIMIT -> offset int .)
    id              reduce using rule 106 (LIMIT -> offset int .)
    cadena          reduce using rule 106 (LIMIT -> offset int .)
    in              reduce using rule 106 (LIMIT -> offset int .)
    parc            reduce using rule 106 (LIMIT -> offset int .)
    then            reduce using rule 106 (LIMIT -> offset int .)
    end             reduce using rule 106 (LIMIT -> offset int .)
    else            reduce using rule 106 (LIMIT -> offset int .)
    when            reduce using rule 106 (LIMIT -> offset int .)
    constraint      reduce using rule 106 (LIMIT -> offset int .)
    primary         reduce using rule 106 (LIMIT -> offset int .)
    null            reduce using rule 106 (LIMIT -> offset int .)
    unique          reduce using rule 106 (LIMIT -> offset int .)
    references      reduce using rule 106 (LIMIT -> offset int .)
    check           reduce using rule 106 (LIMIT -> offset int .)
    default         reduce using rule 106 (LIMIT -> offset int .)
    asc             reduce using rule 106 (LIMIT -> offset int .)
    desc            reduce using rule 106 (LIMIT -> offset int .)
    limit           shift and go to state 534

  ! limit           [ reduce using rule 106 (LIMIT -> offset int .) ]


state 505

    (124) ORDER -> order by LEXP . ORD
    (125) ORDER -> order by LEXP .
    (135) LEXP -> LEXP . coma EXP
    (127) ORD -> . asc
    (128) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 125 (ORDER -> order by LEXP .)
    where           reduce using rule 125 (ORDER -> order by LEXP .)
    group           reduce using rule 125 (ORDER -> order by LEXP .)
    having          reduce using rule 125 (ORDER -> order by LEXP .)
    union           reduce using rule 125 (ORDER -> order by LEXP .)
    intersect       reduce using rule 125 (ORDER -> order by LEXP .)
    except          reduce using rule 125 (ORDER -> order by LEXP .)
    order           reduce using rule 125 (ORDER -> order by LEXP .)
    limit           reduce using rule 125 (ORDER -> order by LEXP .)
    offset          reduce using rule 125 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 125 (ORDER -> order by LEXP .)
    mas             reduce using rule 125 (ORDER -> order by LEXP .)
    menos           reduce using rule 125 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 125 (ORDER -> order by LEXP .)
    division        reduce using rule 125 (ORDER -> order by LEXP .)
    modulo          reduce using rule 125 (ORDER -> order by LEXP .)
    elevado         reduce using rule 125 (ORDER -> order by LEXP .)
    and             reduce using rule 125 (ORDER -> order by LEXP .)
    or              reduce using rule 125 (ORDER -> order by LEXP .)
    mayor           reduce using rule 125 (ORDER -> order by LEXP .)
    menor           reduce using rule 125 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 125 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 125 (ORDER -> order by LEXP .)
    igual           reduce using rule 125 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 125 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 125 (ORDER -> order by LEXP .)
    between         reduce using rule 125 (ORDER -> order by LEXP .)
    is              reduce using rule 125 (ORDER -> order by LEXP .)
    not             reduce using rule 125 (ORDER -> order by LEXP .)
    as              reduce using rule 125 (ORDER -> order by LEXP .)
    like            reduce using rule 125 (ORDER -> order by LEXP .)
    isnull          reduce using rule 125 (ORDER -> order by LEXP .)
    notnull         reduce using rule 125 (ORDER -> order by LEXP .)
    cadenaString    reduce using rule 125 (ORDER -> order by LEXP .)
    id              reduce using rule 125 (ORDER -> order by LEXP .)
    cadena          reduce using rule 125 (ORDER -> order by LEXP .)
    in              reduce using rule 125 (ORDER -> order by LEXP .)
    parc            reduce using rule 125 (ORDER -> order by LEXP .)
    then            reduce using rule 125 (ORDER -> order by LEXP .)
    end             reduce using rule 125 (ORDER -> order by LEXP .)
    else            reduce using rule 125 (ORDER -> order by LEXP .)
    when            reduce using rule 125 (ORDER -> order by LEXP .)
    constraint      reduce using rule 125 (ORDER -> order by LEXP .)
    primary         reduce using rule 125 (ORDER -> order by LEXP .)
    null            reduce using rule 125 (ORDER -> order by LEXP .)
    unique          reduce using rule 125 (ORDER -> order by LEXP .)
    references      reduce using rule 125 (ORDER -> order by LEXP .)
    check           reduce using rule 125 (ORDER -> order by LEXP .)
    default         reduce using rule 125 (ORDER -> order by LEXP .)
    coma            shift and go to state 89
    asc             shift and go to state 536
    desc            shift and go to state 537

  ! coma            [ reduce using rule 125 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 125 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 125 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 535

state 506

    (223) EXP -> para EXP . parc
    (136) LEXP -> EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 211
    coma            reduce using rule 136 (LEXP -> EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    not             shift and go to state 108
    as              shift and go to state 111
    like            shift and go to state 109
    isnull          shift and go to state 114
    notnull         shift and go to state 115
    cadenaString    shift and go to state 113
    id              shift and go to state 112
    cadena          shift and go to state 110
    in              shift and go to state 116

  ! parc            [ reduce using rule 136 (LEXP -> EXP .) ]


state 507

    (147) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 538


state 508

    (148) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 539


state 509

    (149) TIPO -> time para int parc without time . zone

    zone            shift and go to state 540


state 510

    (150) TIPO -> time para int parc with time . zone

    zone            shift and go to state 541


state 511

    (79) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    unique          reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    check           reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 79 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 79 (OPCOLUMN -> constraint id unique .)


state 512

    (85) OPCOLUMN -> constraint id check . para CONDCHECK parc

    para            shift and go to state 542


state 513

    (86) OPCOLUMN -> check para CONDCHECK . parc

    parc            shift and go to state 543


state 514

    (99) HERENCIA -> inherits para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 544
    coma            shift and go to state 89


state 515

    (88) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 88 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 88 (OPCONST -> primary key para LEXP parc .)


state 516

    (89) OPCONST -> foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 545


state 517

    (92) CONDCHECK -> EXP mayor EXP .
    (185) EXP -> EXP mayor EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 92 (CONDCHECK -> EXP mayor EXP .)
    mayor           reduce using rule 185 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 185 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 185 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 185 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 185 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 185 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 185 (EXP -> EXP mayor EXP .)
    and             reduce using rule 185 (EXP -> EXP mayor EXP .)
    or              reduce using rule 185 (EXP -> EXP mayor EXP .)
    between         reduce using rule 185 (EXP -> EXP mayor EXP .)
    is              reduce using rule 185 (EXP -> EXP mayor EXP .)
    not             reduce using rule 185 (EXP -> EXP mayor EXP .)
    as              reduce using rule 185 (EXP -> EXP mayor EXP .)
    like            reduce using rule 185 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 185 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 185 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 185 (EXP -> EXP mayor EXP .)
    id              reduce using rule 185 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 185 (EXP -> EXP mayor EXP .)
    in              reduce using rule 185 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 518

    (93) CONDCHECK -> EXP menor EXP .
    (186) EXP -> EXP menor EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 93 (CONDCHECK -> EXP menor EXP .)
    mayor           reduce using rule 186 (EXP -> EXP menor EXP .)
    menor           reduce using rule 186 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 186 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 186 (EXP -> EXP menor EXP .)
    igual           reduce using rule 186 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 186 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 186 (EXP -> EXP menor EXP .)
    and             reduce using rule 186 (EXP -> EXP menor EXP .)
    or              reduce using rule 186 (EXP -> EXP menor EXP .)
    between         reduce using rule 186 (EXP -> EXP menor EXP .)
    is              reduce using rule 186 (EXP -> EXP menor EXP .)
    not             reduce using rule 186 (EXP -> EXP menor EXP .)
    as              reduce using rule 186 (EXP -> EXP menor EXP .)
    like            reduce using rule 186 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 186 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 186 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 186 (EXP -> EXP menor EXP .)
    id              reduce using rule 186 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 186 (EXP -> EXP menor EXP .)
    in              reduce using rule 186 (EXP -> EXP menor EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 519

    (94) CONDCHECK -> EXP mayor_igual EXP .
    (187) EXP -> EXP mayor_igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 94 (CONDCHECK -> EXP mayor_igual EXP .)
    mayor           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 520

    (95) CONDCHECK -> EXP menor_igual EXP .
    (188) EXP -> EXP menor_igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 95 (CONDCHECK -> EXP menor_igual EXP .)
    mayor           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 521

    (96) CONDCHECK -> EXP igual EXP .
    (189) EXP -> EXP igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 96 (CONDCHECK -> EXP igual EXP .)
    mayor           reduce using rule 189 (EXP -> EXP igual EXP .)
    menor           reduce using rule 189 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 189 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 189 (EXP -> EXP igual EXP .)
    igual           reduce using rule 189 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 189 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 189 (EXP -> EXP igual EXP .)
    and             reduce using rule 189 (EXP -> EXP igual EXP .)
    or              reduce using rule 189 (EXP -> EXP igual EXP .)
    between         reduce using rule 189 (EXP -> EXP igual EXP .)
    is              reduce using rule 189 (EXP -> EXP igual EXP .)
    not             reduce using rule 189 (EXP -> EXP igual EXP .)
    as              reduce using rule 189 (EXP -> EXP igual EXP .)
    like            reduce using rule 189 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 189 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 189 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 189 (EXP -> EXP igual EXP .)
    id              reduce using rule 189 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 189 (EXP -> EXP igual EXP .)
    in              reduce using rule 189 (EXP -> EXP igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 522

    (97) CONDCHECK -> EXP diferente1 EXP .
    (190) EXP -> EXP diferente1 EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 97 (CONDCHECK -> EXP diferente1 EXP .)
    mayor           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 523

    (98) CONDCHECK -> EXP diferente2 EXP .
    (191) EXP -> EXP diferente2 EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . between EXP
    (193) EXP -> EXP . is not null
    (194) EXP -> EXP . is not true
    (195) EXP -> EXP . is not false
    (196) EXP -> EXP . is not unknown
    (197) EXP -> EXP . not like cadena
    (198) EXP -> EXP . is null
    (199) EXP -> EXP . is true
    (200) EXP -> EXP . is unknown
    (201) EXP -> EXP . as cadena
    (202) EXP -> EXP . as id
    (203) EXP -> EXP . as cadenaString
    (204) EXP -> EXP . like cadena
    (205) EXP -> EXP . is false
    (206) EXP -> EXP . isnull
    (207) EXP -> EXP . notnull
    (208) EXP -> EXP . cadenaString
    (209) EXP -> EXP . id
    (210) EXP -> EXP . cadena
    (214) EXP -> EXP . not between EXP
    (215) EXP -> EXP . between symetric EXP
    (216) EXP -> EXP . in para LEXP parc
    (217) EXP -> EXP . not in para LEXP parc
    (218) EXP -> EXP . is not distinct r_from EXP
    (219) EXP -> EXP . is distinct r_from EXP
    (220) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 98 (CONDCHECK -> EXP diferente2 EXP .)
    mayor           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! not             [ shift and go to state 108 ]
  ! as              [ shift and go to state 111 ]
  ! like            [ shift and go to state 109 ]
  ! isnull          [ shift and go to state 114 ]
  ! notnull         [ shift and go to state 115 ]
  ! cadenaString    [ shift and go to state 113 ]
  ! id              [ shift and go to state 112 ]
  ! cadena          [ shift and go to state 110 ]
  ! in              [ shift and go to state 116 ]


state 524

    (42) OP -> alter column id set not null .

    coma            reduce using rule 42 (OP -> alter column id set not null .)
    ptcoma          reduce using rule 42 (OP -> alter column id set not null .)


state 525

    (37) OP -> add constraint id check para CONDCHECK . parc

    parc            shift and go to state 546


state 526

    (38) OP -> add constraint id unique para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 547
    coma            shift and go to state 89


state 527

    (41) OP -> add constraint id foreign key para . LEXP parc references id para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 548
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 528

    (40) OP -> add foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 549


state 529

    (24) INSERT -> insert into id para LEXP parc values para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 550
    coma            shift and go to state 89


state 530

    (101) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (104) LIMIT -> . limit int
    (105) LIMIT -> . limit all
    (106) LIMIT -> . offset int
    (107) LIMIT -> . limit int offset int
    (108) LIMIT -> . offset int limit int
    (109) LIMIT -> . limit all offset int
    (110) LIMIT -> . offset int limit all
    (111) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 455
    offset          shift and go to state 456
    ptcoma          reduce using rule 111 (LIMIT -> .)
    r_from          reduce using rule 111 (LIMIT -> .)
    coma            reduce using rule 111 (LIMIT -> .)
    where           reduce using rule 111 (LIMIT -> .)
    group           reduce using rule 111 (LIMIT -> .)
    having          reduce using rule 111 (LIMIT -> .)
    union           reduce using rule 111 (LIMIT -> .)
    intersect       reduce using rule 111 (LIMIT -> .)
    except          reduce using rule 111 (LIMIT -> .)
    order           reduce using rule 111 (LIMIT -> .)
    mas             reduce using rule 111 (LIMIT -> .)
    menos           reduce using rule 111 (LIMIT -> .)
    multiplicacion  reduce using rule 111 (LIMIT -> .)
    division        reduce using rule 111 (LIMIT -> .)
    modulo          reduce using rule 111 (LIMIT -> .)
    elevado         reduce using rule 111 (LIMIT -> .)
    and             reduce using rule 111 (LIMIT -> .)
    or              reduce using rule 111 (LIMIT -> .)
    mayor           reduce using rule 111 (LIMIT -> .)
    menor           reduce using rule 111 (LIMIT -> .)
    mayor_igual     reduce using rule 111 (LIMIT -> .)
    menor_igual     reduce using rule 111 (LIMIT -> .)
    igual           reduce using rule 111 (LIMIT -> .)
    diferente1      reduce using rule 111 (LIMIT -> .)
    diferente2      reduce using rule 111 (LIMIT -> .)
    between         reduce using rule 111 (LIMIT -> .)
    is              reduce using rule 111 (LIMIT -> .)
    not             reduce using rule 111 (LIMIT -> .)
    as              reduce using rule 111 (LIMIT -> .)
    like            reduce using rule 111 (LIMIT -> .)
    isnull          reduce using rule 111 (LIMIT -> .)
    notnull         reduce using rule 111 (LIMIT -> .)
    cadenaString    reduce using rule 111 (LIMIT -> .)
    id              reduce using rule 111 (LIMIT -> .)
    cadena          reduce using rule 111 (LIMIT -> .)
    in              reduce using rule 111 (LIMIT -> .)
    parc            reduce using rule 111 (LIMIT -> .)
    then            reduce using rule 111 (LIMIT -> .)
    end             reduce using rule 111 (LIMIT -> .)
    else            reduce using rule 111 (LIMIT -> .)
    when            reduce using rule 111 (LIMIT -> .)
    constraint      reduce using rule 111 (LIMIT -> .)
    primary         reduce using rule 111 (LIMIT -> .)
    null            reduce using rule 111 (LIMIT -> .)
    unique          reduce using rule 111 (LIMIT -> .)
    references      reduce using rule 111 (LIMIT -> .)
    check           reduce using rule 111 (LIMIT -> .)
    default         reduce using rule 111 (LIMIT -> .)
    asc             reduce using rule 111 (LIMIT -> .)
    desc            reduce using rule 111 (LIMIT -> .)

  ! limit           [ reduce using rule 111 (LIMIT -> .) ]
  ! offset          [ reduce using rule 111 (LIMIT -> .) ]

    LIMIT                          shift and go to state 551

state 531

    (102) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 102 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 532

    (107) LIMIT -> limit int offset . int

    int             shift and go to state 552


state 533

    (109) LIMIT -> limit all offset . int

    int             shift and go to state 553


state 534

    (108) LIMIT -> offset int limit . int
    (110) LIMIT -> offset int limit . all

    int             shift and go to state 554
    all             shift and go to state 555


state 535

    (124) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 124 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 124 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 124 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 124 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 124 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 124 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 124 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    like            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    cadenaString    reduce using rule 124 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    cadena          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    end             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    else            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 124 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    unique          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 124 (ORDER -> order by LEXP ORD .)
    check           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 124 (ORDER -> order by LEXP ORD .)


state 536

    (127) ORD -> asc .

    r_from          reduce using rule 127 (ORD -> asc .)
    coma            reduce using rule 127 (ORD -> asc .)
    where           reduce using rule 127 (ORD -> asc .)
    group           reduce using rule 127 (ORD -> asc .)
    having          reduce using rule 127 (ORD -> asc .)
    union           reduce using rule 127 (ORD -> asc .)
    intersect       reduce using rule 127 (ORD -> asc .)
    except          reduce using rule 127 (ORD -> asc .)
    order           reduce using rule 127 (ORD -> asc .)
    limit           reduce using rule 127 (ORD -> asc .)
    offset          reduce using rule 127 (ORD -> asc .)
    ptcoma          reduce using rule 127 (ORD -> asc .)
    mas             reduce using rule 127 (ORD -> asc .)
    menos           reduce using rule 127 (ORD -> asc .)
    multiplicacion  reduce using rule 127 (ORD -> asc .)
    division        reduce using rule 127 (ORD -> asc .)
    modulo          reduce using rule 127 (ORD -> asc .)
    elevado         reduce using rule 127 (ORD -> asc .)
    and             reduce using rule 127 (ORD -> asc .)
    or              reduce using rule 127 (ORD -> asc .)
    mayor           reduce using rule 127 (ORD -> asc .)
    menor           reduce using rule 127 (ORD -> asc .)
    mayor_igual     reduce using rule 127 (ORD -> asc .)
    menor_igual     reduce using rule 127 (ORD -> asc .)
    igual           reduce using rule 127 (ORD -> asc .)
    diferente1      reduce using rule 127 (ORD -> asc .)
    diferente2      reduce using rule 127 (ORD -> asc .)
    between         reduce using rule 127 (ORD -> asc .)
    is              reduce using rule 127 (ORD -> asc .)
    not             reduce using rule 127 (ORD -> asc .)
    as              reduce using rule 127 (ORD -> asc .)
    like            reduce using rule 127 (ORD -> asc .)
    isnull          reduce using rule 127 (ORD -> asc .)
    notnull         reduce using rule 127 (ORD -> asc .)
    cadenaString    reduce using rule 127 (ORD -> asc .)
    id              reduce using rule 127 (ORD -> asc .)
    cadena          reduce using rule 127 (ORD -> asc .)
    in              reduce using rule 127 (ORD -> asc .)
    parc            reduce using rule 127 (ORD -> asc .)
    then            reduce using rule 127 (ORD -> asc .)
    end             reduce using rule 127 (ORD -> asc .)
    else            reduce using rule 127 (ORD -> asc .)
    when            reduce using rule 127 (ORD -> asc .)
    constraint      reduce using rule 127 (ORD -> asc .)
    primary         reduce using rule 127 (ORD -> asc .)
    null            reduce using rule 127 (ORD -> asc .)
    unique          reduce using rule 127 (ORD -> asc .)
    references      reduce using rule 127 (ORD -> asc .)
    check           reduce using rule 127 (ORD -> asc .)
    default         reduce using rule 127 (ORD -> asc .)
    asc             reduce using rule 127 (ORD -> asc .)
    desc            reduce using rule 127 (ORD -> asc .)


state 537

    (128) ORD -> desc .

    r_from          reduce using rule 128 (ORD -> desc .)
    coma            reduce using rule 128 (ORD -> desc .)
    where           reduce using rule 128 (ORD -> desc .)
    group           reduce using rule 128 (ORD -> desc .)
    having          reduce using rule 128 (ORD -> desc .)
    union           reduce using rule 128 (ORD -> desc .)
    intersect       reduce using rule 128 (ORD -> desc .)
    except          reduce using rule 128 (ORD -> desc .)
    order           reduce using rule 128 (ORD -> desc .)
    limit           reduce using rule 128 (ORD -> desc .)
    offset          reduce using rule 128 (ORD -> desc .)
    ptcoma          reduce using rule 128 (ORD -> desc .)
    mas             reduce using rule 128 (ORD -> desc .)
    menos           reduce using rule 128 (ORD -> desc .)
    multiplicacion  reduce using rule 128 (ORD -> desc .)
    division        reduce using rule 128 (ORD -> desc .)
    modulo          reduce using rule 128 (ORD -> desc .)
    elevado         reduce using rule 128 (ORD -> desc .)
    and             reduce using rule 128 (ORD -> desc .)
    or              reduce using rule 128 (ORD -> desc .)
    mayor           reduce using rule 128 (ORD -> desc .)
    menor           reduce using rule 128 (ORD -> desc .)
    mayor_igual     reduce using rule 128 (ORD -> desc .)
    menor_igual     reduce using rule 128 (ORD -> desc .)
    igual           reduce using rule 128 (ORD -> desc .)
    diferente1      reduce using rule 128 (ORD -> desc .)
    diferente2      reduce using rule 128 (ORD -> desc .)
    between         reduce using rule 128 (ORD -> desc .)
    is              reduce using rule 128 (ORD -> desc .)
    not             reduce using rule 128 (ORD -> desc .)
    as              reduce using rule 128 (ORD -> desc .)
    like            reduce using rule 128 (ORD -> desc .)
    isnull          reduce using rule 128 (ORD -> desc .)
    notnull         reduce using rule 128 (ORD -> desc .)
    cadenaString    reduce using rule 128 (ORD -> desc .)
    id              reduce using rule 128 (ORD -> desc .)
    cadena          reduce using rule 128 (ORD -> desc .)
    in              reduce using rule 128 (ORD -> desc .)
    parc            reduce using rule 128 (ORD -> desc .)
    then            reduce using rule 128 (ORD -> desc .)
    end             reduce using rule 128 (ORD -> desc .)
    else            reduce using rule 128 (ORD -> desc .)
    when            reduce using rule 128 (ORD -> desc .)
    constraint      reduce using rule 128 (ORD -> desc .)
    primary         reduce using rule 128 (ORD -> desc .)
    null            reduce using rule 128 (ORD -> desc .)
    unique          reduce using rule 128 (ORD -> desc .)
    references      reduce using rule 128 (ORD -> desc .)
    check           reduce using rule 128 (ORD -> desc .)
    default         reduce using rule 128 (ORD -> desc .)
    asc             reduce using rule 128 (ORD -> desc .)
    desc            reduce using rule 128 (ORD -> desc .)


state 538

    (147) TIPO -> timestamp para int parc without time zone .

    r_from          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    where           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    group           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    having          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    union           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    intersect       reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    except          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    order           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    limit           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    offset          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    mas             reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    menos           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    multiplicacion  reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    division        reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    modulo          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    elevado         reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    and             reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    or              reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    mayor           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    menor           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    mayor_igual     reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    menor_igual     reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    igual           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    diferente1      reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    diferente2      reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    between         reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    is              reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    not             reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    as              reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    like            reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    isnull          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    notnull         reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    cadenaString    reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    id              reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    cadena          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    in              reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    then            reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    end             reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    else            reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    when            reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    constraint      reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    unique          reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    check           reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    asc             reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)
    desc            reduce using rule 147 (TIPO -> timestamp para int parc without time zone .)


state 539

    (148) TIPO -> timestamp para int parc with time zone .

    r_from          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    where           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    group           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    having          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    union           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    intersect       reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    except          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    order           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    limit           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    offset          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    mas             reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    menos           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    multiplicacion  reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    division        reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    modulo          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    elevado         reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    and             reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    or              reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    mayor           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    menor           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    mayor_igual     reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    menor_igual     reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    igual           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    diferente1      reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    diferente2      reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    between         reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    is              reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    not             reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    as              reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    like            reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    isnull          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    notnull         reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    cadenaString    reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    id              reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    cadena          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    in              reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    then            reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    end             reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    else            reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    when            reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    constraint      reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    unique          reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    check           reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    asc             reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)
    desc            reduce using rule 148 (TIPO -> timestamp para int parc with time zone .)


state 540

    (149) TIPO -> time para int parc without time zone .

    r_from          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 149 (TIPO -> time para int parc without time zone .)
    where           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    group           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    having          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    union           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    intersect       reduce using rule 149 (TIPO -> time para int parc without time zone .)
    except          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    order           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    limit           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    offset          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    mas             reduce using rule 149 (TIPO -> time para int parc without time zone .)
    menos           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    multiplicacion  reduce using rule 149 (TIPO -> time para int parc without time zone .)
    division        reduce using rule 149 (TIPO -> time para int parc without time zone .)
    modulo          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    elevado         reduce using rule 149 (TIPO -> time para int parc without time zone .)
    and             reduce using rule 149 (TIPO -> time para int parc without time zone .)
    or              reduce using rule 149 (TIPO -> time para int parc without time zone .)
    mayor           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    menor           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    mayor_igual     reduce using rule 149 (TIPO -> time para int parc without time zone .)
    menor_igual     reduce using rule 149 (TIPO -> time para int parc without time zone .)
    igual           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    diferente1      reduce using rule 149 (TIPO -> time para int parc without time zone .)
    diferente2      reduce using rule 149 (TIPO -> time para int parc without time zone .)
    between         reduce using rule 149 (TIPO -> time para int parc without time zone .)
    is              reduce using rule 149 (TIPO -> time para int parc without time zone .)
    not             reduce using rule 149 (TIPO -> time para int parc without time zone .)
    as              reduce using rule 149 (TIPO -> time para int parc without time zone .)
    like            reduce using rule 149 (TIPO -> time para int parc without time zone .)
    isnull          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    notnull         reduce using rule 149 (TIPO -> time para int parc without time zone .)
    cadenaString    reduce using rule 149 (TIPO -> time para int parc without time zone .)
    id              reduce using rule 149 (TIPO -> time para int parc without time zone .)
    cadena          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    in              reduce using rule 149 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 149 (TIPO -> time para int parc without time zone .)
    then            reduce using rule 149 (TIPO -> time para int parc without time zone .)
    end             reduce using rule 149 (TIPO -> time para int parc without time zone .)
    else            reduce using rule 149 (TIPO -> time para int parc without time zone .)
    when            reduce using rule 149 (TIPO -> time para int parc without time zone .)
    constraint      reduce using rule 149 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 149 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 149 (TIPO -> time para int parc without time zone .)
    unique          reduce using rule 149 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 149 (TIPO -> time para int parc without time zone .)
    check           reduce using rule 149 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 149 (TIPO -> time para int parc without time zone .)
    asc             reduce using rule 149 (TIPO -> time para int parc without time zone .)
    desc            reduce using rule 149 (TIPO -> time para int parc without time zone .)


state 541

    (150) TIPO -> time para int parc with time zone .

    r_from          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    where           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    group           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    having          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    union           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    intersect       reduce using rule 150 (TIPO -> time para int parc with time zone .)
    except          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    order           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    limit           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    offset          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    mas             reduce using rule 150 (TIPO -> time para int parc with time zone .)
    menos           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    multiplicacion  reduce using rule 150 (TIPO -> time para int parc with time zone .)
    division        reduce using rule 150 (TIPO -> time para int parc with time zone .)
    modulo          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    elevado         reduce using rule 150 (TIPO -> time para int parc with time zone .)
    and             reduce using rule 150 (TIPO -> time para int parc with time zone .)
    or              reduce using rule 150 (TIPO -> time para int parc with time zone .)
    mayor           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    menor           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    mayor_igual     reduce using rule 150 (TIPO -> time para int parc with time zone .)
    menor_igual     reduce using rule 150 (TIPO -> time para int parc with time zone .)
    igual           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    diferente1      reduce using rule 150 (TIPO -> time para int parc with time zone .)
    diferente2      reduce using rule 150 (TIPO -> time para int parc with time zone .)
    between         reduce using rule 150 (TIPO -> time para int parc with time zone .)
    is              reduce using rule 150 (TIPO -> time para int parc with time zone .)
    not             reduce using rule 150 (TIPO -> time para int parc with time zone .)
    as              reduce using rule 150 (TIPO -> time para int parc with time zone .)
    like            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    isnull          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    notnull         reduce using rule 150 (TIPO -> time para int parc with time zone .)
    cadenaString    reduce using rule 150 (TIPO -> time para int parc with time zone .)
    id              reduce using rule 150 (TIPO -> time para int parc with time zone .)
    cadena          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    in              reduce using rule 150 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    then            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    end             reduce using rule 150 (TIPO -> time para int parc with time zone .)
    else            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    when            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    constraint      reduce using rule 150 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 150 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    unique          reduce using rule 150 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 150 (TIPO -> time para int parc with time zone .)
    check           reduce using rule 150 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 150 (TIPO -> time para int parc with time zone .)
    asc             reduce using rule 150 (TIPO -> time para int parc with time zone .)
    desc            reduce using rule 150 (TIPO -> time para int parc with time zone .)


state 542

    (85) OPCOLUMN -> constraint id check para . CONDCHECK parc
    (92) CONDCHECK -> . EXP mayor EXP
    (93) CONDCHECK -> . EXP menor EXP
    (94) CONDCHECK -> . EXP mayor_igual EXP
    (95) CONDCHECK -> . EXP menor_igual EXP
    (96) CONDCHECK -> . EXP igual EXP
    (97) CONDCHECK -> . EXP diferente1 EXP
    (98) CONDCHECK -> . EXP diferente2 EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 556
    EXP                            shift and go to state 435
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 543

    (86) OPCOLUMN -> check para CONDCHECK parc .

    constraint      reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    not             reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    primary         reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    null            reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    unique          reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    references      reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    check           reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    default         reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    parc            reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)
    coma            reduce using rule 86 (OPCOLUMN -> check para CONDCHECK parc .)


state 544

    (99) HERENCIA -> inherits para LEXP parc .

    ptcoma          reduce using rule 99 (HERENCIA -> inherits para LEXP parc .)


state 545

    (89) OPCONST -> foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 557


state 546

    (37) OP -> add constraint id check para CONDCHECK parc .

    coma            reduce using rule 37 (OP -> add constraint id check para CONDCHECK parc .)
    ptcoma          reduce using rule 37 (OP -> add constraint id check para CONDCHECK parc .)


state 547

    (38) OP -> add constraint id unique para LEXP parc .

    coma            reduce using rule 38 (OP -> add constraint id unique para LEXP parc .)
    ptcoma          reduce using rule 38 (OP -> add constraint id unique para LEXP parc .)


state 548

    (41) OP -> add constraint id foreign key para LEXP . parc references id para LEXP parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 558
    coma            shift and go to state 89


state 549

    (40) OP -> add foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 559


state 550

    (24) INSERT -> insert into id para LEXP parc values para LEXP parc .

    ptcoma          reduce using rule 24 (INSERT -> insert into id para LEXP parc values para LEXP parc .)


state 551

    (101) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 101 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 552

    (107) LIMIT -> limit int offset int .

    ptcoma          reduce using rule 107 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 107 (LIMIT -> limit int offset int .)
    coma            reduce using rule 107 (LIMIT -> limit int offset int .)
    where           reduce using rule 107 (LIMIT -> limit int offset int .)
    group           reduce using rule 107 (LIMIT -> limit int offset int .)
    having          reduce using rule 107 (LIMIT -> limit int offset int .)
    union           reduce using rule 107 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 107 (LIMIT -> limit int offset int .)
    except          reduce using rule 107 (LIMIT -> limit int offset int .)
    order           reduce using rule 107 (LIMIT -> limit int offset int .)
    limit           reduce using rule 107 (LIMIT -> limit int offset int .)
    offset          reduce using rule 107 (LIMIT -> limit int offset int .)
    mas             reduce using rule 107 (LIMIT -> limit int offset int .)
    menos           reduce using rule 107 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 107 (LIMIT -> limit int offset int .)
    division        reduce using rule 107 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 107 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 107 (LIMIT -> limit int offset int .)
    and             reduce using rule 107 (LIMIT -> limit int offset int .)
    or              reduce using rule 107 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 107 (LIMIT -> limit int offset int .)
    menor           reduce using rule 107 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 107 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 107 (LIMIT -> limit int offset int .)
    igual           reduce using rule 107 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 107 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 107 (LIMIT -> limit int offset int .)
    between         reduce using rule 107 (LIMIT -> limit int offset int .)
    is              reduce using rule 107 (LIMIT -> limit int offset int .)
    not             reduce using rule 107 (LIMIT -> limit int offset int .)
    as              reduce using rule 107 (LIMIT -> limit int offset int .)
    like            reduce using rule 107 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 107 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 107 (LIMIT -> limit int offset int .)
    cadenaString    reduce using rule 107 (LIMIT -> limit int offset int .)
    id              reduce using rule 107 (LIMIT -> limit int offset int .)
    cadena          reduce using rule 107 (LIMIT -> limit int offset int .)
    in              reduce using rule 107 (LIMIT -> limit int offset int .)
    parc            reduce using rule 107 (LIMIT -> limit int offset int .)
    then            reduce using rule 107 (LIMIT -> limit int offset int .)
    end             reduce using rule 107 (LIMIT -> limit int offset int .)
    else            reduce using rule 107 (LIMIT -> limit int offset int .)
    when            reduce using rule 107 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 107 (LIMIT -> limit int offset int .)
    primary         reduce using rule 107 (LIMIT -> limit int offset int .)
    null            reduce using rule 107 (LIMIT -> limit int offset int .)
    unique          reduce using rule 107 (LIMIT -> limit int offset int .)
    references      reduce using rule 107 (LIMIT -> limit int offset int .)
    check           reduce using rule 107 (LIMIT -> limit int offset int .)
    default         reduce using rule 107 (LIMIT -> limit int offset int .)
    asc             reduce using rule 107 (LIMIT -> limit int offset int .)
    desc            reduce using rule 107 (LIMIT -> limit int offset int .)


state 553

    (109) LIMIT -> limit all offset int .

    ptcoma          reduce using rule 109 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 109 (LIMIT -> limit all offset int .)
    coma            reduce using rule 109 (LIMIT -> limit all offset int .)
    where           reduce using rule 109 (LIMIT -> limit all offset int .)
    group           reduce using rule 109 (LIMIT -> limit all offset int .)
    having          reduce using rule 109 (LIMIT -> limit all offset int .)
    union           reduce using rule 109 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 109 (LIMIT -> limit all offset int .)
    except          reduce using rule 109 (LIMIT -> limit all offset int .)
    order           reduce using rule 109 (LIMIT -> limit all offset int .)
    limit           reduce using rule 109 (LIMIT -> limit all offset int .)
    offset          reduce using rule 109 (LIMIT -> limit all offset int .)
    mas             reduce using rule 109 (LIMIT -> limit all offset int .)
    menos           reduce using rule 109 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 109 (LIMIT -> limit all offset int .)
    division        reduce using rule 109 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 109 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 109 (LIMIT -> limit all offset int .)
    and             reduce using rule 109 (LIMIT -> limit all offset int .)
    or              reduce using rule 109 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 109 (LIMIT -> limit all offset int .)
    menor           reduce using rule 109 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 109 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 109 (LIMIT -> limit all offset int .)
    igual           reduce using rule 109 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 109 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 109 (LIMIT -> limit all offset int .)
    between         reduce using rule 109 (LIMIT -> limit all offset int .)
    is              reduce using rule 109 (LIMIT -> limit all offset int .)
    not             reduce using rule 109 (LIMIT -> limit all offset int .)
    as              reduce using rule 109 (LIMIT -> limit all offset int .)
    like            reduce using rule 109 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 109 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 109 (LIMIT -> limit all offset int .)
    cadenaString    reduce using rule 109 (LIMIT -> limit all offset int .)
    id              reduce using rule 109 (LIMIT -> limit all offset int .)
    cadena          reduce using rule 109 (LIMIT -> limit all offset int .)
    in              reduce using rule 109 (LIMIT -> limit all offset int .)
    parc            reduce using rule 109 (LIMIT -> limit all offset int .)
    then            reduce using rule 109 (LIMIT -> limit all offset int .)
    end             reduce using rule 109 (LIMIT -> limit all offset int .)
    else            reduce using rule 109 (LIMIT -> limit all offset int .)
    when            reduce using rule 109 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 109 (LIMIT -> limit all offset int .)
    primary         reduce using rule 109 (LIMIT -> limit all offset int .)
    null            reduce using rule 109 (LIMIT -> limit all offset int .)
    unique          reduce using rule 109 (LIMIT -> limit all offset int .)
    references      reduce using rule 109 (LIMIT -> limit all offset int .)
    check           reduce using rule 109 (LIMIT -> limit all offset int .)
    default         reduce using rule 109 (LIMIT -> limit all offset int .)
    asc             reduce using rule 109 (LIMIT -> limit all offset int .)
    desc            reduce using rule 109 (LIMIT -> limit all offset int .)


state 554

    (108) LIMIT -> offset int limit int .

    ptcoma          reduce using rule 108 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 108 (LIMIT -> offset int limit int .)
    coma            reduce using rule 108 (LIMIT -> offset int limit int .)
    where           reduce using rule 108 (LIMIT -> offset int limit int .)
    group           reduce using rule 108 (LIMIT -> offset int limit int .)
    having          reduce using rule 108 (LIMIT -> offset int limit int .)
    union           reduce using rule 108 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 108 (LIMIT -> offset int limit int .)
    except          reduce using rule 108 (LIMIT -> offset int limit int .)
    order           reduce using rule 108 (LIMIT -> offset int limit int .)
    limit           reduce using rule 108 (LIMIT -> offset int limit int .)
    offset          reduce using rule 108 (LIMIT -> offset int limit int .)
    mas             reduce using rule 108 (LIMIT -> offset int limit int .)
    menos           reduce using rule 108 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 108 (LIMIT -> offset int limit int .)
    division        reduce using rule 108 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 108 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 108 (LIMIT -> offset int limit int .)
    and             reduce using rule 108 (LIMIT -> offset int limit int .)
    or              reduce using rule 108 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 108 (LIMIT -> offset int limit int .)
    menor           reduce using rule 108 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 108 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 108 (LIMIT -> offset int limit int .)
    igual           reduce using rule 108 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 108 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 108 (LIMIT -> offset int limit int .)
    between         reduce using rule 108 (LIMIT -> offset int limit int .)
    is              reduce using rule 108 (LIMIT -> offset int limit int .)
    not             reduce using rule 108 (LIMIT -> offset int limit int .)
    as              reduce using rule 108 (LIMIT -> offset int limit int .)
    like            reduce using rule 108 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 108 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 108 (LIMIT -> offset int limit int .)
    cadenaString    reduce using rule 108 (LIMIT -> offset int limit int .)
    id              reduce using rule 108 (LIMIT -> offset int limit int .)
    cadena          reduce using rule 108 (LIMIT -> offset int limit int .)
    in              reduce using rule 108 (LIMIT -> offset int limit int .)
    parc            reduce using rule 108 (LIMIT -> offset int limit int .)
    then            reduce using rule 108 (LIMIT -> offset int limit int .)
    end             reduce using rule 108 (LIMIT -> offset int limit int .)
    else            reduce using rule 108 (LIMIT -> offset int limit int .)
    when            reduce using rule 108 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 108 (LIMIT -> offset int limit int .)
    primary         reduce using rule 108 (LIMIT -> offset int limit int .)
    null            reduce using rule 108 (LIMIT -> offset int limit int .)
    unique          reduce using rule 108 (LIMIT -> offset int limit int .)
    references      reduce using rule 108 (LIMIT -> offset int limit int .)
    check           reduce using rule 108 (LIMIT -> offset int limit int .)
    default         reduce using rule 108 (LIMIT -> offset int limit int .)
    asc             reduce using rule 108 (LIMIT -> offset int limit int .)
    desc            reduce using rule 108 (LIMIT -> offset int limit int .)


state 555

    (110) LIMIT -> offset int limit all .

    ptcoma          reduce using rule 110 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 110 (LIMIT -> offset int limit all .)
    coma            reduce using rule 110 (LIMIT -> offset int limit all .)
    where           reduce using rule 110 (LIMIT -> offset int limit all .)
    group           reduce using rule 110 (LIMIT -> offset int limit all .)
    having          reduce using rule 110 (LIMIT -> offset int limit all .)
    union           reduce using rule 110 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 110 (LIMIT -> offset int limit all .)
    except          reduce using rule 110 (LIMIT -> offset int limit all .)
    order           reduce using rule 110 (LIMIT -> offset int limit all .)
    limit           reduce using rule 110 (LIMIT -> offset int limit all .)
    offset          reduce using rule 110 (LIMIT -> offset int limit all .)
    mas             reduce using rule 110 (LIMIT -> offset int limit all .)
    menos           reduce using rule 110 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 110 (LIMIT -> offset int limit all .)
    division        reduce using rule 110 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 110 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 110 (LIMIT -> offset int limit all .)
    and             reduce using rule 110 (LIMIT -> offset int limit all .)
    or              reduce using rule 110 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 110 (LIMIT -> offset int limit all .)
    menor           reduce using rule 110 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 110 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 110 (LIMIT -> offset int limit all .)
    igual           reduce using rule 110 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 110 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 110 (LIMIT -> offset int limit all .)
    between         reduce using rule 110 (LIMIT -> offset int limit all .)
    is              reduce using rule 110 (LIMIT -> offset int limit all .)
    not             reduce using rule 110 (LIMIT -> offset int limit all .)
    as              reduce using rule 110 (LIMIT -> offset int limit all .)
    like            reduce using rule 110 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 110 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 110 (LIMIT -> offset int limit all .)
    cadenaString    reduce using rule 110 (LIMIT -> offset int limit all .)
    id              reduce using rule 110 (LIMIT -> offset int limit all .)
    cadena          reduce using rule 110 (LIMIT -> offset int limit all .)
    in              reduce using rule 110 (LIMIT -> offset int limit all .)
    parc            reduce using rule 110 (LIMIT -> offset int limit all .)
    then            reduce using rule 110 (LIMIT -> offset int limit all .)
    end             reduce using rule 110 (LIMIT -> offset int limit all .)
    else            reduce using rule 110 (LIMIT -> offset int limit all .)
    when            reduce using rule 110 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 110 (LIMIT -> offset int limit all .)
    primary         reduce using rule 110 (LIMIT -> offset int limit all .)
    null            reduce using rule 110 (LIMIT -> offset int limit all .)
    unique          reduce using rule 110 (LIMIT -> offset int limit all .)
    references      reduce using rule 110 (LIMIT -> offset int limit all .)
    check           reduce using rule 110 (LIMIT -> offset int limit all .)
    default         reduce using rule 110 (LIMIT -> offset int limit all .)
    asc             reduce using rule 110 (LIMIT -> offset int limit all .)
    desc            reduce using rule 110 (LIMIT -> offset int limit all .)


state 556

    (85) OPCOLUMN -> constraint id check para CONDCHECK . parc

    parc            shift and go to state 560


state 557

    (89) OPCONST -> foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 561


state 558

    (41) OP -> add constraint id foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 562


state 559

    (40) OP -> add foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 563


state 560

    (85) OPCOLUMN -> constraint id check para CONDCHECK parc .

    constraint      reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    not             reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    primary         reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    null            reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    unique          reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    references      reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    check           reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    default         reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    parc            reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    coma            reduce using rule 85 (OPCOLUMN -> constraint id check para CONDCHECK parc .)


state 561

    (89) OPCONST -> foreign key para LEXP parc references id para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 564
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 562

    (41) OP -> add constraint id foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 565


state 563

    (40) OP -> add foreign key para LEXP parc references id para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 566
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 564

    (89) OPCONST -> foreign key para LEXP parc references id para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 567
    coma            shift and go to state 89


state 565

    (41) OP -> add constraint id foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 568


state 566

    (40) OP -> add foreign key para LEXP parc references id para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 569
    coma            shift and go to state 89


state 567

    (89) OPCONST -> foreign key para LEXP parc references id para LEXP parc .

    parc            reduce using rule 89 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)
    coma            reduce using rule 89 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)


state 568

    (41) OP -> add constraint id foreign key para LEXP parc references id para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP between EXP
    (193) EXP -> . EXP is not null
    (194) EXP -> . EXP is not true
    (195) EXP -> . EXP is not false
    (196) EXP -> . EXP is not unknown
    (197) EXP -> . EXP not like cadena
    (198) EXP -> . EXP is null
    (199) EXP -> . EXP is true
    (200) EXP -> . EXP is unknown
    (201) EXP -> . EXP as cadena
    (202) EXP -> . EXP as id
    (203) EXP -> . EXP as cadenaString
    (204) EXP -> . EXP like cadena
    (205) EXP -> . EXP is false
    (206) EXP -> . EXP isnull
    (207) EXP -> . EXP notnull
    (208) EXP -> . EXP cadenaString
    (209) EXP -> . EXP id
    (210) EXP -> . EXP cadena
    (211) EXP -> . mas EXP
    (212) EXP -> . menos EXP
    (213) EXP -> . not EXP
    (214) EXP -> . EXP not between EXP
    (215) EXP -> . EXP between symetric EXP
    (216) EXP -> . EXP in para LEXP parc
    (217) EXP -> . EXP not in para LEXP parc
    (218) EXP -> . EXP is not distinct r_from EXP
    (219) EXP -> . EXP is distinct r_from EXP
    (220) EXP -> . EXP not between symetric EXP
    (221) EXP -> . SELECT
    (222) EXP -> . CASE
    (223) EXP -> . para EXP parc
    (224) EXP -> . id para parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . any para LEXP parc
    (227) EXP -> . all para LEXP parc
    (228) EXP -> . some para LEXP parc
    (229) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (230) EXP -> . cadena as TIPO
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . idPunto
    (241) EXP -> . default
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (101) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (102) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (103) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    cadena          shift and go to state 48
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadenaString    shift and go to state 50
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    idPunto         shift and go to state 61
    default         shift and go to state 62
    current_time    shift and go to state 63
    current_date    shift and go to state 64
    timestamp       shift and go to state 58
    interval        shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 570
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 569

    (40) OP -> add foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 40 (OP -> add foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 40 (OP -> add foreign key para LEXP parc references id para LEXP parc .)


state 570

    (41) OP -> add constraint id foreign key para LEXP parc references id para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 571
    coma            shift and go to state 89


state 571

    (41) OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 41 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 41 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for r_from in state 39 resolved as shift
WARNING: shift/reduce conflict for coma in state 39 resolved as shift
WARNING: shift/reduce conflict for where in state 39 resolved as shift
WARNING: shift/reduce conflict for mas in state 40 resolved as shift
WARNING: shift/reduce conflict for menos in state 40 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 40 resolved as shift
WARNING: shift/reduce conflict for division in state 40 resolved as shift
WARNING: shift/reduce conflict for modulo in state 40 resolved as shift
WARNING: shift/reduce conflict for elevado in state 40 resolved as shift
WARNING: shift/reduce conflict for and in state 40 resolved as shift
WARNING: shift/reduce conflict for or in state 40 resolved as shift
WARNING: shift/reduce conflict for mayor in state 40 resolved as shift
WARNING: shift/reduce conflict for menor in state 40 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 40 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 40 resolved as shift
WARNING: shift/reduce conflict for igual in state 40 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 40 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 40 resolved as shift
WARNING: shift/reduce conflict for between in state 40 resolved as shift
WARNING: shift/reduce conflict for is in state 40 resolved as shift
WARNING: shift/reduce conflict for not in state 40 resolved as shift
WARNING: shift/reduce conflict for as in state 40 resolved as shift
WARNING: shift/reduce conflict for like in state 40 resolved as shift
WARNING: shift/reduce conflict for isnull in state 40 resolved as shift
WARNING: shift/reduce conflict for notnull in state 40 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 40 resolved as shift
WARNING: shift/reduce conflict for id in state 40 resolved as shift
WARNING: shift/reduce conflict for cadena in state 40 resolved as shift
WARNING: shift/reduce conflict for in in state 40 resolved as shift
WARNING: shift/reduce conflict for as in state 48 resolved as shift
WARNING: shift/reduce conflict for group in state 88 resolved as shift
WARNING: shift/reduce conflict for coma in state 151 resolved as shift
WARNING: shift/reduce conflict for where in state 151 resolved as shift
WARNING: shift/reduce conflict for having in state 152 resolved as shift
WARNING: shift/reduce conflict for mas in state 154 resolved as shift
WARNING: shift/reduce conflict for menos in state 154 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 154 resolved as shift
WARNING: shift/reduce conflict for division in state 154 resolved as shift
WARNING: shift/reduce conflict for modulo in state 154 resolved as shift
WARNING: shift/reduce conflict for elevado in state 154 resolved as shift
WARNING: shift/reduce conflict for and in state 154 resolved as shift
WARNING: shift/reduce conflict for or in state 154 resolved as shift
WARNING: shift/reduce conflict for mayor in state 154 resolved as shift
WARNING: shift/reduce conflict for menor in state 154 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 154 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 154 resolved as shift
WARNING: shift/reduce conflict for igual in state 154 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 154 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 154 resolved as shift
WARNING: shift/reduce conflict for between in state 154 resolved as shift
WARNING: shift/reduce conflict for is in state 154 resolved as shift
WARNING: shift/reduce conflict for not in state 154 resolved as shift
WARNING: shift/reduce conflict for as in state 154 resolved as shift
WARNING: shift/reduce conflict for like in state 154 resolved as shift
WARNING: shift/reduce conflict for isnull in state 154 resolved as shift
WARNING: shift/reduce conflict for notnull in state 154 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 154 resolved as shift
WARNING: shift/reduce conflict for id in state 154 resolved as shift
WARNING: shift/reduce conflict for cadena in state 154 resolved as shift
WARNING: shift/reduce conflict for in in state 154 resolved as shift
WARNING: shift/reduce conflict for mas in state 155 resolved as shift
WARNING: shift/reduce conflict for menos in state 155 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 155 resolved as shift
WARNING: shift/reduce conflict for division in state 155 resolved as shift
WARNING: shift/reduce conflict for modulo in state 155 resolved as shift
WARNING: shift/reduce conflict for elevado in state 155 resolved as shift
WARNING: shift/reduce conflict for and in state 155 resolved as shift
WARNING: shift/reduce conflict for or in state 155 resolved as shift
WARNING: shift/reduce conflict for mayor in state 155 resolved as shift
WARNING: shift/reduce conflict for menor in state 155 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 155 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 155 resolved as shift
WARNING: shift/reduce conflict for igual in state 155 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 155 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 155 resolved as shift
WARNING: shift/reduce conflict for between in state 155 resolved as shift
WARNING: shift/reduce conflict for is in state 155 resolved as shift
WARNING: shift/reduce conflict for not in state 155 resolved as shift
WARNING: shift/reduce conflict for as in state 155 resolved as shift
WARNING: shift/reduce conflict for like in state 155 resolved as shift
WARNING: shift/reduce conflict for isnull in state 155 resolved as shift
WARNING: shift/reduce conflict for notnull in state 155 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 155 resolved as shift
WARNING: shift/reduce conflict for id in state 155 resolved as shift
WARNING: shift/reduce conflict for cadena in state 155 resolved as shift
WARNING: shift/reduce conflict for in in state 155 resolved as shift
WARNING: shift/reduce conflict for cadena in state 196 resolved as shift
WARNING: shift/reduce conflict for coma in state 252 resolved as shift
WARNING: shift/reduce conflict for where in state 252 resolved as shift
WARNING: shift/reduce conflict for group in state 253 resolved as shift
WARNING: shift/reduce conflict for union in state 254 resolved as shift
WARNING: shift/reduce conflict for intersect in state 254 resolved as shift
WARNING: shift/reduce conflict for except in state 254 resolved as shift
WARNING: shift/reduce conflict for group in state 330 resolved as shift
WARNING: shift/reduce conflict for having in state 331 resolved as shift
WARNING: shift/reduce conflict for order in state 332 resolved as shift
WARNING: shift/reduce conflict for mas in state 336 resolved as shift
WARNING: shift/reduce conflict for menos in state 336 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 336 resolved as shift
WARNING: shift/reduce conflict for division in state 336 resolved as shift
WARNING: shift/reduce conflict for modulo in state 336 resolved as shift
WARNING: shift/reduce conflict for elevado in state 336 resolved as shift
WARNING: shift/reduce conflict for and in state 336 resolved as shift
WARNING: shift/reduce conflict for or in state 336 resolved as shift
WARNING: shift/reduce conflict for mayor in state 336 resolved as shift
WARNING: shift/reduce conflict for menor in state 336 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 336 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 336 resolved as shift
WARNING: shift/reduce conflict for igual in state 336 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 336 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 336 resolved as shift
WARNING: shift/reduce conflict for between in state 336 resolved as shift
WARNING: shift/reduce conflict for is in state 336 resolved as shift
WARNING: shift/reduce conflict for not in state 336 resolved as shift
WARNING: shift/reduce conflict for as in state 336 resolved as shift
WARNING: shift/reduce conflict for like in state 336 resolved as shift
WARNING: shift/reduce conflict for isnull in state 336 resolved as shift
WARNING: shift/reduce conflict for notnull in state 336 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 336 resolved as shift
WARNING: shift/reduce conflict for id in state 336 resolved as shift
WARNING: shift/reduce conflict for cadena in state 336 resolved as shift
WARNING: shift/reduce conflict for in in state 336 resolved as shift
WARNING: shift/reduce conflict for coma in state 337 resolved as shift
WARNING: shift/reduce conflict for coma in state 386 resolved as shift
WARNING: shift/reduce conflict for having in state 391 resolved as shift
WARNING: shift/reduce conflict for union in state 392 resolved as shift
WARNING: shift/reduce conflict for intersect in state 392 resolved as shift
WARNING: shift/reduce conflict for except in state 392 resolved as shift
WARNING: shift/reduce conflict for limit in state 393 resolved as shift
WARNING: shift/reduce conflict for offset in state 393 resolved as shift
WARNING: shift/reduce conflict for coma in state 395 resolved as shift
WARNING: shift/reduce conflict for coma in state 397 resolved as shift
WARNING: shift/reduce conflict for coma in state 398 resolved as shift
WARNING: shift/reduce conflict for cadena in state 411 resolved as shift
WARNING: shift/reduce conflict for union in state 452 resolved as shift
WARNING: shift/reduce conflict for intersect in state 452 resolved as shift
WARNING: shift/reduce conflict for except in state 452 resolved as shift
WARNING: shift/reduce conflict for order in state 453 resolved as shift
WARNING: shift/reduce conflict for coma in state 458 resolved as shift
WARNING: shift/reduce conflict for not in state 474 resolved as shift
WARNING: shift/reduce conflict for order in state 500 resolved as shift
WARNING: shift/reduce conflict for limit in state 501 resolved as shift
WARNING: shift/reduce conflict for offset in state 501 resolved as shift
WARNING: shift/reduce conflict for offset in state 502 resolved as shift
WARNING: shift/reduce conflict for offset in state 503 resolved as shift
WARNING: shift/reduce conflict for limit in state 504 resolved as shift
WARNING: shift/reduce conflict for coma in state 505 resolved as shift
WARNING: shift/reduce conflict for asc in state 505 resolved as shift
WARNING: shift/reduce conflict for desc in state 505 resolved as shift
WARNING: shift/reduce conflict for parc in state 506 resolved as shift
WARNING: shift/reduce conflict for limit in state 530 resolved as shift
WARNING: shift/reduce conflict for offset in state 530 resolved as shift
