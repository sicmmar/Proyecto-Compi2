Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    call

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE ptcoma
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    instruccion -> SHOW ptcoma
Rule 16    instruccion -> CREATEINDEX ptcoma
Rule 17    instruccion -> ASIGNACION ptcoma
Rule 18    instruccion -> CONDICIONIF ptcoma
Rule 19    instruccion -> PROCEDIMIENTOS
Rule 20    instruccion -> FUNCIONES
Rule 21    instruccion -> CALLPROCEDURE ptcoma
Rule 22    instruccion -> DROPFUNC ptcoma
Rule 23    instruccion -> use id ptcoma
Rule 24    instruccion -> CREATEINDEX WHERE ptcoma
Rule 25    RETURN -> return EXP
Rule 26    FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
Rule 27    FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
Rule 28    FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP
Rule 29    FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE
Rule 30    DROPFUNC -> drop function id
Rule 31    DROPFUNC -> drop function if exist id
Rule 32    RETURNP -> returns TIPO
Rule 33    CALLPROCEDURE -> execute id para LEXP parc
Rule 34    CALLPROCEDURE -> execute id para parc
Rule 35    PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
Rule 36    PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
Rule 37    PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP
Rule 38    PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE
Rule 39    LCONTENIDOP -> LCONTENIDOP CONTENIDOP
Rule 40    LCONTENIDOP -> CONTENIDOP
Rule 41    CONTENIDOP -> as dolarn LISTACONTENIDO dolarn
Rule 42    CONTENIDOP -> do dolarn LISTACONTENIDO dolarn
Rule 43    LPARAM -> LPARAM coma inout id TIPO
Rule 44    LPARAM -> LPARAM coma id TIPO
Rule 45    LPARAM -> inout id TIPO
Rule 46    LPARAM -> id TIPO
Rule 47    LENGUAJE -> language plpgsql
Rule 48    LENGUAJE -> language plpgsql ptcoma
Rule 49    BEGINEND -> begin LISTACONTENIDO end
Rule 50    CREATEINDEX -> create index id on id para LEXP parc
Rule 51    CREATEINDEX -> create unique index id on id para LEXP parc
Rule 52    CREATEINDEX -> create index id on id using hash para LEXP parc
Rule 53    CREATEINDEX -> create index id on id para id ORDEN parc
Rule 54    CREATEINDEX -> create index id on id para id id ORDEN parc
Rule 55    CREATEINDEX -> create index id on id para id id parc
Rule 56    ORDEN -> asc
Rule 57    ORDEN -> desc
Rule 58    ORDEN -> nulls first
Rule 59    ORDEN -> nulls last
Rule 60    ORDEN -> asc nulls first
Rule 61    ORDEN -> desc nulls last
Rule 62    ORDEN -> desc nulls first
Rule 63    ORDEN -> asc nulls last
Rule 64    LDEC -> LDEC DECLARACIONES
Rule 65    LDEC -> DECLARACIONES
Rule 66    DECLARACIONES -> id TIPO not null ASIG ptcoma
Rule 67    DECLARACIONES -> id TIPO ASIG ptcoma
Rule 68    DECLARACIONES -> id constant TIPO not null ASIG ptcoma
Rule 69    DECLARACIONES -> id constant TIPO ASIG ptcoma
Rule 70    ASIG -> default EXP
Rule 71    ASIG -> igual EXP
Rule 72    ASIG -> dospuntos igual EXP
Rule 73    ASIG -> <empty>
Rule 74    ASIGNACION -> id dospuntos igual EXP
Rule 75    ASIGNACION -> id igual EXP
Rule 76    CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if
Rule 77    CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if
Rule 78    CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if
Rule 79    CONDICIONIF -> if EXP then LISTACONTENIDO end if
Rule 80    LELIF -> LELIF elsif EXP then LISTACONTENIDO
Rule 81    LELIF -> elsif EXP then LISTACONTENIDO
Rule 82    ELSEF -> else LISTACONTENIDO
Rule 83    CASE -> case EXP LISTAWHEN ELSEF end case
Rule 84    CASE -> case LISTAWHEN ELSEF end case
Rule 85    CASE -> case EXP LISTAWHEN end
Rule 86    CASE -> case LISTAWHEN end case
Rule 87    LISTACONTENIDO -> LISTACONTENIDO CONTENIDO
Rule 88    LISTACONTENIDO -> CONTENIDO
Rule 89    CONTENIDO -> ASIGNACION ptcoma
Rule 90    CONTENIDO -> CONDICIONIF ptcoma
Rule 91    CONTENIDO -> RAISE ptcoma
Rule 92    CONTENIDO -> BEGINEND ptcoma
Rule 93    CONTENIDO -> CALLPROCEDURE ptcoma
Rule 94    CONTENIDO -> RETURN ptcoma
Rule 95    CONTENIDO -> INSERT ptcoma
Rule 96    CONTENIDO -> SELECT ptcoma
Rule 97    CONTENIDO -> UPDATE ptcoma
Rule 98    CONTENIDO -> DELETE ptcoma
Rule 99    CONTENIDO -> CASE ptcoma
Rule 100   CONTENIDO -> declare LDEC
Rule 101   RAISE -> raise LEVEL FORMAT
Rule 102   RAISE -> raise LEVEL EXP
Rule 103   RAISE -> raise LEVEL
Rule 104   RAISE -> raise
Rule 105   RAISE -> raise LEVEL cadena coma id
Rule 106   LEVEL -> info
Rule 107   LEVEL -> debug
Rule 108   LEVEL -> notice
Rule 109   LEVEL -> warning
Rule 110   LEVEL -> exception
Rule 111   FORMAT -> format para EXP coma LEXP parc
Rule 112   LISTAWHEN -> LISTAWHEN WHEN
Rule 113   LISTAWHEN -> WHEN
Rule 114   WHEN -> when EXP then LISTACONTENIDO
Rule 115   ELSE -> else LEXP
Rule 116   INSERT -> insert into id values para LEXP parc
Rule 117   INSERT -> insert into id para LEXP parc values para LEXP parc
Rule 118   DROP -> drop all para parc
Rule 119   DROP -> drop table id
Rule 120   DROP -> drop index id
Rule 121   DROP -> drop databases id
Rule 122   DROP -> drop databases if exist id
Rule 123   ALTER -> alter databases id RO
Rule 124   ALTER -> alter table id LOP
Rule 125   RO -> rename to id
Rule 126   RO -> owner to id
Rule 127   ALTER -> alter index id alter EXP
Rule 128   ALTER -> alter index if exist id alter EXP
Rule 129   ALTER -> alter index id alter column EXP
Rule 130   ALTER -> alter index if exist id alter column EXP
Rule 131   LOP -> LOP coma OP
Rule 132   LOP -> OP
Rule 133   OP -> add column id TIPO
Rule 134   OP -> add check para CONDCHECK parc
Rule 135   OP -> add constraint id check para CONDCHECK parc
Rule 136   OP -> add constraint id unique para LEXP parc
Rule 137   OP -> add unique para LEXP parc
Rule 138   OP -> add foreign key para LEXP parc references id para LEXP parc
Rule 139   OP -> add constraint id foreign key para LEXP parc references id para LEXP parc
Rule 140   OP -> alter column id set not null
Rule 141   OP -> alter column id set null
Rule 142   OP -> drop constraint id
Rule 143   OP -> drop column LEXP
Rule 144   OP -> drop check id
Rule 145   OP -> rename column id to id
Rule 146   OP -> alter column id type TIPO
Rule 147   SHOWDB -> show dbs
Rule 148   SHOW -> show tables para id parc
Rule 149   SHOW -> show collection para parc
Rule 150   CREATEDB -> create RD if not exist id
Rule 151   CREATEDB -> create RD if not exist id OPCCDB
Rule 152   CREATEDB -> create RD id
Rule 153   CREATEDB -> create RD id OPCCDB
Rule 154   OPCCDB -> PROPIETARIO
Rule 155   OPCCDB -> MODO
Rule 156   OPCCDB -> PROPIETARIO MODO
Rule 157   RD -> or replace databases
Rule 158   RD -> databases
Rule 159   PROPIETARIO -> owner igual id
Rule 160   PROPIETARIO -> owner id
Rule 161   PROPIETARIO -> owner igual cadena
Rule 162   PROPIETARIO -> owner cadena
Rule 163   PROPIETARIO -> owner igual cadenaString
Rule 164   PROPIETARIO -> owner cadenaString
Rule 165   MODO -> mode igual int
Rule 166   MODO -> mode int
Rule 167   CREATETABLE -> create table id para LDEF parc ptcoma
Rule 168   CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 169   LDEF -> LDEF coma COLDEF
Rule 170   LDEF -> COLDEF
Rule 171   COLDEF -> OPCONST
Rule 172   COLDEF -> constraint id OPCONST
Rule 173   COLDEF -> id TIPO
Rule 174   COLDEF -> id TIPO LOPCOLUMN
Rule 175   LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 176   LOPCOLUMN -> OPCOLUMN
Rule 177   OPCOLUMN -> constraint id unique
Rule 178   OPCOLUMN -> not null
Rule 179   OPCOLUMN -> primary key
Rule 180   OPCOLUMN -> null
Rule 181   OPCOLUMN -> unique
Rule 182   OPCOLUMN -> references id
Rule 183   OPCOLUMN -> constraint id check para CONDCHECK parc
Rule 184   OPCOLUMN -> check para CONDCHECK parc
Rule 185   OPCOLUMN -> default EXP
Rule 186   OPCONST -> primary key para LEXP parc
Rule 187   OPCONST -> foreign key para LEXP parc references id para LEXP parc
Rule 188   OPCONST -> check para CONDCHECK parc
Rule 189   OPCONST -> unique para LEXP parc
Rule 190   CONDCHECK -> EXP mayor EXP
Rule 191   CONDCHECK -> EXP menor EXP
Rule 192   CONDCHECK -> EXP mayor_igual EXP
Rule 193   CONDCHECK -> EXP menor_igual EXP
Rule 194   CONDCHECK -> EXP igual EXP
Rule 195   CONDCHECK -> EXP diferente1 EXP
Rule 196   CONDCHECK -> EXP diferente2 EXP
Rule 197   HERENCIA -> inherits para LEXP parc
Rule 198   CREATETYPE -> create type id as enum para LEXP parc
Rule 199   SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 200   SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 201   SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 202   LIMIT -> limit int
Rule 203   LIMIT -> limit all
Rule 204   LIMIT -> offset int
Rule 205   LIMIT -> limit int offset int
Rule 206   LIMIT -> offset int limit int
Rule 207   LIMIT -> limit all offset int
Rule 208   LIMIT -> offset int limit all
Rule 209   LIMIT -> <empty>
Rule 210   WHERE -> where EXP
Rule 211   WHERE -> <empty>
Rule 212   WHERE -> where EXIST
Rule 213   COMBINING -> union LEXP
Rule 214   COMBINING -> union all LEXP
Rule 215   COMBINING -> intersect LEXP
Rule 216   COMBINING -> except LEXP
Rule 217   COMBINING -> <empty>
Rule 218   GROUP -> group by LEXP
Rule 219   GROUP -> <empty>
Rule 220   HAVING -> having EXP
Rule 221   HAVING -> <empty>
Rule 222   ORDER -> order by LEXP ORD
Rule 223   ORDER -> order by LEXP
Rule 224   ORDER -> <empty>
Rule 225   ORD -> asc
Rule 226   ORD -> desc
Rule 227   UPDATE -> update id set LCAMPOS where LEXP
Rule 228   LCAMPOS -> LCAMPOS coma id igual EXP
Rule 229   LCAMPOS -> id igual EXP
Rule 230   DELETE -> delete r_from id WHERE
Rule 231   EXIST -> exist para SELECT parc
Rule 232   EXIST -> not exist para SELECT parc
Rule 233   LEXP -> LEXP coma EXP
Rule 234   LEXP -> EXP
Rule 235   TIPO -> decimal para LEXP parc
Rule 236   TIPO -> numeric para LEXP parc
Rule 237   TIPO -> varchar para int parc
Rule 238   TIPO -> timestamp para int parc
Rule 239   TIPO -> character para int parc
Rule 240   TIPO -> interval para int parc
Rule 241   TIPO -> char para int parc
Rule 242   TIPO -> time para int parc
Rule 243   TIPO -> character varying para int parc
Rule 244   TIPO -> interval cadena
Rule 245   TIPO -> id modulo rowtype
Rule 246   TIPO -> idPunto modulo type
Rule 247   TIPO -> timestamp para int parc without time zone
Rule 248   TIPO -> timestamp para int parc with time zone
Rule 249   TIPO -> time para int parc without time zone
Rule 250   TIPO -> time para int parc with time zone
Rule 251   TIPO -> interval para int parc cadena
Rule 252   TIPO -> smallint
Rule 253   TIPO -> integer
Rule 254   TIPO -> r_int
Rule 255   TIPO -> bigint
Rule 256   TIPO -> real
Rule 257   TIPO -> double precision
Rule 258   TIPO -> money
Rule 259   TIPO -> text
Rule 260   TIPO -> timestamp
Rule 261   TIPO -> date
Rule 262   TIPO -> time
Rule 263   TIPO -> interval
Rule 264   TIPO -> boolean
Rule 265   TIPO -> record
Rule 266   TIPO -> varchar
Rule 267   TIPO -> decimal
Rule 268   TIPO -> numeric
Rule 269   TIPO -> id
Rule 270   TIPO -> timestamp without time zone
Rule 271   TIPO -> timestamp with time zone
Rule 272   TIPO -> time without time zone
Rule 273   TIPO -> time with time zone
Rule 274   FIELDS -> year
Rule 275   FIELDS -> month
Rule 276   FIELDS -> day
Rule 277   FIELDS -> hour
Rule 278   FIELDS -> minute
Rule 279   FIELDS -> second
Rule 280   EXP -> EXP mas EXP
Rule 281   EXP -> EXP menos EXP
Rule 282   EXP -> EXP multiplicacion EXP
Rule 283   EXP -> EXP division EXP
Rule 284   EXP -> EXP modulo EXP
Rule 285   EXP -> EXP elevado EXP
Rule 286   EXP -> EXP and EXP
Rule 287   EXP -> EXP or EXP
Rule 288   EXP -> EXP mayor EXP
Rule 289   EXP -> EXP menor EXP
Rule 290   EXP -> EXP mayor_igual EXP
Rule 291   EXP -> EXP menor_igual EXP
Rule 292   EXP -> EXP igual EXP
Rule 293   EXP -> EXP diferente1 EXP
Rule 294   EXP -> EXP diferente2 EXP
Rule 295   EXP -> EXP between EXP
Rule 296   EXP -> EXP is not null
Rule 297   EXP -> EXP is not true
Rule 298   EXP -> EXP is not false
Rule 299   EXP -> EXP is not unknown
Rule 300   EXP -> EXP not like cadena
Rule 301   EXP -> EXP is null
Rule 302   EXP -> EXP is true
Rule 303   EXP -> EXP is unknown
Rule 304   EXP -> EXP as cadena
Rule 305   EXP -> EXP as id
Rule 306   EXP -> EXP as cadenaString
Rule 307   EXP -> EXP like cadena
Rule 308   EXP -> EXP is false
Rule 309   EXP -> EXP isnull
Rule 310   EXP -> EXP notnull
Rule 311   EXP -> EXP cadenaString
Rule 312   EXP -> EXP id
Rule 313   EXP -> EXP cadena
Rule 314   EXP -> mas EXP
Rule 315   EXP -> menos EXP
Rule 316   EXP -> not EXP
Rule 317   EXP -> EXP not between EXP
Rule 318   EXP -> EXP between symetric EXP
Rule 319   EXP -> EXP in para LEXP parc
Rule 320   EXP -> EXP not in para LEXP parc
Rule 321   EXP -> EXP is not distinct r_from EXP
Rule 322   EXP -> EXP is distinct r_from EXP
Rule 323   EXP -> EXP not between symetric EXP
Rule 324   EXP -> SELECT
Rule 325   EXP -> para EXP parc
Rule 326   EXP -> id para parc
Rule 327   EXP -> id para LEXP parc
Rule 328   EXP -> any para LEXP parc
Rule 329   EXP -> all para LEXP parc
Rule 330   EXP -> some para LEXP parc
Rule 331   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 332   EXP -> cadena as TIPO
Rule 333   EXP -> int
Rule 334   EXP -> decimales
Rule 335   EXP -> cadena
Rule 336   EXP -> cadenaString
Rule 337   EXP -> true
Rule 338   EXP -> false
Rule 339   EXP -> id
Rule 340   EXP -> multiplicacion
Rule 341   EXP -> null
Rule 342   EXP -> idPunto
Rule 343   EXP -> default
Rule 344   EXP -> current_time
Rule 345   EXP -> current_date
Rule 346   EXP -> timestamp cadena
Rule 347   EXP -> interval cadena

Terminals, with rules where they appear

add                  : 133 134 135 136 137 138 139
all                  : 118 203 207 208 214 329
alter                : 123 124 127 127 128 128 129 129 130 130 140 141 146
and                  : 286
any                  : 328
as                   : 41 198 304 305 306 332
asc                  : 56 60 63 225
begin                : 49
between              : 295 317 318 323
bigint               : 255
boolean              : 264
by                   : 218 222 223
cadena               : 105 161 162 244 251 300 304 307 313 331 332 335 346 347
cadenaString         : 163 164 306 311 336
call                 : 
case                 : 83 83 84 84 85 86 86
char                 : 241
character            : 239 243
check                : 134 135 144 183 184 188
collection           : 149
column               : 129 130 133 140 141 143 145 146
coma                 : 43 44 105 111 131 169 228 233
constant             : 68 69
constraint           : 135 136 139 142 172 177 183
create               : 26 27 28 29 35 36 37 38 50 51 52 53 54 55 150 151 152 153 167 168 198
current_date         : 345
current_time         : 344
databases            : 121 122 123 157 158
date                 : 261
day                  : 276
dbs                  : 147
debug                : 107
decimal              : 235 267
decimales            : 334
declare              : 100
default              : 70 185 343
delete               : 230
desc                 : 57 61 62 226
diferente1           : 195 293
diferente2           : 196 294
distinct             : 199 321 322
division             : 283
do                   : 42
dolarn               : 41 41 42 42
dospuntos            : 72 74
double               : 257
drop                 : 30 31 118 119 120 121 122 142 143 144
elevado              : 285
else                 : 82 115
elsif                : 80 81
end                  : 49 76 77 78 79 83 84 85 86
enum                 : 198
error                : 
except               : 216
exception            : 110
execute              : 33 34
exist                : 31 122 128 130 150 151 231 232
extract              : 331
false                : 298 308 338
first                : 58 60 62
foreign              : 138 139 187
format               : 111
function             : 26 27 28 29 30 31
group                : 218
hash                 : 52
having               : 220
hour                 : 277
id                   : 23 26 27 28 29 30 31 33 34 35 36 37 38 43 44 45 46 50 50 51 51 52 52 53 53 53 54 54 54 54 55 55 55 55 66 67 68 69 74 75 105 116 117 119 120 121 122 123 124 125 126 127 128 129 130 133 135 136 138 139 139 140 141 142 144 145 145 146 148 150 151 152 153 159 160 167 168 172 173 174 177 182 183 187 198 227 228 229 230 245 269 305 312 326 327 339
idPunto              : 246 342
if                   : 31 76 76 77 77 78 78 79 79 122 128 130 150 151
igual                : 71 72 74 75 159 161 163 165 194 228 229 292
in                   : 319 320
index                : 50 51 52 53 54 55 120 127 128 129 130
info                 : 106
inherits             : 197
inout                : 43 45
insert               : 116 117
int                  : 165 166 202 204 205 205 206 206 207 208 237 238 239 240 241 242 243 247 248 249 250 251 333
integer              : 253
intersect            : 215
interval             : 240 244 251 263 347
into                 : 116 117
is                   : 296 297 298 299 301 302 303 308 321 322
isnull               : 309
key                  : 138 139 179 186 187
language             : 47 48
last                 : 59 61 63
like                 : 300 307
limit                : 202 203 205 206 207 208
mas                  : 280 314
mayor                : 190 288
mayor_igual          : 192 290
menor                : 191 289
menor_igual          : 193 291
menos                : 281 315
minute               : 278
mode                 : 165 166
modulo               : 245 246 284
money                : 258
month                : 275
multiplicacion       : 282 340
not                  : 66 68 140 150 151 178 232 296 297 298 299 300 316 317 320 321 323
notice               : 108
notnull              : 310
null                 : 66 68 140 141 178 180 296 301 341
nulls                : 58 59 60 61 62 63
numeric              : 236 268
offset               : 204 205 206 207 208
on                   : 50 51 52 53 54 55
or                   : 157 287
order                : 222 223
owner                : 126 159 160 161 162 163 164
para                 : 26 27 28 29 33 34 35 36 37 38 50 51 52 53 54 55 111 116 117 117 118 134 135 136 137 138 138 139 139 148 149 167 168 183 184 186 187 187 188 189 197 198 231 232 235 236 237 238 239 240 241 242 243 247 248 249 250 251 319 320 325 326 327 328 329 330 331
parc                 : 26 27 28 29 33 34 35 36 37 38 50 51 52 53 54 55 111 116 117 117 118 134 135 136 137 138 138 139 139 148 149 167 168 183 184 186 187 187 188 189 197 198 231 232 235 236 237 238 239 240 241 242 243 247 248 249 250 251 319 320 325 326 327 328 329 330 331
plpgsql              : 47 48
precision            : 257
primary              : 179 186
procedure            : 35 36 37 38
ptcoma               : 4 6 7 8 9 10 11 12 13 14 15 16 17 18 21 22 23 24 48 66 67 68 69 89 90 91 92 93 94 95 96 97 98 99 167 168
r_from               : 199 200 230 321 322 331
r_int                : 254
raise                : 101 102 103 104 105
real                 : 256
record               : 265
references           : 138 139 182 187
rename               : 125 145
replace              : 157
return               : 25
returns              : 32
rowtype              : 245
second               : 279
select               : 199 200 201
set                  : 140 141 227
show                 : 147 148 149
smallint             : 252
some                 : 330
symetric             : 318 323
table                : 119 124 167 168
tables               : 148
text                 : 259
then                 : 76 77 78 79 80 81 114
time                 : 242 247 248 249 249 250 250 262 270 271 272 272 273 273
timestamp            : 238 247 248 260 270 271 331 346
to                   : 125 126 145
true                 : 297 302 337
type                 : 146 198 246
union                : 213 214
unique               : 51 136 137 177 181 189
unknown              : 299 303
update               : 227
use                  : 23
using                : 52
values               : 116 117
varchar              : 237 266
varying              : 243
warning              : 109
when                 : 114
where                : 210 212 227
with                 : 248 250 271 273
without              : 247 249 270 272
year                 : 274
zone                 : 247 248 249 250 270 271 272 273

Nonterminals, with rules where they appear

ALTER                : 8
ASIG                 : 66 67 68 69
ASIGNACION           : 17 89
BEGINEND             : 92
CALLPROCEDURE        : 21 93
CASE                 : 12 99
COLDEF               : 169 170
COMBINING            : 199 200 201
CONDCHECK            : 134 135 183 184 188
CONDICIONIF          : 18 90
CONTENIDO            : 87 88
CONTENIDOP           : 39 40
CREATEDB             : 13
CREATEINDEX          : 16 24
CREATETABLE          : 5
CREATETYPE           : 11
DECLARACIONES        : 64 65
DELETE               : 7 98
DROP                 : 9
DROPFUNC             : 22
ELSE                 : 
ELSEF                : 76 77 83 84
EXIST                : 212
EXP                  : 25 70 71 72 74 75 76 77 78 79 80 81 83 85 102 111 114 127 128 129 130 185 190 190 191 191 192 192 193 193 194 194 195 195 196 196 210 220 228 229 233 234 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294 295 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 317 318 318 319 320 321 321 322 322 323 323 325
FIELDS               : 331
FORMAT               : 101
FUNCIONES            : 20
GROUP                : 199 200 201
HAVING               : 199 200 201
HERENCIA             : 168
INSERT               : 10 95
LCAMPOS              : 227 228
LCONTENIDOP          : 26 27 28 29 35 36 37 38 39
LDEC                 : 64 100
LDEF                 : 167 168 169
LELIF                : 76 78 80
LENGUAJE             : 26 27 28 29 35 36 37 38
LEVEL                : 101 102 103 105
LEXP                 : 33 50 51 52 111 115 116 117 117 136 137 138 138 139 139 143 186 187 187 189 197 198 199 199 200 200 201 213 214 215 216 218 222 223 227 233 235 236 319 320 327 328 329 330
LIMIT                : 199 200 201
LISTACONTENIDO       : 41 42 49 76 77 78 79 80 81 82 87 114
LISTAWHEN            : 83 84 85 86 112
LOP                  : 124 131
LOPCOLUMN            : 174 175
LPARAM               : 26 27 35 36 43 44
MODO                 : 155 156
OP                   : 131 132
OPCCDB               : 151 153
OPCOLUMN             : 175 176
OPCONST              : 171 172
ORD                  : 222
ORDEN                : 53 54
ORDER                : 199 200 201
PROCEDIMIENTOS       : 19
PROPIETARIO          : 154 156
RAISE                : 91
RD                   : 150 151 152 153
RETURN               : 94
RETURNP              : 26 27 28 29
RO                   : 123
SELECT               : 4 96 231 232 324
SHOW                 : 15
SHOWDB               : 14
TIPO                 : 32 43 44 45 46 66 67 68 69 133 146 173 174 332
UPDATE               : 6 97
WHEN                 : 112 113
WHERE                : 24 199 200 201 230
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE ptcoma
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . CREATEINDEX ptcoma
    (17) instruccion -> . ASIGNACION ptcoma
    (18) instruccion -> . CONDICIONIF ptcoma
    (19) instruccion -> . PROCEDIMIENTOS
    (20) instruccion -> . FUNCIONES
    (21) instruccion -> . CALLPROCEDURE ptcoma
    (22) instruccion -> . DROPFUNC ptcoma
    (23) instruccion -> . use id ptcoma
    (24) instruccion -> . CREATEINDEX WHERE ptcoma
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (167) CREATETABLE -> . create table id para LDEF parc ptcoma
    (168) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (123) ALTER -> . alter databases id RO
    (124) ALTER -> . alter table id LOP
    (127) ALTER -> . alter index id alter EXP
    (128) ALTER -> . alter index if exist id alter EXP
    (129) ALTER -> . alter index id alter column EXP
    (130) ALTER -> . alter index if exist id alter column EXP
    (118) DROP -> . drop all para parc
    (119) DROP -> . drop table id
    (120) DROP -> . drop index id
    (121) DROP -> . drop databases id
    (122) DROP -> . drop databases if exist id
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (198) CREATETYPE -> . create type id as enum para LEXP parc
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case
    (150) CREATEDB -> . create RD if not exist id
    (151) CREATEDB -> . create RD if not exist id OPCCDB
    (152) CREATEDB -> . create RD id
    (153) CREATEDB -> . create RD id OPCCDB
    (147) SHOWDB -> . show dbs
    (148) SHOW -> . show tables para id parc
    (149) SHOW -> . show collection para parc
    (50) CREATEINDEX -> . create index id on id para LEXP parc
    (51) CREATEINDEX -> . create unique index id on id para LEXP parc
    (52) CREATEINDEX -> . create index id on id using hash para LEXP parc
    (53) CREATEINDEX -> . create index id on id para id ORDEN parc
    (54) CREATEINDEX -> . create index id on id para id id ORDEN parc
    (55) CREATEINDEX -> . create index id on id para id id parc
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (35) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (36) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (37) PROCEDIMIENTOS -> . create procedure id para parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> . create procedure id para parc LCONTENIDOP LENGUAJE
    (26) FUNCIONES -> . create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> . create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> . create function id para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> . create function id para parc RETURNP LCONTENIDOP LENGUAJE
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (30) DROPFUNC -> . drop function id
    (31) DROPFUNC -> . drop function if exist id

    use             shift and go to state 23
    select          shift and go to state 25
    create          shift and go to state 26
    update          shift and go to state 27
    delete          shift and go to state 28
    alter           shift and go to state 29
    drop            shift and go to state 31
    insert          shift and go to state 32
    case            shift and go to state 33
    show            shift and go to state 34
    id              shift and go to state 24
    if              shift and go to state 30
    execute         shift and go to state 35

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15
    CREATEINDEX                    shift and go to state 16
    ASIGNACION                     shift and go to state 17
    CONDICIONIF                    shift and go to state 18
    PROCEDIMIENTOS                 shift and go to state 19
    FUNCIONES                      shift and go to state 20
    CALLPROCEDURE                  shift and go to state 21
    DROPFUNC                       shift and go to state 22

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE ptcoma
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . CREATEINDEX ptcoma
    (17) instruccion -> . ASIGNACION ptcoma
    (18) instruccion -> . CONDICIONIF ptcoma
    (19) instruccion -> . PROCEDIMIENTOS
    (20) instruccion -> . FUNCIONES
    (21) instruccion -> . CALLPROCEDURE ptcoma
    (22) instruccion -> . DROPFUNC ptcoma
    (23) instruccion -> . use id ptcoma
    (24) instruccion -> . CREATEINDEX WHERE ptcoma
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (167) CREATETABLE -> . create table id para LDEF parc ptcoma
    (168) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (123) ALTER -> . alter databases id RO
    (124) ALTER -> . alter table id LOP
    (127) ALTER -> . alter index id alter EXP
    (128) ALTER -> . alter index if exist id alter EXP
    (129) ALTER -> . alter index id alter column EXP
    (130) ALTER -> . alter index if exist id alter column EXP
    (118) DROP -> . drop all para parc
    (119) DROP -> . drop table id
    (120) DROP -> . drop index id
    (121) DROP -> . drop databases id
    (122) DROP -> . drop databases if exist id
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (198) CREATETYPE -> . create type id as enum para LEXP parc
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case
    (150) CREATEDB -> . create RD if not exist id
    (151) CREATEDB -> . create RD if not exist id OPCCDB
    (152) CREATEDB -> . create RD id
    (153) CREATEDB -> . create RD id OPCCDB
    (147) SHOWDB -> . show dbs
    (148) SHOW -> . show tables para id parc
    (149) SHOW -> . show collection para parc
    (50) CREATEINDEX -> . create index id on id para LEXP parc
    (51) CREATEINDEX -> . create unique index id on id para LEXP parc
    (52) CREATEINDEX -> . create index id on id using hash para LEXP parc
    (53) CREATEINDEX -> . create index id on id para id ORDEN parc
    (54) CREATEINDEX -> . create index id on id para id id ORDEN parc
    (55) CREATEINDEX -> . create index id on id para id id parc
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (35) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (36) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (37) PROCEDIMIENTOS -> . create procedure id para parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> . create procedure id para parc LCONTENIDOP LENGUAJE
    (26) FUNCIONES -> . create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> . create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> . create function id para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> . create function id para parc RETURNP LCONTENIDOP LENGUAJE
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (30) DROPFUNC -> . drop function id
    (31) DROPFUNC -> . drop function if exist id

    $end            reduce using rule 1 (init -> instrucciones .)
    use             shift and go to state 23
    select          shift and go to state 25
    create          shift and go to state 26
    update          shift and go to state 27
    delete          shift and go to state 28
    alter           shift and go to state 29
    drop            shift and go to state 31
    insert          shift and go to state 32
    case            shift and go to state 33
    show            shift and go to state 34
    id              shift and go to state 24
    if              shift and go to state 30
    execute         shift and go to state 35

    instruccion                    shift and go to state 36
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15
    CREATEINDEX                    shift and go to state 16
    ASIGNACION                     shift and go to state 17
    CONDICIONIF                    shift and go to state 18
    PROCEDIMIENTOS                 shift and go to state 19
    FUNCIONES                      shift and go to state 20
    CALLPROCEDURE                  shift and go to state 21
    DROPFUNC                       shift and go to state 22

state 3

    (3) instrucciones -> instruccion .

    use             reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    id              reduce using rule 3 (instrucciones -> instruccion .)
    if              reduce using rule 3 (instrucciones -> instruccion .)
    execute         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 37


state 5

    (5) instruccion -> CREATETABLE .

    use             reduce using rule 5 (instruccion -> CREATETABLE .)
    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    id              reduce using rule 5 (instruccion -> CREATETABLE .)
    if              reduce using rule 5 (instruccion -> CREATETABLE .)
    execute         reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 38


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 39


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 40


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 41


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 42


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 43


state 12

    (12) instruccion -> CASE . ptcoma

    ptcoma          shift and go to state 44


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 45


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 46


state 15

    (15) instruccion -> SHOW . ptcoma

    ptcoma          shift and go to state 47


state 16

    (16) instruccion -> CREATEINDEX . ptcoma
    (24) instruccion -> CREATEINDEX . WHERE ptcoma
    (210) WHERE -> . where EXP
    (211) WHERE -> .
    (212) WHERE -> . where EXIST

  ! shift/reduce conflict for ptcoma resolved as shift
    ptcoma          shift and go to state 48
    where           shift and go to state 50

  ! ptcoma          [ reduce using rule 211 (WHERE -> .) ]

    WHERE                          shift and go to state 49

state 17

    (17) instruccion -> ASIGNACION . ptcoma

    ptcoma          shift and go to state 51


state 18

    (18) instruccion -> CONDICIONIF . ptcoma

    ptcoma          shift and go to state 52


state 19

    (19) instruccion -> PROCEDIMIENTOS .

    use             reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    select          reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    create          reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    update          reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    delete          reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    alter           reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    drop            reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    insert          reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    case            reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    show            reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    id              reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    if              reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    execute         reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)
    $end            reduce using rule 19 (instruccion -> PROCEDIMIENTOS .)


state 20

    (20) instruccion -> FUNCIONES .

    use             reduce using rule 20 (instruccion -> FUNCIONES .)
    select          reduce using rule 20 (instruccion -> FUNCIONES .)
    create          reduce using rule 20 (instruccion -> FUNCIONES .)
    update          reduce using rule 20 (instruccion -> FUNCIONES .)
    delete          reduce using rule 20 (instruccion -> FUNCIONES .)
    alter           reduce using rule 20 (instruccion -> FUNCIONES .)
    drop            reduce using rule 20 (instruccion -> FUNCIONES .)
    insert          reduce using rule 20 (instruccion -> FUNCIONES .)
    case            reduce using rule 20 (instruccion -> FUNCIONES .)
    show            reduce using rule 20 (instruccion -> FUNCIONES .)
    id              reduce using rule 20 (instruccion -> FUNCIONES .)
    if              reduce using rule 20 (instruccion -> FUNCIONES .)
    execute         reduce using rule 20 (instruccion -> FUNCIONES .)
    $end            reduce using rule 20 (instruccion -> FUNCIONES .)


state 21

    (21) instruccion -> CALLPROCEDURE . ptcoma

    ptcoma          shift and go to state 53


state 22

    (22) instruccion -> DROPFUNC . ptcoma

    ptcoma          shift and go to state 54


state 23

    (23) instruccion -> use . id ptcoma

    id              shift and go to state 55


state 24

    (74) ASIGNACION -> id . dospuntos igual EXP
    (75) ASIGNACION -> id . igual EXP

    dospuntos       shift and go to state 56
    igual           shift and go to state 57


state 25

    (199) SELECT -> select . distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> select . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> select . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    distinct        shift and go to state 58
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 59
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 26

    (167) CREATETABLE -> create . table id para LDEF parc ptcoma
    (168) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (198) CREATETYPE -> create . type id as enum para LEXP parc
    (150) CREATEDB -> create . RD if not exist id
    (151) CREATEDB -> create . RD if not exist id OPCCDB
    (152) CREATEDB -> create . RD id
    (153) CREATEDB -> create . RD id OPCCDB
    (50) CREATEINDEX -> create . index id on id para LEXP parc
    (51) CREATEINDEX -> create . unique index id on id para LEXP parc
    (52) CREATEINDEX -> create . index id on id using hash para LEXP parc
    (53) CREATEINDEX -> create . index id on id para id ORDEN parc
    (54) CREATEINDEX -> create . index id on id para id id ORDEN parc
    (55) CREATEINDEX -> create . index id on id para id id parc
    (35) PROCEDIMIENTOS -> create . procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (36) PROCEDIMIENTOS -> create . procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (37) PROCEDIMIENTOS -> create . procedure id para parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create . procedure id para parc LCONTENIDOP LENGUAJE
    (26) FUNCIONES -> create . function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create . function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> create . function id para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create . function id para parc RETURNP LCONTENIDOP LENGUAJE
    (157) RD -> . or replace databases
    (158) RD -> . databases

    table           shift and go to state 85
    type            shift and go to state 86
    index           shift and go to state 88
    unique          shift and go to state 89
    procedure       shift and go to state 90
    function        shift and go to state 91
    or              shift and go to state 92
    databases       shift and go to state 93

    RD                             shift and go to state 87

state 27

    (227) UPDATE -> update . id set LCAMPOS where LEXP

    id              shift and go to state 94


state 28

    (230) DELETE -> delete . r_from id WHERE

    r_from          shift and go to state 95


state 29

    (123) ALTER -> alter . databases id RO
    (124) ALTER -> alter . table id LOP
    (127) ALTER -> alter . index id alter EXP
    (128) ALTER -> alter . index if exist id alter EXP
    (129) ALTER -> alter . index id alter column EXP
    (130) ALTER -> alter . index if exist id alter column EXP

    databases       shift and go to state 96
    table           shift and go to state 97
    index           shift and go to state 98


state 30

    (76) CONDICIONIF -> if . EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> if . EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> if . EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> if . EXP then LISTACONTENIDO end if
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 99
    SELECT                         shift and go to state 72

state 31

    (118) DROP -> drop . all para parc
    (119) DROP -> drop . table id
    (120) DROP -> drop . index id
    (121) DROP -> drop . databases id
    (122) DROP -> drop . databases if exist id
    (30) DROPFUNC -> drop . function id
    (31) DROPFUNC -> drop . function if exist id

    all             shift and go to state 100
    table           shift and go to state 101
    index           shift and go to state 102
    databases       shift and go to state 103
    function        shift and go to state 104


state 32

    (116) INSERT -> insert . into id values para LEXP parc
    (117) INSERT -> insert . into id para LEXP parc values para LEXP parc

    into            shift and go to state 105


state 33

    (83) CASE -> case . EXP LISTAWHEN ELSEF end case
    (84) CASE -> case . LISTAWHEN ELSEF end case
    (85) CASE -> case . EXP LISTAWHEN end
    (86) CASE -> case . LISTAWHEN end case
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (112) LISTAWHEN -> . LISTAWHEN WHEN
    (113) LISTAWHEN -> . WHEN
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (114) WHEN -> . when EXP then LISTACONTENIDO

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25
    when            shift and go to state 109

    EXP                            shift and go to state 106
    LISTAWHEN                      shift and go to state 107
    SELECT                         shift and go to state 72
    WHEN                           shift and go to state 108

state 34

    (147) SHOWDB -> show . dbs
    (148) SHOW -> show . tables para id parc
    (149) SHOW -> show . collection para parc

    dbs             shift and go to state 110
    tables          shift and go to state 111
    collection      shift and go to state 112


state 35

    (33) CALLPROCEDURE -> execute . id para LEXP parc
    (34) CALLPROCEDURE -> execute . id para parc

    id              shift and go to state 113


state 36

    (2) instrucciones -> instrucciones instruccion .

    use             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    id              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    if              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    execute         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 37

    (4) instruccion -> SELECT ptcoma .

    use             reduce using rule 4 (instruccion -> SELECT ptcoma .)
    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    id              reduce using rule 4 (instruccion -> SELECT ptcoma .)
    if              reduce using rule 4 (instruccion -> SELECT ptcoma .)
    execute         reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 38

    (6) instruccion -> UPDATE ptcoma .

    use             reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    id              reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    if              reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    execute         reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 39

    (7) instruccion -> DELETE ptcoma .

    use             reduce using rule 7 (instruccion -> DELETE ptcoma .)
    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    id              reduce using rule 7 (instruccion -> DELETE ptcoma .)
    if              reduce using rule 7 (instruccion -> DELETE ptcoma .)
    execute         reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 40

    (8) instruccion -> ALTER ptcoma .

    use             reduce using rule 8 (instruccion -> ALTER ptcoma .)
    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    id              reduce using rule 8 (instruccion -> ALTER ptcoma .)
    if              reduce using rule 8 (instruccion -> ALTER ptcoma .)
    execute         reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 41

    (9) instruccion -> DROP ptcoma .

    use             reduce using rule 9 (instruccion -> DROP ptcoma .)
    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    id              reduce using rule 9 (instruccion -> DROP ptcoma .)
    if              reduce using rule 9 (instruccion -> DROP ptcoma .)
    execute         reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 42

    (10) instruccion -> INSERT ptcoma .

    use             reduce using rule 10 (instruccion -> INSERT ptcoma .)
    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    id              reduce using rule 10 (instruccion -> INSERT ptcoma .)
    if              reduce using rule 10 (instruccion -> INSERT ptcoma .)
    execute         reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 43

    (11) instruccion -> CREATETYPE ptcoma .

    use             reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    id              reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    if              reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    execute         reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 44

    (12) instruccion -> CASE ptcoma .

    use             reduce using rule 12 (instruccion -> CASE ptcoma .)
    select          reduce using rule 12 (instruccion -> CASE ptcoma .)
    create          reduce using rule 12 (instruccion -> CASE ptcoma .)
    update          reduce using rule 12 (instruccion -> CASE ptcoma .)
    delete          reduce using rule 12 (instruccion -> CASE ptcoma .)
    alter           reduce using rule 12 (instruccion -> CASE ptcoma .)
    drop            reduce using rule 12 (instruccion -> CASE ptcoma .)
    insert          reduce using rule 12 (instruccion -> CASE ptcoma .)
    case            reduce using rule 12 (instruccion -> CASE ptcoma .)
    show            reduce using rule 12 (instruccion -> CASE ptcoma .)
    id              reduce using rule 12 (instruccion -> CASE ptcoma .)
    if              reduce using rule 12 (instruccion -> CASE ptcoma .)
    execute         reduce using rule 12 (instruccion -> CASE ptcoma .)
    $end            reduce using rule 12 (instruccion -> CASE ptcoma .)


state 45

    (13) instruccion -> CREATEDB ptcoma .

    use             reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    id              reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    if              reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    execute         reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 46

    (14) instruccion -> SHOWDB ptcoma .

    use             reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    id              reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    if              reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    execute         reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 47

    (15) instruccion -> SHOW ptcoma .

    use             reduce using rule 15 (instruccion -> SHOW ptcoma .)
    select          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    create          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    update          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    delete          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    alter           reduce using rule 15 (instruccion -> SHOW ptcoma .)
    drop            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    insert          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    case            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    show            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    id              reduce using rule 15 (instruccion -> SHOW ptcoma .)
    if              reduce using rule 15 (instruccion -> SHOW ptcoma .)
    execute         reduce using rule 15 (instruccion -> SHOW ptcoma .)
    $end            reduce using rule 15 (instruccion -> SHOW ptcoma .)


state 48

    (16) instruccion -> CREATEINDEX ptcoma .

    use             reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    select          reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    create          reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    update          reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    delete          reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    alter           reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    drop            reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    insert          reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    case            reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    show            reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    id              reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    if              reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    execute         reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)
    $end            reduce using rule 16 (instruccion -> CREATEINDEX ptcoma .)


state 49

    (24) instruccion -> CREATEINDEX WHERE . ptcoma

    ptcoma          shift and go to state 114


state 50

    (210) WHERE -> where . EXP
    (212) WHERE -> where . EXIST
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (231) EXIST -> . exist para SELECT parc
    (232) EXIST -> . not exist para SELECT parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 117
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    exist           shift and go to state 118
    select          shift and go to state 25

    EXP                            shift and go to state 115
    EXIST                          shift and go to state 116
    SELECT                         shift and go to state 72

state 51

    (17) instruccion -> ASIGNACION ptcoma .

    use             reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    select          reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    create          reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    update          reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    delete          reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    alter           reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    drop            reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    insert          reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    case            reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    show            reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    id              reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    if              reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    execute         reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)
    $end            reduce using rule 17 (instruccion -> ASIGNACION ptcoma .)


state 52

    (18) instruccion -> CONDICIONIF ptcoma .

    use             reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    select          reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    create          reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    update          reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    delete          reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    alter           reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    drop            reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    insert          reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    case            reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    show            reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    id              reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    if              reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    execute         reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)
    $end            reduce using rule 18 (instruccion -> CONDICIONIF ptcoma .)


state 53

    (21) instruccion -> CALLPROCEDURE ptcoma .

    use             reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    select          reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    create          reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    update          reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    delete          reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    alter           reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    drop            reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    insert          reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    case            reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    show            reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    id              reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    if              reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    execute         reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)
    $end            reduce using rule 21 (instruccion -> CALLPROCEDURE ptcoma .)


state 54

    (22) instruccion -> DROPFUNC ptcoma .

    use             reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    select          reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    create          reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    update          reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    delete          reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    alter           reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    drop            reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    insert          reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    case            reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    show            reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    id              reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    if              reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    execute         reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)
    $end            reduce using rule 22 (instruccion -> DROPFUNC ptcoma .)


state 55

    (23) instruccion -> use id . ptcoma

    ptcoma          shift and go to state 119


state 56

    (74) ASIGNACION -> id dospuntos . igual EXP

    igual           shift and go to state 120


state 57

    (75) ASIGNACION -> id igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 121
    SELECT                         shift and go to state 72

state 58

    (199) SELECT -> select distinct . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 122
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 59

    (200) SELECT -> select LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> select LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (233) LEXP -> LEXP . coma EXP
    (210) WHERE -> . where EXP
    (211) WHERE -> .
    (212) WHERE -> . where EXIST

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    r_from          shift and go to state 123
    coma            shift and go to state 125
    where           shift and go to state 50
    group           reduce using rule 211 (WHERE -> .)
    having          reduce using rule 211 (WHERE -> .)
    union           reduce using rule 211 (WHERE -> .)
    intersect       reduce using rule 211 (WHERE -> .)
    except          reduce using rule 211 (WHERE -> .)
    order           reduce using rule 211 (WHERE -> .)
    limit           reduce using rule 211 (WHERE -> .)
    offset          reduce using rule 211 (WHERE -> .)
    ptcoma          reduce using rule 211 (WHERE -> .)
    mas             reduce using rule 211 (WHERE -> .)
    menos           reduce using rule 211 (WHERE -> .)
    multiplicacion  reduce using rule 211 (WHERE -> .)
    division        reduce using rule 211 (WHERE -> .)
    modulo          reduce using rule 211 (WHERE -> .)
    elevado         reduce using rule 211 (WHERE -> .)
    and             reduce using rule 211 (WHERE -> .)
    or              reduce using rule 211 (WHERE -> .)
    mayor           reduce using rule 211 (WHERE -> .)
    menor           reduce using rule 211 (WHERE -> .)
    mayor_igual     reduce using rule 211 (WHERE -> .)
    menor_igual     reduce using rule 211 (WHERE -> .)
    igual           reduce using rule 211 (WHERE -> .)
    diferente1      reduce using rule 211 (WHERE -> .)
    diferente2      reduce using rule 211 (WHERE -> .)
    between         reduce using rule 211 (WHERE -> .)
    is              reduce using rule 211 (WHERE -> .)
    not             reduce using rule 211 (WHERE -> .)
    as              reduce using rule 211 (WHERE -> .)
    like            reduce using rule 211 (WHERE -> .)
    isnull          reduce using rule 211 (WHERE -> .)
    notnull         reduce using rule 211 (WHERE -> .)
    cadenaString    reduce using rule 211 (WHERE -> .)
    id              reduce using rule 211 (WHERE -> .)
    cadena          reduce using rule 211 (WHERE -> .)
    in              reduce using rule 211 (WHERE -> .)
    then            reduce using rule 211 (WHERE -> .)
    when            reduce using rule 211 (WHERE -> .)
    parc            reduce using rule 211 (WHERE -> .)
    constraint      reduce using rule 211 (WHERE -> .)
    primary         reduce using rule 211 (WHERE -> .)
    null            reduce using rule 211 (WHERE -> .)
    unique          reduce using rule 211 (WHERE -> .)
    references      reduce using rule 211 (WHERE -> .)
    check           reduce using rule 211 (WHERE -> .)
    default         reduce using rule 211 (WHERE -> .)
    asc             reduce using rule 211 (WHERE -> .)
    desc            reduce using rule 211 (WHERE -> .)

  ! r_from          [ reduce using rule 211 (WHERE -> .) ]
  ! coma            [ reduce using rule 211 (WHERE -> .) ]
  ! where           [ reduce using rule 211 (WHERE -> .) ]

    WHERE                          shift and go to state 124

state 60

    (234) LEXP -> EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for like resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
    r_from          reduce using rule 234 (LEXP -> EXP .)
    coma            reduce using rule 234 (LEXP -> EXP .)
    where           reduce using rule 234 (LEXP -> EXP .)
    group           reduce using rule 234 (LEXP -> EXP .)
    having          reduce using rule 234 (LEXP -> EXP .)
    union           reduce using rule 234 (LEXP -> EXP .)
    intersect       reduce using rule 234 (LEXP -> EXP .)
    except          reduce using rule 234 (LEXP -> EXP .)
    order           reduce using rule 234 (LEXP -> EXP .)
    limit           reduce using rule 234 (LEXP -> EXP .)
    offset          reduce using rule 234 (LEXP -> EXP .)
    ptcoma          reduce using rule 234 (LEXP -> EXP .)
    then            reduce using rule 234 (LEXP -> EXP .)
    when            reduce using rule 234 (LEXP -> EXP .)
    parc            reduce using rule 234 (LEXP -> EXP .)
    constraint      reduce using rule 234 (LEXP -> EXP .)
    primary         reduce using rule 234 (LEXP -> EXP .)
    null            reduce using rule 234 (LEXP -> EXP .)
    unique          reduce using rule 234 (LEXP -> EXP .)
    references      reduce using rule 234 (LEXP -> EXP .)
    check           reduce using rule 234 (LEXP -> EXP .)
    default         reduce using rule 234 (LEXP -> EXP .)
    asc             reduce using rule 234 (LEXP -> EXP .)
    desc            reduce using rule 234 (LEXP -> EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151

  ! mas             [ reduce using rule 234 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 234 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 234 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 234 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 234 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 234 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 234 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 234 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 234 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 234 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 234 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 234 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 234 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 234 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 234 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 234 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 234 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 234 (LEXP -> EXP .) ]
  ! as              [ reduce using rule 234 (LEXP -> EXP .) ]
  ! like            [ reduce using rule 234 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 234 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 234 (LEXP -> EXP .) ]
  ! cadenaString    [ reduce using rule 234 (LEXP -> EXP .) ]
  ! id              [ reduce using rule 234 (LEXP -> EXP .) ]
  ! cadena          [ reduce using rule 234 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 234 (LEXP -> EXP .) ]


state 61

    (314) EXP -> mas . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 152
    SELECT                         shift and go to state 72

state 62

    (315) EXP -> menos . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 153
    SELECT                         shift and go to state 72

state 63

    (340) EXP -> multiplicacion .

    r_from          reduce using rule 340 (EXP -> multiplicacion .)
    coma            reduce using rule 340 (EXP -> multiplicacion .)
    where           reduce using rule 340 (EXP -> multiplicacion .)
    group           reduce using rule 340 (EXP -> multiplicacion .)
    having          reduce using rule 340 (EXP -> multiplicacion .)
    union           reduce using rule 340 (EXP -> multiplicacion .)
    intersect       reduce using rule 340 (EXP -> multiplicacion .)
    except          reduce using rule 340 (EXP -> multiplicacion .)
    order           reduce using rule 340 (EXP -> multiplicacion .)
    limit           reduce using rule 340 (EXP -> multiplicacion .)
    offset          reduce using rule 340 (EXP -> multiplicacion .)
    ptcoma          reduce using rule 340 (EXP -> multiplicacion .)
    mas             reduce using rule 340 (EXP -> multiplicacion .)
    menos           reduce using rule 340 (EXP -> multiplicacion .)
    multiplicacion  reduce using rule 340 (EXP -> multiplicacion .)
    division        reduce using rule 340 (EXP -> multiplicacion .)
    modulo          reduce using rule 340 (EXP -> multiplicacion .)
    elevado         reduce using rule 340 (EXP -> multiplicacion .)
    and             reduce using rule 340 (EXP -> multiplicacion .)
    or              reduce using rule 340 (EXP -> multiplicacion .)
    mayor           reduce using rule 340 (EXP -> multiplicacion .)
    menor           reduce using rule 340 (EXP -> multiplicacion .)
    mayor_igual     reduce using rule 340 (EXP -> multiplicacion .)
    menor_igual     reduce using rule 340 (EXP -> multiplicacion .)
    igual           reduce using rule 340 (EXP -> multiplicacion .)
    diferente1      reduce using rule 340 (EXP -> multiplicacion .)
    diferente2      reduce using rule 340 (EXP -> multiplicacion .)
    between         reduce using rule 340 (EXP -> multiplicacion .)
    is              reduce using rule 340 (EXP -> multiplicacion .)
    not             reduce using rule 340 (EXP -> multiplicacion .)
    as              reduce using rule 340 (EXP -> multiplicacion .)
    like            reduce using rule 340 (EXP -> multiplicacion .)
    isnull          reduce using rule 340 (EXP -> multiplicacion .)
    notnull         reduce using rule 340 (EXP -> multiplicacion .)
    cadenaString    reduce using rule 340 (EXP -> multiplicacion .)
    id              reduce using rule 340 (EXP -> multiplicacion .)
    cadena          reduce using rule 340 (EXP -> multiplicacion .)
    in              reduce using rule 340 (EXP -> multiplicacion .)
    then            reduce using rule 340 (EXP -> multiplicacion .)
    when            reduce using rule 340 (EXP -> multiplicacion .)
    parc            reduce using rule 340 (EXP -> multiplicacion .)
    constraint      reduce using rule 340 (EXP -> multiplicacion .)
    primary         reduce using rule 340 (EXP -> multiplicacion .)
    null            reduce using rule 340 (EXP -> multiplicacion .)
    unique          reduce using rule 340 (EXP -> multiplicacion .)
    references      reduce using rule 340 (EXP -> multiplicacion .)
    check           reduce using rule 340 (EXP -> multiplicacion .)
    default         reduce using rule 340 (EXP -> multiplicacion .)
    asc             reduce using rule 340 (EXP -> multiplicacion .)
    desc            reduce using rule 340 (EXP -> multiplicacion .)


state 64

    (316) EXP -> not . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 154
    SELECT                         shift and go to state 72

state 65

    (341) EXP -> null .

    r_from          reduce using rule 341 (EXP -> null .)
    coma            reduce using rule 341 (EXP -> null .)
    where           reduce using rule 341 (EXP -> null .)
    group           reduce using rule 341 (EXP -> null .)
    having          reduce using rule 341 (EXP -> null .)
    union           reduce using rule 341 (EXP -> null .)
    intersect       reduce using rule 341 (EXP -> null .)
    except          reduce using rule 341 (EXP -> null .)
    order           reduce using rule 341 (EXP -> null .)
    limit           reduce using rule 341 (EXP -> null .)
    offset          reduce using rule 341 (EXP -> null .)
    ptcoma          reduce using rule 341 (EXP -> null .)
    mas             reduce using rule 341 (EXP -> null .)
    menos           reduce using rule 341 (EXP -> null .)
    multiplicacion  reduce using rule 341 (EXP -> null .)
    division        reduce using rule 341 (EXP -> null .)
    modulo          reduce using rule 341 (EXP -> null .)
    elevado         reduce using rule 341 (EXP -> null .)
    and             reduce using rule 341 (EXP -> null .)
    or              reduce using rule 341 (EXP -> null .)
    mayor           reduce using rule 341 (EXP -> null .)
    menor           reduce using rule 341 (EXP -> null .)
    mayor_igual     reduce using rule 341 (EXP -> null .)
    menor_igual     reduce using rule 341 (EXP -> null .)
    igual           reduce using rule 341 (EXP -> null .)
    diferente1      reduce using rule 341 (EXP -> null .)
    diferente2      reduce using rule 341 (EXP -> null .)
    between         reduce using rule 341 (EXP -> null .)
    is              reduce using rule 341 (EXP -> null .)
    not             reduce using rule 341 (EXP -> null .)
    as              reduce using rule 341 (EXP -> null .)
    like            reduce using rule 341 (EXP -> null .)
    isnull          reduce using rule 341 (EXP -> null .)
    notnull         reduce using rule 341 (EXP -> null .)
    cadenaString    reduce using rule 341 (EXP -> null .)
    id              reduce using rule 341 (EXP -> null .)
    cadena          reduce using rule 341 (EXP -> null .)
    in              reduce using rule 341 (EXP -> null .)
    then            reduce using rule 341 (EXP -> null .)
    when            reduce using rule 341 (EXP -> null .)
    parc            reduce using rule 341 (EXP -> null .)
    constraint      reduce using rule 341 (EXP -> null .)
    primary         reduce using rule 341 (EXP -> null .)
    null            reduce using rule 341 (EXP -> null .)
    unique          reduce using rule 341 (EXP -> null .)
    references      reduce using rule 341 (EXP -> null .)
    check           reduce using rule 341 (EXP -> null .)
    default         reduce using rule 341 (EXP -> null .)
    asc             reduce using rule 341 (EXP -> null .)
    desc            reduce using rule 341 (EXP -> null .)


state 66

    (337) EXP -> true .

    r_from          reduce using rule 337 (EXP -> true .)
    coma            reduce using rule 337 (EXP -> true .)
    where           reduce using rule 337 (EXP -> true .)
    group           reduce using rule 337 (EXP -> true .)
    having          reduce using rule 337 (EXP -> true .)
    union           reduce using rule 337 (EXP -> true .)
    intersect       reduce using rule 337 (EXP -> true .)
    except          reduce using rule 337 (EXP -> true .)
    order           reduce using rule 337 (EXP -> true .)
    limit           reduce using rule 337 (EXP -> true .)
    offset          reduce using rule 337 (EXP -> true .)
    ptcoma          reduce using rule 337 (EXP -> true .)
    mas             reduce using rule 337 (EXP -> true .)
    menos           reduce using rule 337 (EXP -> true .)
    multiplicacion  reduce using rule 337 (EXP -> true .)
    division        reduce using rule 337 (EXP -> true .)
    modulo          reduce using rule 337 (EXP -> true .)
    elevado         reduce using rule 337 (EXP -> true .)
    and             reduce using rule 337 (EXP -> true .)
    or              reduce using rule 337 (EXP -> true .)
    mayor           reduce using rule 337 (EXP -> true .)
    menor           reduce using rule 337 (EXP -> true .)
    mayor_igual     reduce using rule 337 (EXP -> true .)
    menor_igual     reduce using rule 337 (EXP -> true .)
    igual           reduce using rule 337 (EXP -> true .)
    diferente1      reduce using rule 337 (EXP -> true .)
    diferente2      reduce using rule 337 (EXP -> true .)
    between         reduce using rule 337 (EXP -> true .)
    is              reduce using rule 337 (EXP -> true .)
    not             reduce using rule 337 (EXP -> true .)
    as              reduce using rule 337 (EXP -> true .)
    like            reduce using rule 337 (EXP -> true .)
    isnull          reduce using rule 337 (EXP -> true .)
    notnull         reduce using rule 337 (EXP -> true .)
    cadenaString    reduce using rule 337 (EXP -> true .)
    id              reduce using rule 337 (EXP -> true .)
    cadena          reduce using rule 337 (EXP -> true .)
    in              reduce using rule 337 (EXP -> true .)
    then            reduce using rule 337 (EXP -> true .)
    when            reduce using rule 337 (EXP -> true .)
    parc            reduce using rule 337 (EXP -> true .)
    constraint      reduce using rule 337 (EXP -> true .)
    primary         reduce using rule 337 (EXP -> true .)
    null            reduce using rule 337 (EXP -> true .)
    unique          reduce using rule 337 (EXP -> true .)
    references      reduce using rule 337 (EXP -> true .)
    check           reduce using rule 337 (EXP -> true .)
    default         reduce using rule 337 (EXP -> true .)
    asc             reduce using rule 337 (EXP -> true .)
    desc            reduce using rule 337 (EXP -> true .)


state 67

    (338) EXP -> false .

    r_from          reduce using rule 338 (EXP -> false .)
    coma            reduce using rule 338 (EXP -> false .)
    where           reduce using rule 338 (EXP -> false .)
    group           reduce using rule 338 (EXP -> false .)
    having          reduce using rule 338 (EXP -> false .)
    union           reduce using rule 338 (EXP -> false .)
    intersect       reduce using rule 338 (EXP -> false .)
    except          reduce using rule 338 (EXP -> false .)
    order           reduce using rule 338 (EXP -> false .)
    limit           reduce using rule 338 (EXP -> false .)
    offset          reduce using rule 338 (EXP -> false .)
    ptcoma          reduce using rule 338 (EXP -> false .)
    mas             reduce using rule 338 (EXP -> false .)
    menos           reduce using rule 338 (EXP -> false .)
    multiplicacion  reduce using rule 338 (EXP -> false .)
    division        reduce using rule 338 (EXP -> false .)
    modulo          reduce using rule 338 (EXP -> false .)
    elevado         reduce using rule 338 (EXP -> false .)
    and             reduce using rule 338 (EXP -> false .)
    or              reduce using rule 338 (EXP -> false .)
    mayor           reduce using rule 338 (EXP -> false .)
    menor           reduce using rule 338 (EXP -> false .)
    mayor_igual     reduce using rule 338 (EXP -> false .)
    menor_igual     reduce using rule 338 (EXP -> false .)
    igual           reduce using rule 338 (EXP -> false .)
    diferente1      reduce using rule 338 (EXP -> false .)
    diferente2      reduce using rule 338 (EXP -> false .)
    between         reduce using rule 338 (EXP -> false .)
    is              reduce using rule 338 (EXP -> false .)
    not             reduce using rule 338 (EXP -> false .)
    as              reduce using rule 338 (EXP -> false .)
    like            reduce using rule 338 (EXP -> false .)
    isnull          reduce using rule 338 (EXP -> false .)
    notnull         reduce using rule 338 (EXP -> false .)
    cadenaString    reduce using rule 338 (EXP -> false .)
    id              reduce using rule 338 (EXP -> false .)
    cadena          reduce using rule 338 (EXP -> false .)
    in              reduce using rule 338 (EXP -> false .)
    then            reduce using rule 338 (EXP -> false .)
    when            reduce using rule 338 (EXP -> false .)
    parc            reduce using rule 338 (EXP -> false .)
    constraint      reduce using rule 338 (EXP -> false .)
    primary         reduce using rule 338 (EXP -> false .)
    null            reduce using rule 338 (EXP -> false .)
    unique          reduce using rule 338 (EXP -> false .)
    references      reduce using rule 338 (EXP -> false .)
    check           reduce using rule 338 (EXP -> false .)
    default         reduce using rule 338 (EXP -> false .)
    asc             reduce using rule 338 (EXP -> false .)
    desc            reduce using rule 338 (EXP -> false .)


state 68

    (332) EXP -> cadena . as TIPO
    (335) EXP -> cadena .

  ! shift/reduce conflict for as resolved as shift
    as              shift and go to state 155
    r_from          reduce using rule 335 (EXP -> cadena .)
    coma            reduce using rule 335 (EXP -> cadena .)
    where           reduce using rule 335 (EXP -> cadena .)
    group           reduce using rule 335 (EXP -> cadena .)
    having          reduce using rule 335 (EXP -> cadena .)
    union           reduce using rule 335 (EXP -> cadena .)
    intersect       reduce using rule 335 (EXP -> cadena .)
    except          reduce using rule 335 (EXP -> cadena .)
    order           reduce using rule 335 (EXP -> cadena .)
    limit           reduce using rule 335 (EXP -> cadena .)
    offset          reduce using rule 335 (EXP -> cadena .)
    ptcoma          reduce using rule 335 (EXP -> cadena .)
    mas             reduce using rule 335 (EXP -> cadena .)
    menos           reduce using rule 335 (EXP -> cadena .)
    multiplicacion  reduce using rule 335 (EXP -> cadena .)
    division        reduce using rule 335 (EXP -> cadena .)
    modulo          reduce using rule 335 (EXP -> cadena .)
    elevado         reduce using rule 335 (EXP -> cadena .)
    and             reduce using rule 335 (EXP -> cadena .)
    or              reduce using rule 335 (EXP -> cadena .)
    mayor           reduce using rule 335 (EXP -> cadena .)
    menor           reduce using rule 335 (EXP -> cadena .)
    mayor_igual     reduce using rule 335 (EXP -> cadena .)
    menor_igual     reduce using rule 335 (EXP -> cadena .)
    igual           reduce using rule 335 (EXP -> cadena .)
    diferente1      reduce using rule 335 (EXP -> cadena .)
    diferente2      reduce using rule 335 (EXP -> cadena .)
    between         reduce using rule 335 (EXP -> cadena .)
    is              reduce using rule 335 (EXP -> cadena .)
    not             reduce using rule 335 (EXP -> cadena .)
    like            reduce using rule 335 (EXP -> cadena .)
    isnull          reduce using rule 335 (EXP -> cadena .)
    notnull         reduce using rule 335 (EXP -> cadena .)
    cadenaString    reduce using rule 335 (EXP -> cadena .)
    id              reduce using rule 335 (EXP -> cadena .)
    cadena          reduce using rule 335 (EXP -> cadena .)
    in              reduce using rule 335 (EXP -> cadena .)
    then            reduce using rule 335 (EXP -> cadena .)
    when            reduce using rule 335 (EXP -> cadena .)
    parc            reduce using rule 335 (EXP -> cadena .)
    constraint      reduce using rule 335 (EXP -> cadena .)
    primary         reduce using rule 335 (EXP -> cadena .)
    null            reduce using rule 335 (EXP -> cadena .)
    unique          reduce using rule 335 (EXP -> cadena .)
    references      reduce using rule 335 (EXP -> cadena .)
    check           reduce using rule 335 (EXP -> cadena .)
    default         reduce using rule 335 (EXP -> cadena .)
    asc             reduce using rule 335 (EXP -> cadena .)
    desc            reduce using rule 335 (EXP -> cadena .)

  ! as              [ reduce using rule 335 (EXP -> cadena .) ]


state 69

    (326) EXP -> id . para parc
    (327) EXP -> id . para LEXP parc
    (339) EXP -> id .

    para            shift and go to state 156
    r_from          reduce using rule 339 (EXP -> id .)
    coma            reduce using rule 339 (EXP -> id .)
    where           reduce using rule 339 (EXP -> id .)
    group           reduce using rule 339 (EXP -> id .)
    having          reduce using rule 339 (EXP -> id .)
    union           reduce using rule 339 (EXP -> id .)
    intersect       reduce using rule 339 (EXP -> id .)
    except          reduce using rule 339 (EXP -> id .)
    order           reduce using rule 339 (EXP -> id .)
    limit           reduce using rule 339 (EXP -> id .)
    offset          reduce using rule 339 (EXP -> id .)
    ptcoma          reduce using rule 339 (EXP -> id .)
    mas             reduce using rule 339 (EXP -> id .)
    menos           reduce using rule 339 (EXP -> id .)
    multiplicacion  reduce using rule 339 (EXP -> id .)
    division        reduce using rule 339 (EXP -> id .)
    modulo          reduce using rule 339 (EXP -> id .)
    elevado         reduce using rule 339 (EXP -> id .)
    and             reduce using rule 339 (EXP -> id .)
    or              reduce using rule 339 (EXP -> id .)
    mayor           reduce using rule 339 (EXP -> id .)
    menor           reduce using rule 339 (EXP -> id .)
    mayor_igual     reduce using rule 339 (EXP -> id .)
    menor_igual     reduce using rule 339 (EXP -> id .)
    igual           reduce using rule 339 (EXP -> id .)
    diferente1      reduce using rule 339 (EXP -> id .)
    diferente2      reduce using rule 339 (EXP -> id .)
    between         reduce using rule 339 (EXP -> id .)
    is              reduce using rule 339 (EXP -> id .)
    not             reduce using rule 339 (EXP -> id .)
    as              reduce using rule 339 (EXP -> id .)
    like            reduce using rule 339 (EXP -> id .)
    isnull          reduce using rule 339 (EXP -> id .)
    notnull         reduce using rule 339 (EXP -> id .)
    cadenaString    reduce using rule 339 (EXP -> id .)
    id              reduce using rule 339 (EXP -> id .)
    cadena          reduce using rule 339 (EXP -> id .)
    in              reduce using rule 339 (EXP -> id .)
    then            reduce using rule 339 (EXP -> id .)
    when            reduce using rule 339 (EXP -> id .)
    parc            reduce using rule 339 (EXP -> id .)
    constraint      reduce using rule 339 (EXP -> id .)
    primary         reduce using rule 339 (EXP -> id .)
    null            reduce using rule 339 (EXP -> id .)
    unique          reduce using rule 339 (EXP -> id .)
    references      reduce using rule 339 (EXP -> id .)
    check           reduce using rule 339 (EXP -> id .)
    default         reduce using rule 339 (EXP -> id .)
    asc             reduce using rule 339 (EXP -> id .)
    desc            reduce using rule 339 (EXP -> id .)


state 70

    (336) EXP -> cadenaString .

    r_from          reduce using rule 336 (EXP -> cadenaString .)
    coma            reduce using rule 336 (EXP -> cadenaString .)
    where           reduce using rule 336 (EXP -> cadenaString .)
    group           reduce using rule 336 (EXP -> cadenaString .)
    having          reduce using rule 336 (EXP -> cadenaString .)
    union           reduce using rule 336 (EXP -> cadenaString .)
    intersect       reduce using rule 336 (EXP -> cadenaString .)
    except          reduce using rule 336 (EXP -> cadenaString .)
    order           reduce using rule 336 (EXP -> cadenaString .)
    limit           reduce using rule 336 (EXP -> cadenaString .)
    offset          reduce using rule 336 (EXP -> cadenaString .)
    ptcoma          reduce using rule 336 (EXP -> cadenaString .)
    mas             reduce using rule 336 (EXP -> cadenaString .)
    menos           reduce using rule 336 (EXP -> cadenaString .)
    multiplicacion  reduce using rule 336 (EXP -> cadenaString .)
    division        reduce using rule 336 (EXP -> cadenaString .)
    modulo          reduce using rule 336 (EXP -> cadenaString .)
    elevado         reduce using rule 336 (EXP -> cadenaString .)
    and             reduce using rule 336 (EXP -> cadenaString .)
    or              reduce using rule 336 (EXP -> cadenaString .)
    mayor           reduce using rule 336 (EXP -> cadenaString .)
    menor           reduce using rule 336 (EXP -> cadenaString .)
    mayor_igual     reduce using rule 336 (EXP -> cadenaString .)
    menor_igual     reduce using rule 336 (EXP -> cadenaString .)
    igual           reduce using rule 336 (EXP -> cadenaString .)
    diferente1      reduce using rule 336 (EXP -> cadenaString .)
    diferente2      reduce using rule 336 (EXP -> cadenaString .)
    between         reduce using rule 336 (EXP -> cadenaString .)
    is              reduce using rule 336 (EXP -> cadenaString .)
    not             reduce using rule 336 (EXP -> cadenaString .)
    as              reduce using rule 336 (EXP -> cadenaString .)
    like            reduce using rule 336 (EXP -> cadenaString .)
    isnull          reduce using rule 336 (EXP -> cadenaString .)
    notnull         reduce using rule 336 (EXP -> cadenaString .)
    cadenaString    reduce using rule 336 (EXP -> cadenaString .)
    id              reduce using rule 336 (EXP -> cadenaString .)
    cadena          reduce using rule 336 (EXP -> cadenaString .)
    in              reduce using rule 336 (EXP -> cadenaString .)
    then            reduce using rule 336 (EXP -> cadenaString .)
    when            reduce using rule 336 (EXP -> cadenaString .)
    parc            reduce using rule 336 (EXP -> cadenaString .)
    constraint      reduce using rule 336 (EXP -> cadenaString .)
    primary         reduce using rule 336 (EXP -> cadenaString .)
    null            reduce using rule 336 (EXP -> cadenaString .)
    unique          reduce using rule 336 (EXP -> cadenaString .)
    references      reduce using rule 336 (EXP -> cadenaString .)
    check           reduce using rule 336 (EXP -> cadenaString .)
    default         reduce using rule 336 (EXP -> cadenaString .)
    asc             reduce using rule 336 (EXP -> cadenaString .)
    desc            reduce using rule 336 (EXP -> cadenaString .)


state 71

    (325) EXP -> para . EXP parc
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 157
    SELECT                         shift and go to state 72

state 72

    (324) EXP -> SELECT .

    r_from          reduce using rule 324 (EXP -> SELECT .)
    coma            reduce using rule 324 (EXP -> SELECT .)
    where           reduce using rule 324 (EXP -> SELECT .)
    group           reduce using rule 324 (EXP -> SELECT .)
    having          reduce using rule 324 (EXP -> SELECT .)
    union           reduce using rule 324 (EXP -> SELECT .)
    intersect       reduce using rule 324 (EXP -> SELECT .)
    except          reduce using rule 324 (EXP -> SELECT .)
    order           reduce using rule 324 (EXP -> SELECT .)
    limit           reduce using rule 324 (EXP -> SELECT .)
    offset          reduce using rule 324 (EXP -> SELECT .)
    ptcoma          reduce using rule 324 (EXP -> SELECT .)
    mas             reduce using rule 324 (EXP -> SELECT .)
    menos           reduce using rule 324 (EXP -> SELECT .)
    multiplicacion  reduce using rule 324 (EXP -> SELECT .)
    division        reduce using rule 324 (EXP -> SELECT .)
    modulo          reduce using rule 324 (EXP -> SELECT .)
    elevado         reduce using rule 324 (EXP -> SELECT .)
    and             reduce using rule 324 (EXP -> SELECT .)
    or              reduce using rule 324 (EXP -> SELECT .)
    mayor           reduce using rule 324 (EXP -> SELECT .)
    menor           reduce using rule 324 (EXP -> SELECT .)
    mayor_igual     reduce using rule 324 (EXP -> SELECT .)
    menor_igual     reduce using rule 324 (EXP -> SELECT .)
    igual           reduce using rule 324 (EXP -> SELECT .)
    diferente1      reduce using rule 324 (EXP -> SELECT .)
    diferente2      reduce using rule 324 (EXP -> SELECT .)
    between         reduce using rule 324 (EXP -> SELECT .)
    is              reduce using rule 324 (EXP -> SELECT .)
    not             reduce using rule 324 (EXP -> SELECT .)
    as              reduce using rule 324 (EXP -> SELECT .)
    like            reduce using rule 324 (EXP -> SELECT .)
    isnull          reduce using rule 324 (EXP -> SELECT .)
    notnull         reduce using rule 324 (EXP -> SELECT .)
    cadenaString    reduce using rule 324 (EXP -> SELECT .)
    id              reduce using rule 324 (EXP -> SELECT .)
    cadena          reduce using rule 324 (EXP -> SELECT .)
    in              reduce using rule 324 (EXP -> SELECT .)
    then            reduce using rule 324 (EXP -> SELECT .)
    when            reduce using rule 324 (EXP -> SELECT .)
    parc            reduce using rule 324 (EXP -> SELECT .)
    constraint      reduce using rule 324 (EXP -> SELECT .)
    primary         reduce using rule 324 (EXP -> SELECT .)
    null            reduce using rule 324 (EXP -> SELECT .)
    unique          reduce using rule 324 (EXP -> SELECT .)
    references      reduce using rule 324 (EXP -> SELECT .)
    check           reduce using rule 324 (EXP -> SELECT .)
    default         reduce using rule 324 (EXP -> SELECT .)
    asc             reduce using rule 324 (EXP -> SELECT .)
    desc            reduce using rule 324 (EXP -> SELECT .)


state 73

    (328) EXP -> any . para LEXP parc

    para            shift and go to state 158


state 74

    (329) EXP -> all . para LEXP parc

    para            shift and go to state 159


state 75

    (330) EXP -> some . para LEXP parc

    para            shift and go to state 160


state 76

    (331) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 161


state 77

    (346) EXP -> timestamp . cadena

    cadena          shift and go to state 162


state 78

    (333) EXP -> int .

    r_from          reduce using rule 333 (EXP -> int .)
    coma            reduce using rule 333 (EXP -> int .)
    where           reduce using rule 333 (EXP -> int .)
    group           reduce using rule 333 (EXP -> int .)
    having          reduce using rule 333 (EXP -> int .)
    union           reduce using rule 333 (EXP -> int .)
    intersect       reduce using rule 333 (EXP -> int .)
    except          reduce using rule 333 (EXP -> int .)
    order           reduce using rule 333 (EXP -> int .)
    limit           reduce using rule 333 (EXP -> int .)
    offset          reduce using rule 333 (EXP -> int .)
    ptcoma          reduce using rule 333 (EXP -> int .)
    mas             reduce using rule 333 (EXP -> int .)
    menos           reduce using rule 333 (EXP -> int .)
    multiplicacion  reduce using rule 333 (EXP -> int .)
    division        reduce using rule 333 (EXP -> int .)
    modulo          reduce using rule 333 (EXP -> int .)
    elevado         reduce using rule 333 (EXP -> int .)
    and             reduce using rule 333 (EXP -> int .)
    or              reduce using rule 333 (EXP -> int .)
    mayor           reduce using rule 333 (EXP -> int .)
    menor           reduce using rule 333 (EXP -> int .)
    mayor_igual     reduce using rule 333 (EXP -> int .)
    menor_igual     reduce using rule 333 (EXP -> int .)
    igual           reduce using rule 333 (EXP -> int .)
    diferente1      reduce using rule 333 (EXP -> int .)
    diferente2      reduce using rule 333 (EXP -> int .)
    between         reduce using rule 333 (EXP -> int .)
    is              reduce using rule 333 (EXP -> int .)
    not             reduce using rule 333 (EXP -> int .)
    as              reduce using rule 333 (EXP -> int .)
    like            reduce using rule 333 (EXP -> int .)
    isnull          reduce using rule 333 (EXP -> int .)
    notnull         reduce using rule 333 (EXP -> int .)
    cadenaString    reduce using rule 333 (EXP -> int .)
    id              reduce using rule 333 (EXP -> int .)
    cadena          reduce using rule 333 (EXP -> int .)
    in              reduce using rule 333 (EXP -> int .)
    then            reduce using rule 333 (EXP -> int .)
    when            reduce using rule 333 (EXP -> int .)
    parc            reduce using rule 333 (EXP -> int .)
    constraint      reduce using rule 333 (EXP -> int .)
    primary         reduce using rule 333 (EXP -> int .)
    null            reduce using rule 333 (EXP -> int .)
    unique          reduce using rule 333 (EXP -> int .)
    references      reduce using rule 333 (EXP -> int .)
    check           reduce using rule 333 (EXP -> int .)
    default         reduce using rule 333 (EXP -> int .)
    asc             reduce using rule 333 (EXP -> int .)
    desc            reduce using rule 333 (EXP -> int .)


state 79

    (334) EXP -> decimales .

    r_from          reduce using rule 334 (EXP -> decimales .)
    coma            reduce using rule 334 (EXP -> decimales .)
    where           reduce using rule 334 (EXP -> decimales .)
    group           reduce using rule 334 (EXP -> decimales .)
    having          reduce using rule 334 (EXP -> decimales .)
    union           reduce using rule 334 (EXP -> decimales .)
    intersect       reduce using rule 334 (EXP -> decimales .)
    except          reduce using rule 334 (EXP -> decimales .)
    order           reduce using rule 334 (EXP -> decimales .)
    limit           reduce using rule 334 (EXP -> decimales .)
    offset          reduce using rule 334 (EXP -> decimales .)
    ptcoma          reduce using rule 334 (EXP -> decimales .)
    mas             reduce using rule 334 (EXP -> decimales .)
    menos           reduce using rule 334 (EXP -> decimales .)
    multiplicacion  reduce using rule 334 (EXP -> decimales .)
    division        reduce using rule 334 (EXP -> decimales .)
    modulo          reduce using rule 334 (EXP -> decimales .)
    elevado         reduce using rule 334 (EXP -> decimales .)
    and             reduce using rule 334 (EXP -> decimales .)
    or              reduce using rule 334 (EXP -> decimales .)
    mayor           reduce using rule 334 (EXP -> decimales .)
    menor           reduce using rule 334 (EXP -> decimales .)
    mayor_igual     reduce using rule 334 (EXP -> decimales .)
    menor_igual     reduce using rule 334 (EXP -> decimales .)
    igual           reduce using rule 334 (EXP -> decimales .)
    diferente1      reduce using rule 334 (EXP -> decimales .)
    diferente2      reduce using rule 334 (EXP -> decimales .)
    between         reduce using rule 334 (EXP -> decimales .)
    is              reduce using rule 334 (EXP -> decimales .)
    not             reduce using rule 334 (EXP -> decimales .)
    as              reduce using rule 334 (EXP -> decimales .)
    like            reduce using rule 334 (EXP -> decimales .)
    isnull          reduce using rule 334 (EXP -> decimales .)
    notnull         reduce using rule 334 (EXP -> decimales .)
    cadenaString    reduce using rule 334 (EXP -> decimales .)
    id              reduce using rule 334 (EXP -> decimales .)
    cadena          reduce using rule 334 (EXP -> decimales .)
    in              reduce using rule 334 (EXP -> decimales .)
    then            reduce using rule 334 (EXP -> decimales .)
    when            reduce using rule 334 (EXP -> decimales .)
    parc            reduce using rule 334 (EXP -> decimales .)
    constraint      reduce using rule 334 (EXP -> decimales .)
    primary         reduce using rule 334 (EXP -> decimales .)
    null            reduce using rule 334 (EXP -> decimales .)
    unique          reduce using rule 334 (EXP -> decimales .)
    references      reduce using rule 334 (EXP -> decimales .)
    check           reduce using rule 334 (EXP -> decimales .)
    default         reduce using rule 334 (EXP -> decimales .)
    asc             reduce using rule 334 (EXP -> decimales .)
    desc            reduce using rule 334 (EXP -> decimales .)


state 80

    (342) EXP -> idPunto .

    r_from          reduce using rule 342 (EXP -> idPunto .)
    coma            reduce using rule 342 (EXP -> idPunto .)
    where           reduce using rule 342 (EXP -> idPunto .)
    group           reduce using rule 342 (EXP -> idPunto .)
    having          reduce using rule 342 (EXP -> idPunto .)
    union           reduce using rule 342 (EXP -> idPunto .)
    intersect       reduce using rule 342 (EXP -> idPunto .)
    except          reduce using rule 342 (EXP -> idPunto .)
    order           reduce using rule 342 (EXP -> idPunto .)
    limit           reduce using rule 342 (EXP -> idPunto .)
    offset          reduce using rule 342 (EXP -> idPunto .)
    ptcoma          reduce using rule 342 (EXP -> idPunto .)
    mas             reduce using rule 342 (EXP -> idPunto .)
    menos           reduce using rule 342 (EXP -> idPunto .)
    multiplicacion  reduce using rule 342 (EXP -> idPunto .)
    division        reduce using rule 342 (EXP -> idPunto .)
    modulo          reduce using rule 342 (EXP -> idPunto .)
    elevado         reduce using rule 342 (EXP -> idPunto .)
    and             reduce using rule 342 (EXP -> idPunto .)
    or              reduce using rule 342 (EXP -> idPunto .)
    mayor           reduce using rule 342 (EXP -> idPunto .)
    menor           reduce using rule 342 (EXP -> idPunto .)
    mayor_igual     reduce using rule 342 (EXP -> idPunto .)
    menor_igual     reduce using rule 342 (EXP -> idPunto .)
    igual           reduce using rule 342 (EXP -> idPunto .)
    diferente1      reduce using rule 342 (EXP -> idPunto .)
    diferente2      reduce using rule 342 (EXP -> idPunto .)
    between         reduce using rule 342 (EXP -> idPunto .)
    is              reduce using rule 342 (EXP -> idPunto .)
    not             reduce using rule 342 (EXP -> idPunto .)
    as              reduce using rule 342 (EXP -> idPunto .)
    like            reduce using rule 342 (EXP -> idPunto .)
    isnull          reduce using rule 342 (EXP -> idPunto .)
    notnull         reduce using rule 342 (EXP -> idPunto .)
    cadenaString    reduce using rule 342 (EXP -> idPunto .)
    id              reduce using rule 342 (EXP -> idPunto .)
    cadena          reduce using rule 342 (EXP -> idPunto .)
    in              reduce using rule 342 (EXP -> idPunto .)
    then            reduce using rule 342 (EXP -> idPunto .)
    when            reduce using rule 342 (EXP -> idPunto .)
    parc            reduce using rule 342 (EXP -> idPunto .)
    constraint      reduce using rule 342 (EXP -> idPunto .)
    primary         reduce using rule 342 (EXP -> idPunto .)
    null            reduce using rule 342 (EXP -> idPunto .)
    unique          reduce using rule 342 (EXP -> idPunto .)
    references      reduce using rule 342 (EXP -> idPunto .)
    check           reduce using rule 342 (EXP -> idPunto .)
    default         reduce using rule 342 (EXP -> idPunto .)
    asc             reduce using rule 342 (EXP -> idPunto .)
    desc            reduce using rule 342 (EXP -> idPunto .)


state 81

    (343) EXP -> default .

    r_from          reduce using rule 343 (EXP -> default .)
    coma            reduce using rule 343 (EXP -> default .)
    where           reduce using rule 343 (EXP -> default .)
    group           reduce using rule 343 (EXP -> default .)
    having          reduce using rule 343 (EXP -> default .)
    union           reduce using rule 343 (EXP -> default .)
    intersect       reduce using rule 343 (EXP -> default .)
    except          reduce using rule 343 (EXP -> default .)
    order           reduce using rule 343 (EXP -> default .)
    limit           reduce using rule 343 (EXP -> default .)
    offset          reduce using rule 343 (EXP -> default .)
    ptcoma          reduce using rule 343 (EXP -> default .)
    mas             reduce using rule 343 (EXP -> default .)
    menos           reduce using rule 343 (EXP -> default .)
    multiplicacion  reduce using rule 343 (EXP -> default .)
    division        reduce using rule 343 (EXP -> default .)
    modulo          reduce using rule 343 (EXP -> default .)
    elevado         reduce using rule 343 (EXP -> default .)
    and             reduce using rule 343 (EXP -> default .)
    or              reduce using rule 343 (EXP -> default .)
    mayor           reduce using rule 343 (EXP -> default .)
    menor           reduce using rule 343 (EXP -> default .)
    mayor_igual     reduce using rule 343 (EXP -> default .)
    menor_igual     reduce using rule 343 (EXP -> default .)
    igual           reduce using rule 343 (EXP -> default .)
    diferente1      reduce using rule 343 (EXP -> default .)
    diferente2      reduce using rule 343 (EXP -> default .)
    between         reduce using rule 343 (EXP -> default .)
    is              reduce using rule 343 (EXP -> default .)
    not             reduce using rule 343 (EXP -> default .)
    as              reduce using rule 343 (EXP -> default .)
    like            reduce using rule 343 (EXP -> default .)
    isnull          reduce using rule 343 (EXP -> default .)
    notnull         reduce using rule 343 (EXP -> default .)
    cadenaString    reduce using rule 343 (EXP -> default .)
    id              reduce using rule 343 (EXP -> default .)
    cadena          reduce using rule 343 (EXP -> default .)
    in              reduce using rule 343 (EXP -> default .)
    then            reduce using rule 343 (EXP -> default .)
    when            reduce using rule 343 (EXP -> default .)
    parc            reduce using rule 343 (EXP -> default .)
    constraint      reduce using rule 343 (EXP -> default .)
    primary         reduce using rule 343 (EXP -> default .)
    null            reduce using rule 343 (EXP -> default .)
    unique          reduce using rule 343 (EXP -> default .)
    references      reduce using rule 343 (EXP -> default .)
    check           reduce using rule 343 (EXP -> default .)
    default         reduce using rule 343 (EXP -> default .)
    asc             reduce using rule 343 (EXP -> default .)
    desc            reduce using rule 343 (EXP -> default .)


state 82

    (344) EXP -> current_time .

    r_from          reduce using rule 344 (EXP -> current_time .)
    coma            reduce using rule 344 (EXP -> current_time .)
    where           reduce using rule 344 (EXP -> current_time .)
    group           reduce using rule 344 (EXP -> current_time .)
    having          reduce using rule 344 (EXP -> current_time .)
    union           reduce using rule 344 (EXP -> current_time .)
    intersect       reduce using rule 344 (EXP -> current_time .)
    except          reduce using rule 344 (EXP -> current_time .)
    order           reduce using rule 344 (EXP -> current_time .)
    limit           reduce using rule 344 (EXP -> current_time .)
    offset          reduce using rule 344 (EXP -> current_time .)
    ptcoma          reduce using rule 344 (EXP -> current_time .)
    mas             reduce using rule 344 (EXP -> current_time .)
    menos           reduce using rule 344 (EXP -> current_time .)
    multiplicacion  reduce using rule 344 (EXP -> current_time .)
    division        reduce using rule 344 (EXP -> current_time .)
    modulo          reduce using rule 344 (EXP -> current_time .)
    elevado         reduce using rule 344 (EXP -> current_time .)
    and             reduce using rule 344 (EXP -> current_time .)
    or              reduce using rule 344 (EXP -> current_time .)
    mayor           reduce using rule 344 (EXP -> current_time .)
    menor           reduce using rule 344 (EXP -> current_time .)
    mayor_igual     reduce using rule 344 (EXP -> current_time .)
    menor_igual     reduce using rule 344 (EXP -> current_time .)
    igual           reduce using rule 344 (EXP -> current_time .)
    diferente1      reduce using rule 344 (EXP -> current_time .)
    diferente2      reduce using rule 344 (EXP -> current_time .)
    between         reduce using rule 344 (EXP -> current_time .)
    is              reduce using rule 344 (EXP -> current_time .)
    not             reduce using rule 344 (EXP -> current_time .)
    as              reduce using rule 344 (EXP -> current_time .)
    like            reduce using rule 344 (EXP -> current_time .)
    isnull          reduce using rule 344 (EXP -> current_time .)
    notnull         reduce using rule 344 (EXP -> current_time .)
    cadenaString    reduce using rule 344 (EXP -> current_time .)
    id              reduce using rule 344 (EXP -> current_time .)
    cadena          reduce using rule 344 (EXP -> current_time .)
    in              reduce using rule 344 (EXP -> current_time .)
    then            reduce using rule 344 (EXP -> current_time .)
    when            reduce using rule 344 (EXP -> current_time .)
    parc            reduce using rule 344 (EXP -> current_time .)
    constraint      reduce using rule 344 (EXP -> current_time .)
    primary         reduce using rule 344 (EXP -> current_time .)
    null            reduce using rule 344 (EXP -> current_time .)
    unique          reduce using rule 344 (EXP -> current_time .)
    references      reduce using rule 344 (EXP -> current_time .)
    check           reduce using rule 344 (EXP -> current_time .)
    default         reduce using rule 344 (EXP -> current_time .)
    asc             reduce using rule 344 (EXP -> current_time .)
    desc            reduce using rule 344 (EXP -> current_time .)


state 83

    (345) EXP -> current_date .

    r_from          reduce using rule 345 (EXP -> current_date .)
    coma            reduce using rule 345 (EXP -> current_date .)
    where           reduce using rule 345 (EXP -> current_date .)
    group           reduce using rule 345 (EXP -> current_date .)
    having          reduce using rule 345 (EXP -> current_date .)
    union           reduce using rule 345 (EXP -> current_date .)
    intersect       reduce using rule 345 (EXP -> current_date .)
    except          reduce using rule 345 (EXP -> current_date .)
    order           reduce using rule 345 (EXP -> current_date .)
    limit           reduce using rule 345 (EXP -> current_date .)
    offset          reduce using rule 345 (EXP -> current_date .)
    ptcoma          reduce using rule 345 (EXP -> current_date .)
    mas             reduce using rule 345 (EXP -> current_date .)
    menos           reduce using rule 345 (EXP -> current_date .)
    multiplicacion  reduce using rule 345 (EXP -> current_date .)
    division        reduce using rule 345 (EXP -> current_date .)
    modulo          reduce using rule 345 (EXP -> current_date .)
    elevado         reduce using rule 345 (EXP -> current_date .)
    and             reduce using rule 345 (EXP -> current_date .)
    or              reduce using rule 345 (EXP -> current_date .)
    mayor           reduce using rule 345 (EXP -> current_date .)
    menor           reduce using rule 345 (EXP -> current_date .)
    mayor_igual     reduce using rule 345 (EXP -> current_date .)
    menor_igual     reduce using rule 345 (EXP -> current_date .)
    igual           reduce using rule 345 (EXP -> current_date .)
    diferente1      reduce using rule 345 (EXP -> current_date .)
    diferente2      reduce using rule 345 (EXP -> current_date .)
    between         reduce using rule 345 (EXP -> current_date .)
    is              reduce using rule 345 (EXP -> current_date .)
    not             reduce using rule 345 (EXP -> current_date .)
    as              reduce using rule 345 (EXP -> current_date .)
    like            reduce using rule 345 (EXP -> current_date .)
    isnull          reduce using rule 345 (EXP -> current_date .)
    notnull         reduce using rule 345 (EXP -> current_date .)
    cadenaString    reduce using rule 345 (EXP -> current_date .)
    id              reduce using rule 345 (EXP -> current_date .)
    cadena          reduce using rule 345 (EXP -> current_date .)
    in              reduce using rule 345 (EXP -> current_date .)
    then            reduce using rule 345 (EXP -> current_date .)
    when            reduce using rule 345 (EXP -> current_date .)
    parc            reduce using rule 345 (EXP -> current_date .)
    constraint      reduce using rule 345 (EXP -> current_date .)
    primary         reduce using rule 345 (EXP -> current_date .)
    null            reduce using rule 345 (EXP -> current_date .)
    unique          reduce using rule 345 (EXP -> current_date .)
    references      reduce using rule 345 (EXP -> current_date .)
    check           reduce using rule 345 (EXP -> current_date .)
    default         reduce using rule 345 (EXP -> current_date .)
    asc             reduce using rule 345 (EXP -> current_date .)
    desc            reduce using rule 345 (EXP -> current_date .)


state 84

    (347) EXP -> interval . cadena

    cadena          shift and go to state 163


state 85

    (167) CREATETABLE -> create table . id para LDEF parc ptcoma
    (168) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 164


state 86

    (198) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 165


state 87

    (150) CREATEDB -> create RD . if not exist id
    (151) CREATEDB -> create RD . if not exist id OPCCDB
    (152) CREATEDB -> create RD . id
    (153) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 166
    id              shift and go to state 167


state 88

    (50) CREATEINDEX -> create index . id on id para LEXP parc
    (52) CREATEINDEX -> create index . id on id using hash para LEXP parc
    (53) CREATEINDEX -> create index . id on id para id ORDEN parc
    (54) CREATEINDEX -> create index . id on id para id id ORDEN parc
    (55) CREATEINDEX -> create index . id on id para id id parc

    id              shift and go to state 168


state 89

    (51) CREATEINDEX -> create unique . index id on id para LEXP parc

    index           shift and go to state 169


state 90

    (35) PROCEDIMIENTOS -> create procedure . id para LPARAM parc LENGUAJE LCONTENIDOP
    (36) PROCEDIMIENTOS -> create procedure . id para LPARAM parc LCONTENIDOP LENGUAJE
    (37) PROCEDIMIENTOS -> create procedure . id para parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create procedure . id para parc LCONTENIDOP LENGUAJE

    id              shift and go to state 170


state 91

    (26) FUNCIONES -> create function . id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function . id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> create function . id para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function . id para parc RETURNP LCONTENIDOP LENGUAJE

    id              shift and go to state 171


state 92

    (157) RD -> or . replace databases

    replace         shift and go to state 172


state 93

    (158) RD -> databases .

    if              reduce using rule 158 (RD -> databases .)
    id              reduce using rule 158 (RD -> databases .)


state 94

    (227) UPDATE -> update id . set LCAMPOS where LEXP

    set             shift and go to state 173


state 95

    (230) DELETE -> delete r_from . id WHERE

    id              shift and go to state 174


state 96

    (123) ALTER -> alter databases . id RO

    id              shift and go to state 175


state 97

    (124) ALTER -> alter table . id LOP

    id              shift and go to state 176


state 98

    (127) ALTER -> alter index . id alter EXP
    (128) ALTER -> alter index . if exist id alter EXP
    (129) ALTER -> alter index . id alter column EXP
    (130) ALTER -> alter index . if exist id alter column EXP

    id              shift and go to state 177
    if              shift and go to state 178


state 99

    (76) CONDICIONIF -> if EXP . then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> if EXP . then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> if EXP . then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> if EXP . then LISTACONTENIDO end if
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    then            shift and go to state 179
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 100

    (118) DROP -> drop all . para parc

    para            shift and go to state 180


state 101

    (119) DROP -> drop table . id

    id              shift and go to state 181


state 102

    (120) DROP -> drop index . id

    id              shift and go to state 182


state 103

    (121) DROP -> drop databases . id
    (122) DROP -> drop databases . if exist id

    id              shift and go to state 183
    if              shift and go to state 184


state 104

    (30) DROPFUNC -> drop function . id
    (31) DROPFUNC -> drop function . if exist id

    id              shift and go to state 185
    if              shift and go to state 186


state 105

    (116) INSERT -> insert into . id values para LEXP parc
    (117) INSERT -> insert into . id para LEXP parc values para LEXP parc

    id              shift and go to state 187


state 106

    (83) CASE -> case EXP . LISTAWHEN ELSEF end case
    (85) CASE -> case EXP . LISTAWHEN end
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP
    (112) LISTAWHEN -> . LISTAWHEN WHEN
    (113) LISTAWHEN -> . WHEN
    (114) WHEN -> . when EXP then LISTACONTENIDO

    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151
    when            shift and go to state 109

    LISTAWHEN                      shift and go to state 188
    WHEN                           shift and go to state 108

state 107

    (84) CASE -> case LISTAWHEN . ELSEF end case
    (86) CASE -> case LISTAWHEN . end case
    (112) LISTAWHEN -> LISTAWHEN . WHEN
    (82) ELSEF -> . else LISTACONTENIDO
    (114) WHEN -> . when EXP then LISTACONTENIDO

    end             shift and go to state 190
    else            shift and go to state 192
    when            shift and go to state 109

    ELSEF                          shift and go to state 189
    WHEN                           shift and go to state 191

state 108

    (113) LISTAWHEN -> WHEN .

    end             reduce using rule 113 (LISTAWHEN -> WHEN .)
    else            reduce using rule 113 (LISTAWHEN -> WHEN .)
    when            reduce using rule 113 (LISTAWHEN -> WHEN .)


state 109

    (114) WHEN -> when . EXP then LISTACONTENIDO
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 193
    SELECT                         shift and go to state 72

state 110

    (147) SHOWDB -> show dbs .

    ptcoma          reduce using rule 147 (SHOWDB -> show dbs .)


state 111

    (148) SHOW -> show tables . para id parc

    para            shift and go to state 194


state 112

    (149) SHOW -> show collection . para parc

    para            shift and go to state 195


state 113

    (33) CALLPROCEDURE -> execute id . para LEXP parc
    (34) CALLPROCEDURE -> execute id . para parc

    para            shift and go to state 196


state 114

    (24) instruccion -> CREATEINDEX WHERE ptcoma .

    use             reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    select          reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    create          reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    update          reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    delete          reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    alter           reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    drop            reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    insert          reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    case            reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    show            reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    id              reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    if              reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    execute         reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)
    $end            reduce using rule 24 (instruccion -> CREATEINDEX WHERE ptcoma .)


state 115

    (210) WHERE -> where EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for like resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
    ptcoma          reduce using rule 210 (WHERE -> where EXP .)
    r_from          reduce using rule 210 (WHERE -> where EXP .)
    coma            reduce using rule 210 (WHERE -> where EXP .)
    where           reduce using rule 210 (WHERE -> where EXP .)
    group           reduce using rule 210 (WHERE -> where EXP .)
    having          reduce using rule 210 (WHERE -> where EXP .)
    union           reduce using rule 210 (WHERE -> where EXP .)
    intersect       reduce using rule 210 (WHERE -> where EXP .)
    except          reduce using rule 210 (WHERE -> where EXP .)
    order           reduce using rule 210 (WHERE -> where EXP .)
    limit           reduce using rule 210 (WHERE -> where EXP .)
    offset          reduce using rule 210 (WHERE -> where EXP .)
    then            reduce using rule 210 (WHERE -> where EXP .)
    when            reduce using rule 210 (WHERE -> where EXP .)
    parc            reduce using rule 210 (WHERE -> where EXP .)
    constraint      reduce using rule 210 (WHERE -> where EXP .)
    primary         reduce using rule 210 (WHERE -> where EXP .)
    null            reduce using rule 210 (WHERE -> where EXP .)
    unique          reduce using rule 210 (WHERE -> where EXP .)
    references      reduce using rule 210 (WHERE -> where EXP .)
    check           reduce using rule 210 (WHERE -> where EXP .)
    default         reduce using rule 210 (WHERE -> where EXP .)
    asc             reduce using rule 210 (WHERE -> where EXP .)
    desc            reduce using rule 210 (WHERE -> where EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151

  ! mas             [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! menos           [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! multiplicacion  [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! division        [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! modulo          [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! elevado         [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! and             [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! or              [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! mayor           [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! menor           [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! mayor_igual     [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! menor_igual     [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! igual           [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! diferente1      [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! diferente2      [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! between         [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! is              [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! not             [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! as              [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! like            [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! isnull          [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! notnull         [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! cadenaString    [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! id              [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! cadena          [ reduce using rule 210 (WHERE -> where EXP .) ]
  ! in              [ reduce using rule 210 (WHERE -> where EXP .) ]


state 116

    (212) WHERE -> where EXIST .

    ptcoma          reduce using rule 212 (WHERE -> where EXIST .)
    r_from          reduce using rule 212 (WHERE -> where EXIST .)
    coma            reduce using rule 212 (WHERE -> where EXIST .)
    where           reduce using rule 212 (WHERE -> where EXIST .)
    group           reduce using rule 212 (WHERE -> where EXIST .)
    having          reduce using rule 212 (WHERE -> where EXIST .)
    union           reduce using rule 212 (WHERE -> where EXIST .)
    intersect       reduce using rule 212 (WHERE -> where EXIST .)
    except          reduce using rule 212 (WHERE -> where EXIST .)
    order           reduce using rule 212 (WHERE -> where EXIST .)
    limit           reduce using rule 212 (WHERE -> where EXIST .)
    offset          reduce using rule 212 (WHERE -> where EXIST .)
    mas             reduce using rule 212 (WHERE -> where EXIST .)
    menos           reduce using rule 212 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 212 (WHERE -> where EXIST .)
    division        reduce using rule 212 (WHERE -> where EXIST .)
    modulo          reduce using rule 212 (WHERE -> where EXIST .)
    elevado         reduce using rule 212 (WHERE -> where EXIST .)
    and             reduce using rule 212 (WHERE -> where EXIST .)
    or              reduce using rule 212 (WHERE -> where EXIST .)
    mayor           reduce using rule 212 (WHERE -> where EXIST .)
    menor           reduce using rule 212 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 212 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 212 (WHERE -> where EXIST .)
    igual           reduce using rule 212 (WHERE -> where EXIST .)
    diferente1      reduce using rule 212 (WHERE -> where EXIST .)
    diferente2      reduce using rule 212 (WHERE -> where EXIST .)
    between         reduce using rule 212 (WHERE -> where EXIST .)
    is              reduce using rule 212 (WHERE -> where EXIST .)
    not             reduce using rule 212 (WHERE -> where EXIST .)
    as              reduce using rule 212 (WHERE -> where EXIST .)
    like            reduce using rule 212 (WHERE -> where EXIST .)
    isnull          reduce using rule 212 (WHERE -> where EXIST .)
    notnull         reduce using rule 212 (WHERE -> where EXIST .)
    cadenaString    reduce using rule 212 (WHERE -> where EXIST .)
    id              reduce using rule 212 (WHERE -> where EXIST .)
    cadena          reduce using rule 212 (WHERE -> where EXIST .)
    in              reduce using rule 212 (WHERE -> where EXIST .)
    then            reduce using rule 212 (WHERE -> where EXIST .)
    when            reduce using rule 212 (WHERE -> where EXIST .)
    parc            reduce using rule 212 (WHERE -> where EXIST .)
    constraint      reduce using rule 212 (WHERE -> where EXIST .)
    primary         reduce using rule 212 (WHERE -> where EXIST .)
    null            reduce using rule 212 (WHERE -> where EXIST .)
    unique          reduce using rule 212 (WHERE -> where EXIST .)
    references      reduce using rule 212 (WHERE -> where EXIST .)
    check           reduce using rule 212 (WHERE -> where EXIST .)
    default         reduce using rule 212 (WHERE -> where EXIST .)
    asc             reduce using rule 212 (WHERE -> where EXIST .)
    desc            reduce using rule 212 (WHERE -> where EXIST .)


state 117

    (316) EXP -> not . EXP
    (232) EXIST -> not . exist para SELECT parc
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    exist           shift and go to state 197
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 154
    SELECT                         shift and go to state 72

state 118

    (231) EXIST -> exist . para SELECT parc

    para            shift and go to state 198


state 119

    (23) instruccion -> use id ptcoma .

    use             reduce using rule 23 (instruccion -> use id ptcoma .)
    select          reduce using rule 23 (instruccion -> use id ptcoma .)
    create          reduce using rule 23 (instruccion -> use id ptcoma .)
    update          reduce using rule 23 (instruccion -> use id ptcoma .)
    delete          reduce using rule 23 (instruccion -> use id ptcoma .)
    alter           reduce using rule 23 (instruccion -> use id ptcoma .)
    drop            reduce using rule 23 (instruccion -> use id ptcoma .)
    insert          reduce using rule 23 (instruccion -> use id ptcoma .)
    case            reduce using rule 23 (instruccion -> use id ptcoma .)
    show            reduce using rule 23 (instruccion -> use id ptcoma .)
    id              reduce using rule 23 (instruccion -> use id ptcoma .)
    if              reduce using rule 23 (instruccion -> use id ptcoma .)
    execute         reduce using rule 23 (instruccion -> use id ptcoma .)
    $end            reduce using rule 23 (instruccion -> use id ptcoma .)


state 120

    (74) ASIGNACION -> id dospuntos igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 199
    SELECT                         shift and go to state 72

state 121

    (75) ASIGNACION -> id igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 75 (ASIGNACION -> id igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 122

    (199) SELECT -> select distinct LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (233) LEXP -> LEXP . coma EXP

    r_from          shift and go to state 200
    coma            shift and go to state 125


state 123

    (200) SELECT -> select LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 201
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 124

    (201) SELECT -> select LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (218) GROUP -> . group by LEXP
    (219) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 203
    r_from          reduce using rule 219 (GROUP -> .)
    coma            reduce using rule 219 (GROUP -> .)
    where           reduce using rule 219 (GROUP -> .)
    having          reduce using rule 219 (GROUP -> .)
    union           reduce using rule 219 (GROUP -> .)
    intersect       reduce using rule 219 (GROUP -> .)
    except          reduce using rule 219 (GROUP -> .)
    order           reduce using rule 219 (GROUP -> .)
    limit           reduce using rule 219 (GROUP -> .)
    offset          reduce using rule 219 (GROUP -> .)
    ptcoma          reduce using rule 219 (GROUP -> .)
    mas             reduce using rule 219 (GROUP -> .)
    menos           reduce using rule 219 (GROUP -> .)
    multiplicacion  reduce using rule 219 (GROUP -> .)
    division        reduce using rule 219 (GROUP -> .)
    modulo          reduce using rule 219 (GROUP -> .)
    elevado         reduce using rule 219 (GROUP -> .)
    and             reduce using rule 219 (GROUP -> .)
    or              reduce using rule 219 (GROUP -> .)
    mayor           reduce using rule 219 (GROUP -> .)
    menor           reduce using rule 219 (GROUP -> .)
    mayor_igual     reduce using rule 219 (GROUP -> .)
    menor_igual     reduce using rule 219 (GROUP -> .)
    igual           reduce using rule 219 (GROUP -> .)
    diferente1      reduce using rule 219 (GROUP -> .)
    diferente2      reduce using rule 219 (GROUP -> .)
    between         reduce using rule 219 (GROUP -> .)
    is              reduce using rule 219 (GROUP -> .)
    not             reduce using rule 219 (GROUP -> .)
    as              reduce using rule 219 (GROUP -> .)
    like            reduce using rule 219 (GROUP -> .)
    isnull          reduce using rule 219 (GROUP -> .)
    notnull         reduce using rule 219 (GROUP -> .)
    cadenaString    reduce using rule 219 (GROUP -> .)
    id              reduce using rule 219 (GROUP -> .)
    cadena          reduce using rule 219 (GROUP -> .)
    in              reduce using rule 219 (GROUP -> .)
    then            reduce using rule 219 (GROUP -> .)
    when            reduce using rule 219 (GROUP -> .)
    parc            reduce using rule 219 (GROUP -> .)
    constraint      reduce using rule 219 (GROUP -> .)
    primary         reduce using rule 219 (GROUP -> .)
    null            reduce using rule 219 (GROUP -> .)
    unique          reduce using rule 219 (GROUP -> .)
    references      reduce using rule 219 (GROUP -> .)
    check           reduce using rule 219 (GROUP -> .)
    default         reduce using rule 219 (GROUP -> .)
    asc             reduce using rule 219 (GROUP -> .)
    desc            reduce using rule 219 (GROUP -> .)

  ! group           [ reduce using rule 219 (GROUP -> .) ]

    GROUP                          shift and go to state 202

state 125

    (233) LEXP -> LEXP coma . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 204
    SELECT                         shift and go to state 72

state 126

    (280) EXP -> EXP mas . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 205
    SELECT                         shift and go to state 72

state 127

    (281) EXP -> EXP menos . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 206
    SELECT                         shift and go to state 72

state 128

    (282) EXP -> EXP multiplicacion . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 207
    SELECT                         shift and go to state 72

state 129

    (283) EXP -> EXP division . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 208
    SELECT                         shift and go to state 72

state 130

    (284) EXP -> EXP modulo . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 209
    SELECT                         shift and go to state 72

state 131

    (285) EXP -> EXP elevado . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 210
    SELECT                         shift and go to state 72

state 132

    (286) EXP -> EXP and . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 211
    SELECT                         shift and go to state 72

state 133

    (287) EXP -> EXP or . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 212
    SELECT                         shift and go to state 72

state 134

    (288) EXP -> EXP mayor . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 213
    SELECT                         shift and go to state 72

state 135

    (289) EXP -> EXP menor . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 214
    SELECT                         shift and go to state 72

state 136

    (290) EXP -> EXP mayor_igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 215
    SELECT                         shift and go to state 72

state 137

    (291) EXP -> EXP menor_igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 216
    SELECT                         shift and go to state 72

state 138

    (292) EXP -> EXP igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 217
    SELECT                         shift and go to state 72

state 139

    (293) EXP -> EXP diferente1 . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 218
    SELECT                         shift and go to state 72

state 140

    (294) EXP -> EXP diferente2 . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 219
    SELECT                         shift and go to state 72

state 141

    (295) EXP -> EXP between . EXP
    (318) EXP -> EXP between . symetric EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    symetric        shift and go to state 221
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 220
    SELECT                         shift and go to state 72

state 142

    (296) EXP -> EXP is . not null
    (297) EXP -> EXP is . not true
    (298) EXP -> EXP is . not false
    (299) EXP -> EXP is . not unknown
    (301) EXP -> EXP is . null
    (302) EXP -> EXP is . true
    (303) EXP -> EXP is . unknown
    (308) EXP -> EXP is . false
    (321) EXP -> EXP is . not distinct r_from EXP
    (322) EXP -> EXP is . distinct r_from EXP

    not             shift and go to state 222
    null            shift and go to state 223
    true            shift and go to state 224
    unknown         shift and go to state 226
    false           shift and go to state 225
    distinct        shift and go to state 227


state 143

    (300) EXP -> EXP not . like cadena
    (317) EXP -> EXP not . between EXP
    (320) EXP -> EXP not . in para LEXP parc
    (323) EXP -> EXP not . between symetric EXP

    like            shift and go to state 228
    between         shift and go to state 229
    in              shift and go to state 230


state 144

    (307) EXP -> EXP like . cadena

    cadena          shift and go to state 231


state 145

    (313) EXP -> EXP cadena .

    r_from          reduce using rule 313 (EXP -> EXP cadena .)
    coma            reduce using rule 313 (EXP -> EXP cadena .)
    where           reduce using rule 313 (EXP -> EXP cadena .)
    group           reduce using rule 313 (EXP -> EXP cadena .)
    having          reduce using rule 313 (EXP -> EXP cadena .)
    union           reduce using rule 313 (EXP -> EXP cadena .)
    intersect       reduce using rule 313 (EXP -> EXP cadena .)
    except          reduce using rule 313 (EXP -> EXP cadena .)
    order           reduce using rule 313 (EXP -> EXP cadena .)
    limit           reduce using rule 313 (EXP -> EXP cadena .)
    offset          reduce using rule 313 (EXP -> EXP cadena .)
    ptcoma          reduce using rule 313 (EXP -> EXP cadena .)
    mas             reduce using rule 313 (EXP -> EXP cadena .)
    menos           reduce using rule 313 (EXP -> EXP cadena .)
    multiplicacion  reduce using rule 313 (EXP -> EXP cadena .)
    division        reduce using rule 313 (EXP -> EXP cadena .)
    modulo          reduce using rule 313 (EXP -> EXP cadena .)
    elevado         reduce using rule 313 (EXP -> EXP cadena .)
    and             reduce using rule 313 (EXP -> EXP cadena .)
    or              reduce using rule 313 (EXP -> EXP cadena .)
    mayor           reduce using rule 313 (EXP -> EXP cadena .)
    menor           reduce using rule 313 (EXP -> EXP cadena .)
    mayor_igual     reduce using rule 313 (EXP -> EXP cadena .)
    menor_igual     reduce using rule 313 (EXP -> EXP cadena .)
    igual           reduce using rule 313 (EXP -> EXP cadena .)
    diferente1      reduce using rule 313 (EXP -> EXP cadena .)
    diferente2      reduce using rule 313 (EXP -> EXP cadena .)
    between         reduce using rule 313 (EXP -> EXP cadena .)
    is              reduce using rule 313 (EXP -> EXP cadena .)
    not             reduce using rule 313 (EXP -> EXP cadena .)
    as              reduce using rule 313 (EXP -> EXP cadena .)
    like            reduce using rule 313 (EXP -> EXP cadena .)
    isnull          reduce using rule 313 (EXP -> EXP cadena .)
    notnull         reduce using rule 313 (EXP -> EXP cadena .)
    cadenaString    reduce using rule 313 (EXP -> EXP cadena .)
    id              reduce using rule 313 (EXP -> EXP cadena .)
    cadena          reduce using rule 313 (EXP -> EXP cadena .)
    in              reduce using rule 313 (EXP -> EXP cadena .)
    then            reduce using rule 313 (EXP -> EXP cadena .)
    when            reduce using rule 313 (EXP -> EXP cadena .)
    parc            reduce using rule 313 (EXP -> EXP cadena .)
    constraint      reduce using rule 313 (EXP -> EXP cadena .)
    primary         reduce using rule 313 (EXP -> EXP cadena .)
    null            reduce using rule 313 (EXP -> EXP cadena .)
    unique          reduce using rule 313 (EXP -> EXP cadena .)
    references      reduce using rule 313 (EXP -> EXP cadena .)
    check           reduce using rule 313 (EXP -> EXP cadena .)
    default         reduce using rule 313 (EXP -> EXP cadena .)
    asc             reduce using rule 313 (EXP -> EXP cadena .)
    desc            reduce using rule 313 (EXP -> EXP cadena .)


state 146

    (304) EXP -> EXP as . cadena
    (305) EXP -> EXP as . id
    (306) EXP -> EXP as . cadenaString

    cadena          shift and go to state 232
    id              shift and go to state 233
    cadenaString    shift and go to state 234


state 147

    (312) EXP -> EXP id .

    r_from          reduce using rule 312 (EXP -> EXP id .)
    coma            reduce using rule 312 (EXP -> EXP id .)
    where           reduce using rule 312 (EXP -> EXP id .)
    group           reduce using rule 312 (EXP -> EXP id .)
    having          reduce using rule 312 (EXP -> EXP id .)
    union           reduce using rule 312 (EXP -> EXP id .)
    intersect       reduce using rule 312 (EXP -> EXP id .)
    except          reduce using rule 312 (EXP -> EXP id .)
    order           reduce using rule 312 (EXP -> EXP id .)
    limit           reduce using rule 312 (EXP -> EXP id .)
    offset          reduce using rule 312 (EXP -> EXP id .)
    ptcoma          reduce using rule 312 (EXP -> EXP id .)
    mas             reduce using rule 312 (EXP -> EXP id .)
    menos           reduce using rule 312 (EXP -> EXP id .)
    multiplicacion  reduce using rule 312 (EXP -> EXP id .)
    division        reduce using rule 312 (EXP -> EXP id .)
    modulo          reduce using rule 312 (EXP -> EXP id .)
    elevado         reduce using rule 312 (EXP -> EXP id .)
    and             reduce using rule 312 (EXP -> EXP id .)
    or              reduce using rule 312 (EXP -> EXP id .)
    mayor           reduce using rule 312 (EXP -> EXP id .)
    menor           reduce using rule 312 (EXP -> EXP id .)
    mayor_igual     reduce using rule 312 (EXP -> EXP id .)
    menor_igual     reduce using rule 312 (EXP -> EXP id .)
    igual           reduce using rule 312 (EXP -> EXP id .)
    diferente1      reduce using rule 312 (EXP -> EXP id .)
    diferente2      reduce using rule 312 (EXP -> EXP id .)
    between         reduce using rule 312 (EXP -> EXP id .)
    is              reduce using rule 312 (EXP -> EXP id .)
    not             reduce using rule 312 (EXP -> EXP id .)
    as              reduce using rule 312 (EXP -> EXP id .)
    like            reduce using rule 312 (EXP -> EXP id .)
    isnull          reduce using rule 312 (EXP -> EXP id .)
    notnull         reduce using rule 312 (EXP -> EXP id .)
    cadenaString    reduce using rule 312 (EXP -> EXP id .)
    id              reduce using rule 312 (EXP -> EXP id .)
    cadena          reduce using rule 312 (EXP -> EXP id .)
    in              reduce using rule 312 (EXP -> EXP id .)
    then            reduce using rule 312 (EXP -> EXP id .)
    when            reduce using rule 312 (EXP -> EXP id .)
    parc            reduce using rule 312 (EXP -> EXP id .)
    constraint      reduce using rule 312 (EXP -> EXP id .)
    primary         reduce using rule 312 (EXP -> EXP id .)
    null            reduce using rule 312 (EXP -> EXP id .)
    unique          reduce using rule 312 (EXP -> EXP id .)
    references      reduce using rule 312 (EXP -> EXP id .)
    check           reduce using rule 312 (EXP -> EXP id .)
    default         reduce using rule 312 (EXP -> EXP id .)
    asc             reduce using rule 312 (EXP -> EXP id .)
    desc            reduce using rule 312 (EXP -> EXP id .)


state 148

    (311) EXP -> EXP cadenaString .

    r_from          reduce using rule 311 (EXP -> EXP cadenaString .)
    coma            reduce using rule 311 (EXP -> EXP cadenaString .)
    where           reduce using rule 311 (EXP -> EXP cadenaString .)
    group           reduce using rule 311 (EXP -> EXP cadenaString .)
    having          reduce using rule 311 (EXP -> EXP cadenaString .)
    union           reduce using rule 311 (EXP -> EXP cadenaString .)
    intersect       reduce using rule 311 (EXP -> EXP cadenaString .)
    except          reduce using rule 311 (EXP -> EXP cadenaString .)
    order           reduce using rule 311 (EXP -> EXP cadenaString .)
    limit           reduce using rule 311 (EXP -> EXP cadenaString .)
    offset          reduce using rule 311 (EXP -> EXP cadenaString .)
    ptcoma          reduce using rule 311 (EXP -> EXP cadenaString .)
    mas             reduce using rule 311 (EXP -> EXP cadenaString .)
    menos           reduce using rule 311 (EXP -> EXP cadenaString .)
    multiplicacion  reduce using rule 311 (EXP -> EXP cadenaString .)
    division        reduce using rule 311 (EXP -> EXP cadenaString .)
    modulo          reduce using rule 311 (EXP -> EXP cadenaString .)
    elevado         reduce using rule 311 (EXP -> EXP cadenaString .)
    and             reduce using rule 311 (EXP -> EXP cadenaString .)
    or              reduce using rule 311 (EXP -> EXP cadenaString .)
    mayor           reduce using rule 311 (EXP -> EXP cadenaString .)
    menor           reduce using rule 311 (EXP -> EXP cadenaString .)
    mayor_igual     reduce using rule 311 (EXP -> EXP cadenaString .)
    menor_igual     reduce using rule 311 (EXP -> EXP cadenaString .)
    igual           reduce using rule 311 (EXP -> EXP cadenaString .)
    diferente1      reduce using rule 311 (EXP -> EXP cadenaString .)
    diferente2      reduce using rule 311 (EXP -> EXP cadenaString .)
    between         reduce using rule 311 (EXP -> EXP cadenaString .)
    is              reduce using rule 311 (EXP -> EXP cadenaString .)
    not             reduce using rule 311 (EXP -> EXP cadenaString .)
    as              reduce using rule 311 (EXP -> EXP cadenaString .)
    like            reduce using rule 311 (EXP -> EXP cadenaString .)
    isnull          reduce using rule 311 (EXP -> EXP cadenaString .)
    notnull         reduce using rule 311 (EXP -> EXP cadenaString .)
    cadenaString    reduce using rule 311 (EXP -> EXP cadenaString .)
    id              reduce using rule 311 (EXP -> EXP cadenaString .)
    cadena          reduce using rule 311 (EXP -> EXP cadenaString .)
    in              reduce using rule 311 (EXP -> EXP cadenaString .)
    then            reduce using rule 311 (EXP -> EXP cadenaString .)
    when            reduce using rule 311 (EXP -> EXP cadenaString .)
    parc            reduce using rule 311 (EXP -> EXP cadenaString .)
    constraint      reduce using rule 311 (EXP -> EXP cadenaString .)
    primary         reduce using rule 311 (EXP -> EXP cadenaString .)
    null            reduce using rule 311 (EXP -> EXP cadenaString .)
    unique          reduce using rule 311 (EXP -> EXP cadenaString .)
    references      reduce using rule 311 (EXP -> EXP cadenaString .)
    check           reduce using rule 311 (EXP -> EXP cadenaString .)
    default         reduce using rule 311 (EXP -> EXP cadenaString .)
    asc             reduce using rule 311 (EXP -> EXP cadenaString .)
    desc            reduce using rule 311 (EXP -> EXP cadenaString .)


state 149

    (309) EXP -> EXP isnull .

    r_from          reduce using rule 309 (EXP -> EXP isnull .)
    coma            reduce using rule 309 (EXP -> EXP isnull .)
    where           reduce using rule 309 (EXP -> EXP isnull .)
    group           reduce using rule 309 (EXP -> EXP isnull .)
    having          reduce using rule 309 (EXP -> EXP isnull .)
    union           reduce using rule 309 (EXP -> EXP isnull .)
    intersect       reduce using rule 309 (EXP -> EXP isnull .)
    except          reduce using rule 309 (EXP -> EXP isnull .)
    order           reduce using rule 309 (EXP -> EXP isnull .)
    limit           reduce using rule 309 (EXP -> EXP isnull .)
    offset          reduce using rule 309 (EXP -> EXP isnull .)
    ptcoma          reduce using rule 309 (EXP -> EXP isnull .)
    mas             reduce using rule 309 (EXP -> EXP isnull .)
    menos           reduce using rule 309 (EXP -> EXP isnull .)
    multiplicacion  reduce using rule 309 (EXP -> EXP isnull .)
    division        reduce using rule 309 (EXP -> EXP isnull .)
    modulo          reduce using rule 309 (EXP -> EXP isnull .)
    elevado         reduce using rule 309 (EXP -> EXP isnull .)
    and             reduce using rule 309 (EXP -> EXP isnull .)
    or              reduce using rule 309 (EXP -> EXP isnull .)
    mayor           reduce using rule 309 (EXP -> EXP isnull .)
    menor           reduce using rule 309 (EXP -> EXP isnull .)
    mayor_igual     reduce using rule 309 (EXP -> EXP isnull .)
    menor_igual     reduce using rule 309 (EXP -> EXP isnull .)
    igual           reduce using rule 309 (EXP -> EXP isnull .)
    diferente1      reduce using rule 309 (EXP -> EXP isnull .)
    diferente2      reduce using rule 309 (EXP -> EXP isnull .)
    between         reduce using rule 309 (EXP -> EXP isnull .)
    is              reduce using rule 309 (EXP -> EXP isnull .)
    not             reduce using rule 309 (EXP -> EXP isnull .)
    as              reduce using rule 309 (EXP -> EXP isnull .)
    like            reduce using rule 309 (EXP -> EXP isnull .)
    isnull          reduce using rule 309 (EXP -> EXP isnull .)
    notnull         reduce using rule 309 (EXP -> EXP isnull .)
    cadenaString    reduce using rule 309 (EXP -> EXP isnull .)
    id              reduce using rule 309 (EXP -> EXP isnull .)
    cadena          reduce using rule 309 (EXP -> EXP isnull .)
    in              reduce using rule 309 (EXP -> EXP isnull .)
    then            reduce using rule 309 (EXP -> EXP isnull .)
    when            reduce using rule 309 (EXP -> EXP isnull .)
    parc            reduce using rule 309 (EXP -> EXP isnull .)
    constraint      reduce using rule 309 (EXP -> EXP isnull .)
    primary         reduce using rule 309 (EXP -> EXP isnull .)
    null            reduce using rule 309 (EXP -> EXP isnull .)
    unique          reduce using rule 309 (EXP -> EXP isnull .)
    references      reduce using rule 309 (EXP -> EXP isnull .)
    check           reduce using rule 309 (EXP -> EXP isnull .)
    default         reduce using rule 309 (EXP -> EXP isnull .)
    asc             reduce using rule 309 (EXP -> EXP isnull .)
    desc            reduce using rule 309 (EXP -> EXP isnull .)


state 150

    (310) EXP -> EXP notnull .

    r_from          reduce using rule 310 (EXP -> EXP notnull .)
    coma            reduce using rule 310 (EXP -> EXP notnull .)
    where           reduce using rule 310 (EXP -> EXP notnull .)
    group           reduce using rule 310 (EXP -> EXP notnull .)
    having          reduce using rule 310 (EXP -> EXP notnull .)
    union           reduce using rule 310 (EXP -> EXP notnull .)
    intersect       reduce using rule 310 (EXP -> EXP notnull .)
    except          reduce using rule 310 (EXP -> EXP notnull .)
    order           reduce using rule 310 (EXP -> EXP notnull .)
    limit           reduce using rule 310 (EXP -> EXP notnull .)
    offset          reduce using rule 310 (EXP -> EXP notnull .)
    ptcoma          reduce using rule 310 (EXP -> EXP notnull .)
    mas             reduce using rule 310 (EXP -> EXP notnull .)
    menos           reduce using rule 310 (EXP -> EXP notnull .)
    multiplicacion  reduce using rule 310 (EXP -> EXP notnull .)
    division        reduce using rule 310 (EXP -> EXP notnull .)
    modulo          reduce using rule 310 (EXP -> EXP notnull .)
    elevado         reduce using rule 310 (EXP -> EXP notnull .)
    and             reduce using rule 310 (EXP -> EXP notnull .)
    or              reduce using rule 310 (EXP -> EXP notnull .)
    mayor           reduce using rule 310 (EXP -> EXP notnull .)
    menor           reduce using rule 310 (EXP -> EXP notnull .)
    mayor_igual     reduce using rule 310 (EXP -> EXP notnull .)
    menor_igual     reduce using rule 310 (EXP -> EXP notnull .)
    igual           reduce using rule 310 (EXP -> EXP notnull .)
    diferente1      reduce using rule 310 (EXP -> EXP notnull .)
    diferente2      reduce using rule 310 (EXP -> EXP notnull .)
    between         reduce using rule 310 (EXP -> EXP notnull .)
    is              reduce using rule 310 (EXP -> EXP notnull .)
    not             reduce using rule 310 (EXP -> EXP notnull .)
    as              reduce using rule 310 (EXP -> EXP notnull .)
    like            reduce using rule 310 (EXP -> EXP notnull .)
    isnull          reduce using rule 310 (EXP -> EXP notnull .)
    notnull         reduce using rule 310 (EXP -> EXP notnull .)
    cadenaString    reduce using rule 310 (EXP -> EXP notnull .)
    id              reduce using rule 310 (EXP -> EXP notnull .)
    cadena          reduce using rule 310 (EXP -> EXP notnull .)
    in              reduce using rule 310 (EXP -> EXP notnull .)
    then            reduce using rule 310 (EXP -> EXP notnull .)
    when            reduce using rule 310 (EXP -> EXP notnull .)
    parc            reduce using rule 310 (EXP -> EXP notnull .)
    constraint      reduce using rule 310 (EXP -> EXP notnull .)
    primary         reduce using rule 310 (EXP -> EXP notnull .)
    null            reduce using rule 310 (EXP -> EXP notnull .)
    unique          reduce using rule 310 (EXP -> EXP notnull .)
    references      reduce using rule 310 (EXP -> EXP notnull .)
    check           reduce using rule 310 (EXP -> EXP notnull .)
    default         reduce using rule 310 (EXP -> EXP notnull .)
    asc             reduce using rule 310 (EXP -> EXP notnull .)
    desc            reduce using rule 310 (EXP -> EXP notnull .)


state 151

    (319) EXP -> EXP in . para LEXP parc

    para            shift and go to state 235


state 152

    (314) EXP -> mas EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 314 (EXP -> mas EXP .)
    coma            reduce using rule 314 (EXP -> mas EXP .)
    where           reduce using rule 314 (EXP -> mas EXP .)
    group           reduce using rule 314 (EXP -> mas EXP .)
    having          reduce using rule 314 (EXP -> mas EXP .)
    union           reduce using rule 314 (EXP -> mas EXP .)
    intersect       reduce using rule 314 (EXP -> mas EXP .)
    except          reduce using rule 314 (EXP -> mas EXP .)
    order           reduce using rule 314 (EXP -> mas EXP .)
    limit           reduce using rule 314 (EXP -> mas EXP .)
    offset          reduce using rule 314 (EXP -> mas EXP .)
    ptcoma          reduce using rule 314 (EXP -> mas EXP .)
    mas             reduce using rule 314 (EXP -> mas EXP .)
    menos           reduce using rule 314 (EXP -> mas EXP .)
    multiplicacion  reduce using rule 314 (EXP -> mas EXP .)
    division        reduce using rule 314 (EXP -> mas EXP .)
    modulo          reduce using rule 314 (EXP -> mas EXP .)
    elevado         reduce using rule 314 (EXP -> mas EXP .)
    and             reduce using rule 314 (EXP -> mas EXP .)
    or              reduce using rule 314 (EXP -> mas EXP .)
    mayor           reduce using rule 314 (EXP -> mas EXP .)
    menor           reduce using rule 314 (EXP -> mas EXP .)
    mayor_igual     reduce using rule 314 (EXP -> mas EXP .)
    menor_igual     reduce using rule 314 (EXP -> mas EXP .)
    igual           reduce using rule 314 (EXP -> mas EXP .)
    diferente1      reduce using rule 314 (EXP -> mas EXP .)
    diferente2      reduce using rule 314 (EXP -> mas EXP .)
    between         reduce using rule 314 (EXP -> mas EXP .)
    is              reduce using rule 314 (EXP -> mas EXP .)
    not             reduce using rule 314 (EXP -> mas EXP .)
    as              reduce using rule 314 (EXP -> mas EXP .)
    like            reduce using rule 314 (EXP -> mas EXP .)
    isnull          reduce using rule 314 (EXP -> mas EXP .)
    notnull         reduce using rule 314 (EXP -> mas EXP .)
    cadenaString    reduce using rule 314 (EXP -> mas EXP .)
    id              reduce using rule 314 (EXP -> mas EXP .)
    cadena          reduce using rule 314 (EXP -> mas EXP .)
    in              reduce using rule 314 (EXP -> mas EXP .)
    then            reduce using rule 314 (EXP -> mas EXP .)
    when            reduce using rule 314 (EXP -> mas EXP .)
    parc            reduce using rule 314 (EXP -> mas EXP .)
    constraint      reduce using rule 314 (EXP -> mas EXP .)
    primary         reduce using rule 314 (EXP -> mas EXP .)
    null            reduce using rule 314 (EXP -> mas EXP .)
    unique          reduce using rule 314 (EXP -> mas EXP .)
    references      reduce using rule 314 (EXP -> mas EXP .)
    check           reduce using rule 314 (EXP -> mas EXP .)
    default         reduce using rule 314 (EXP -> mas EXP .)
    asc             reduce using rule 314 (EXP -> mas EXP .)
    desc            reduce using rule 314 (EXP -> mas EXP .)

  ! mas             [ shift and go to state 126 ]
  ! menos           [ shift and go to state 127 ]
  ! multiplicacion  [ shift and go to state 128 ]
  ! division        [ shift and go to state 129 ]
  ! modulo          [ shift and go to state 130 ]
  ! elevado         [ shift and go to state 131 ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 153

    (315) EXP -> menos EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 315 (EXP -> menos EXP .)
    coma            reduce using rule 315 (EXP -> menos EXP .)
    where           reduce using rule 315 (EXP -> menos EXP .)
    group           reduce using rule 315 (EXP -> menos EXP .)
    having          reduce using rule 315 (EXP -> menos EXP .)
    union           reduce using rule 315 (EXP -> menos EXP .)
    intersect       reduce using rule 315 (EXP -> menos EXP .)
    except          reduce using rule 315 (EXP -> menos EXP .)
    order           reduce using rule 315 (EXP -> menos EXP .)
    limit           reduce using rule 315 (EXP -> menos EXP .)
    offset          reduce using rule 315 (EXP -> menos EXP .)
    ptcoma          reduce using rule 315 (EXP -> menos EXP .)
    mas             reduce using rule 315 (EXP -> menos EXP .)
    menos           reduce using rule 315 (EXP -> menos EXP .)
    multiplicacion  reduce using rule 315 (EXP -> menos EXP .)
    division        reduce using rule 315 (EXP -> menos EXP .)
    modulo          reduce using rule 315 (EXP -> menos EXP .)
    elevado         reduce using rule 315 (EXP -> menos EXP .)
    and             reduce using rule 315 (EXP -> menos EXP .)
    or              reduce using rule 315 (EXP -> menos EXP .)
    mayor           reduce using rule 315 (EXP -> menos EXP .)
    menor           reduce using rule 315 (EXP -> menos EXP .)
    mayor_igual     reduce using rule 315 (EXP -> menos EXP .)
    menor_igual     reduce using rule 315 (EXP -> menos EXP .)
    igual           reduce using rule 315 (EXP -> menos EXP .)
    diferente1      reduce using rule 315 (EXP -> menos EXP .)
    diferente2      reduce using rule 315 (EXP -> menos EXP .)
    between         reduce using rule 315 (EXP -> menos EXP .)
    is              reduce using rule 315 (EXP -> menos EXP .)
    not             reduce using rule 315 (EXP -> menos EXP .)
    as              reduce using rule 315 (EXP -> menos EXP .)
    like            reduce using rule 315 (EXP -> menos EXP .)
    isnull          reduce using rule 315 (EXP -> menos EXP .)
    notnull         reduce using rule 315 (EXP -> menos EXP .)
    cadenaString    reduce using rule 315 (EXP -> menos EXP .)
    id              reduce using rule 315 (EXP -> menos EXP .)
    cadena          reduce using rule 315 (EXP -> menos EXP .)
    in              reduce using rule 315 (EXP -> menos EXP .)
    then            reduce using rule 315 (EXP -> menos EXP .)
    when            reduce using rule 315 (EXP -> menos EXP .)
    parc            reduce using rule 315 (EXP -> menos EXP .)
    constraint      reduce using rule 315 (EXP -> menos EXP .)
    primary         reduce using rule 315 (EXP -> menos EXP .)
    null            reduce using rule 315 (EXP -> menos EXP .)
    unique          reduce using rule 315 (EXP -> menos EXP .)
    references      reduce using rule 315 (EXP -> menos EXP .)
    check           reduce using rule 315 (EXP -> menos EXP .)
    default         reduce using rule 315 (EXP -> menos EXP .)
    asc             reduce using rule 315 (EXP -> menos EXP .)
    desc            reduce using rule 315 (EXP -> menos EXP .)

  ! mas             [ shift and go to state 126 ]
  ! menos           [ shift and go to state 127 ]
  ! multiplicacion  [ shift and go to state 128 ]
  ! division        [ shift and go to state 129 ]
  ! modulo          [ shift and go to state 130 ]
  ! elevado         [ shift and go to state 131 ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 154

    (316) EXP -> not EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 316 (EXP -> not EXP .)
    coma            reduce using rule 316 (EXP -> not EXP .)
    where           reduce using rule 316 (EXP -> not EXP .)
    group           reduce using rule 316 (EXP -> not EXP .)
    having          reduce using rule 316 (EXP -> not EXP .)
    union           reduce using rule 316 (EXP -> not EXP .)
    intersect       reduce using rule 316 (EXP -> not EXP .)
    except          reduce using rule 316 (EXP -> not EXP .)
    order           reduce using rule 316 (EXP -> not EXP .)
    limit           reduce using rule 316 (EXP -> not EXP .)
    offset          reduce using rule 316 (EXP -> not EXP .)
    ptcoma          reduce using rule 316 (EXP -> not EXP .)
    and             reduce using rule 316 (EXP -> not EXP .)
    or              reduce using rule 316 (EXP -> not EXP .)
    between         reduce using rule 316 (EXP -> not EXP .)
    is              reduce using rule 316 (EXP -> not EXP .)
    as              reduce using rule 316 (EXP -> not EXP .)
    like            reduce using rule 316 (EXP -> not EXP .)
    isnull          reduce using rule 316 (EXP -> not EXP .)
    notnull         reduce using rule 316 (EXP -> not EXP .)
    cadenaString    reduce using rule 316 (EXP -> not EXP .)
    id              reduce using rule 316 (EXP -> not EXP .)
    cadena          reduce using rule 316 (EXP -> not EXP .)
    in              reduce using rule 316 (EXP -> not EXP .)
    then            reduce using rule 316 (EXP -> not EXP .)
    when            reduce using rule 316 (EXP -> not EXP .)
    parc            reduce using rule 316 (EXP -> not EXP .)
    constraint      reduce using rule 316 (EXP -> not EXP .)
    primary         reduce using rule 316 (EXP -> not EXP .)
    null            reduce using rule 316 (EXP -> not EXP .)
    unique          reduce using rule 316 (EXP -> not EXP .)
    references      reduce using rule 316 (EXP -> not EXP .)
    check           reduce using rule 316 (EXP -> not EXP .)
    default         reduce using rule 316 (EXP -> not EXP .)
    asc             reduce using rule 316 (EXP -> not EXP .)
    desc            reduce using rule 316 (EXP -> not EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    not             shift and go to state 143

  ! mas             [ reduce using rule 316 (EXP -> not EXP .) ]
  ! menos           [ reduce using rule 316 (EXP -> not EXP .) ]
  ! multiplicacion  [ reduce using rule 316 (EXP -> not EXP .) ]
  ! division        [ reduce using rule 316 (EXP -> not EXP .) ]
  ! modulo          [ reduce using rule 316 (EXP -> not EXP .) ]
  ! elevado         [ reduce using rule 316 (EXP -> not EXP .) ]
  ! mayor           [ reduce using rule 316 (EXP -> not EXP .) ]
  ! menor           [ reduce using rule 316 (EXP -> not EXP .) ]
  ! mayor_igual     [ reduce using rule 316 (EXP -> not EXP .) ]
  ! menor_igual     [ reduce using rule 316 (EXP -> not EXP .) ]
  ! igual           [ reduce using rule 316 (EXP -> not EXP .) ]
  ! diferente1      [ reduce using rule 316 (EXP -> not EXP .) ]
  ! diferente2      [ reduce using rule 316 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 316 (EXP -> not EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 155

    (332) EXP -> cadena as . TIPO
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 236

state 156

    (326) EXP -> id para . parc
    (327) EXP -> id para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    parc            shift and go to state 258
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 259
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 157

    (325) EXP -> para EXP . parc
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    parc            shift and go to state 260
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 158

    (328) EXP -> any para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 261
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 159

    (329) EXP -> all para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 262
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 160

    (330) EXP -> some para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 263
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 161

    (331) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (274) FIELDS -> . year
    (275) FIELDS -> . month
    (276) FIELDS -> . day
    (277) FIELDS -> . hour
    (278) FIELDS -> . minute
    (279) FIELDS -> . second

    year            shift and go to state 265
    month           shift and go to state 266
    day             shift and go to state 267
    hour            shift and go to state 268
    minute          shift and go to state 269
    second          shift and go to state 270

    FIELDS                         shift and go to state 264

state 162

    (346) EXP -> timestamp cadena .

    r_from          reduce using rule 346 (EXP -> timestamp cadena .)
    coma            reduce using rule 346 (EXP -> timestamp cadena .)
    where           reduce using rule 346 (EXP -> timestamp cadena .)
    group           reduce using rule 346 (EXP -> timestamp cadena .)
    having          reduce using rule 346 (EXP -> timestamp cadena .)
    union           reduce using rule 346 (EXP -> timestamp cadena .)
    intersect       reduce using rule 346 (EXP -> timestamp cadena .)
    except          reduce using rule 346 (EXP -> timestamp cadena .)
    order           reduce using rule 346 (EXP -> timestamp cadena .)
    limit           reduce using rule 346 (EXP -> timestamp cadena .)
    offset          reduce using rule 346 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 346 (EXP -> timestamp cadena .)
    mas             reduce using rule 346 (EXP -> timestamp cadena .)
    menos           reduce using rule 346 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 346 (EXP -> timestamp cadena .)
    division        reduce using rule 346 (EXP -> timestamp cadena .)
    modulo          reduce using rule 346 (EXP -> timestamp cadena .)
    elevado         reduce using rule 346 (EXP -> timestamp cadena .)
    and             reduce using rule 346 (EXP -> timestamp cadena .)
    or              reduce using rule 346 (EXP -> timestamp cadena .)
    mayor           reduce using rule 346 (EXP -> timestamp cadena .)
    menor           reduce using rule 346 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 346 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 346 (EXP -> timestamp cadena .)
    igual           reduce using rule 346 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 346 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 346 (EXP -> timestamp cadena .)
    between         reduce using rule 346 (EXP -> timestamp cadena .)
    is              reduce using rule 346 (EXP -> timestamp cadena .)
    not             reduce using rule 346 (EXP -> timestamp cadena .)
    as              reduce using rule 346 (EXP -> timestamp cadena .)
    like            reduce using rule 346 (EXP -> timestamp cadena .)
    isnull          reduce using rule 346 (EXP -> timestamp cadena .)
    notnull         reduce using rule 346 (EXP -> timestamp cadena .)
    cadenaString    reduce using rule 346 (EXP -> timestamp cadena .)
    id              reduce using rule 346 (EXP -> timestamp cadena .)
    cadena          reduce using rule 346 (EXP -> timestamp cadena .)
    in              reduce using rule 346 (EXP -> timestamp cadena .)
    then            reduce using rule 346 (EXP -> timestamp cadena .)
    when            reduce using rule 346 (EXP -> timestamp cadena .)
    parc            reduce using rule 346 (EXP -> timestamp cadena .)
    constraint      reduce using rule 346 (EXP -> timestamp cadena .)
    primary         reduce using rule 346 (EXP -> timestamp cadena .)
    null            reduce using rule 346 (EXP -> timestamp cadena .)
    unique          reduce using rule 346 (EXP -> timestamp cadena .)
    references      reduce using rule 346 (EXP -> timestamp cadena .)
    check           reduce using rule 346 (EXP -> timestamp cadena .)
    default         reduce using rule 346 (EXP -> timestamp cadena .)
    asc             reduce using rule 346 (EXP -> timestamp cadena .)
    desc            reduce using rule 346 (EXP -> timestamp cadena .)


state 163

    (347) EXP -> interval cadena .

    r_from          reduce using rule 347 (EXP -> interval cadena .)
    coma            reduce using rule 347 (EXP -> interval cadena .)
    where           reduce using rule 347 (EXP -> interval cadena .)
    group           reduce using rule 347 (EXP -> interval cadena .)
    having          reduce using rule 347 (EXP -> interval cadena .)
    union           reduce using rule 347 (EXP -> interval cadena .)
    intersect       reduce using rule 347 (EXP -> interval cadena .)
    except          reduce using rule 347 (EXP -> interval cadena .)
    order           reduce using rule 347 (EXP -> interval cadena .)
    limit           reduce using rule 347 (EXP -> interval cadena .)
    offset          reduce using rule 347 (EXP -> interval cadena .)
    ptcoma          reduce using rule 347 (EXP -> interval cadena .)
    mas             reduce using rule 347 (EXP -> interval cadena .)
    menos           reduce using rule 347 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 347 (EXP -> interval cadena .)
    division        reduce using rule 347 (EXP -> interval cadena .)
    modulo          reduce using rule 347 (EXP -> interval cadena .)
    elevado         reduce using rule 347 (EXP -> interval cadena .)
    and             reduce using rule 347 (EXP -> interval cadena .)
    or              reduce using rule 347 (EXP -> interval cadena .)
    mayor           reduce using rule 347 (EXP -> interval cadena .)
    menor           reduce using rule 347 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 347 (EXP -> interval cadena .)
    menor_igual     reduce using rule 347 (EXP -> interval cadena .)
    igual           reduce using rule 347 (EXP -> interval cadena .)
    diferente1      reduce using rule 347 (EXP -> interval cadena .)
    diferente2      reduce using rule 347 (EXP -> interval cadena .)
    between         reduce using rule 347 (EXP -> interval cadena .)
    is              reduce using rule 347 (EXP -> interval cadena .)
    not             reduce using rule 347 (EXP -> interval cadena .)
    as              reduce using rule 347 (EXP -> interval cadena .)
    like            reduce using rule 347 (EXP -> interval cadena .)
    isnull          reduce using rule 347 (EXP -> interval cadena .)
    notnull         reduce using rule 347 (EXP -> interval cadena .)
    cadenaString    reduce using rule 347 (EXP -> interval cadena .)
    id              reduce using rule 347 (EXP -> interval cadena .)
    cadena          reduce using rule 347 (EXP -> interval cadena .)
    in              reduce using rule 347 (EXP -> interval cadena .)
    then            reduce using rule 347 (EXP -> interval cadena .)
    when            reduce using rule 347 (EXP -> interval cadena .)
    parc            reduce using rule 347 (EXP -> interval cadena .)
    constraint      reduce using rule 347 (EXP -> interval cadena .)
    primary         reduce using rule 347 (EXP -> interval cadena .)
    null            reduce using rule 347 (EXP -> interval cadena .)
    unique          reduce using rule 347 (EXP -> interval cadena .)
    references      reduce using rule 347 (EXP -> interval cadena .)
    check           reduce using rule 347 (EXP -> interval cadena .)
    default         reduce using rule 347 (EXP -> interval cadena .)
    asc             reduce using rule 347 (EXP -> interval cadena .)
    desc            reduce using rule 347 (EXP -> interval cadena .)


state 164

    (167) CREATETABLE -> create table id . para LDEF parc ptcoma
    (168) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 271


state 165

    (198) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 272


state 166

    (150) CREATEDB -> create RD if . not exist id
    (151) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 273


state 167

    (152) CREATEDB -> create RD id .
    (153) CREATEDB -> create RD id . OPCCDB
    (154) OPCCDB -> . PROPIETARIO
    (155) OPCCDB -> . MODO
    (156) OPCCDB -> . PROPIETARIO MODO
    (159) PROPIETARIO -> . owner igual id
    (160) PROPIETARIO -> . owner id
    (161) PROPIETARIO -> . owner igual cadena
    (162) PROPIETARIO -> . owner cadena
    (163) PROPIETARIO -> . owner igual cadenaString
    (164) PROPIETARIO -> . owner cadenaString
    (165) MODO -> . mode igual int
    (166) MODO -> . mode int

    ptcoma          reduce using rule 152 (CREATEDB -> create RD id .)
    owner           shift and go to state 277
    mode            shift and go to state 278

    OPCCDB                         shift and go to state 274
    PROPIETARIO                    shift and go to state 275
    MODO                           shift and go to state 276

state 168

    (50) CREATEINDEX -> create index id . on id para LEXP parc
    (52) CREATEINDEX -> create index id . on id using hash para LEXP parc
    (53) CREATEINDEX -> create index id . on id para id ORDEN parc
    (54) CREATEINDEX -> create index id . on id para id id ORDEN parc
    (55) CREATEINDEX -> create index id . on id para id id parc

    on              shift and go to state 279


state 169

    (51) CREATEINDEX -> create unique index . id on id para LEXP parc

    id              shift and go to state 280


state 170

    (35) PROCEDIMIENTOS -> create procedure id . para LPARAM parc LENGUAJE LCONTENIDOP
    (36) PROCEDIMIENTOS -> create procedure id . para LPARAM parc LCONTENIDOP LENGUAJE
    (37) PROCEDIMIENTOS -> create procedure id . para parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create procedure id . para parc LCONTENIDOP LENGUAJE

    para            shift and go to state 281


state 171

    (26) FUNCIONES -> create function id . para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id . para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> create function id . para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id . para parc RETURNP LCONTENIDOP LENGUAJE

    para            shift and go to state 282


state 172

    (157) RD -> or replace . databases

    databases       shift and go to state 283


state 173

    (227) UPDATE -> update id set . LCAMPOS where LEXP
    (228) LCAMPOS -> . LCAMPOS coma id igual EXP
    (229) LCAMPOS -> . id igual EXP

    id              shift and go to state 284

    LCAMPOS                        shift and go to state 285

state 174

    (230) DELETE -> delete r_from id . WHERE
    (210) WHERE -> . where EXP
    (211) WHERE -> .
    (212) WHERE -> . where EXIST

    where           shift and go to state 50
    ptcoma          reduce using rule 211 (WHERE -> .)

    WHERE                          shift and go to state 286

state 175

    (123) ALTER -> alter databases id . RO
    (125) RO -> . rename to id
    (126) RO -> . owner to id

    rename          shift and go to state 288
    owner           shift and go to state 289

    RO                             shift and go to state 287

state 176

    (124) ALTER -> alter table id . LOP
    (131) LOP -> . LOP coma OP
    (132) LOP -> . OP
    (133) OP -> . add column id TIPO
    (134) OP -> . add check para CONDCHECK parc
    (135) OP -> . add constraint id check para CONDCHECK parc
    (136) OP -> . add constraint id unique para LEXP parc
    (137) OP -> . add unique para LEXP parc
    (138) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (139) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (140) OP -> . alter column id set not null
    (141) OP -> . alter column id set null
    (142) OP -> . drop constraint id
    (143) OP -> . drop column LEXP
    (144) OP -> . drop check id
    (145) OP -> . rename column id to id
    (146) OP -> . alter column id type TIPO

    add             shift and go to state 293
    alter           shift and go to state 290
    drop            shift and go to state 294
    rename          shift and go to state 295

    LOP                            shift and go to state 291
    OP                             shift and go to state 292

state 177

    (127) ALTER -> alter index id . alter EXP
    (129) ALTER -> alter index id . alter column EXP

    alter           shift and go to state 296


state 178

    (128) ALTER -> alter index if . exist id alter EXP
    (130) ALTER -> alter index if . exist id alter column EXP

    exist           shift and go to state 297


state 179

    (76) CONDICIONIF -> if EXP then . LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> if EXP then . LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> if EXP then . LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> if EXP then . LISTACONTENIDO end if
    (87) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (88) LISTACONTENIDO -> . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LISTACONTENIDO                 shift and go to state 298
    CONTENIDO                      shift and go to state 299
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 180

    (118) DROP -> drop all para . parc

    parc            shift and go to state 315


state 181

    (119) DROP -> drop table id .

    ptcoma          reduce using rule 119 (DROP -> drop table id .)


state 182

    (120) DROP -> drop index id .

    ptcoma          reduce using rule 120 (DROP -> drop index id .)


state 183

    (121) DROP -> drop databases id .

    ptcoma          reduce using rule 121 (DROP -> drop databases id .)


state 184

    (122) DROP -> drop databases if . exist id

    exist           shift and go to state 316


state 185

    (30) DROPFUNC -> drop function id .

    ptcoma          reduce using rule 30 (DROPFUNC -> drop function id .)


state 186

    (31) DROPFUNC -> drop function if . exist id

    exist           shift and go to state 317


state 187

    (116) INSERT -> insert into id . values para LEXP parc
    (117) INSERT -> insert into id . para LEXP parc values para LEXP parc

    values          shift and go to state 318
    para            shift and go to state 319


state 188

    (83) CASE -> case EXP LISTAWHEN . ELSEF end case
    (85) CASE -> case EXP LISTAWHEN . end
    (112) LISTAWHEN -> LISTAWHEN . WHEN
    (82) ELSEF -> . else LISTACONTENIDO
    (114) WHEN -> . when EXP then LISTACONTENIDO

    end             shift and go to state 321
    else            shift and go to state 192
    when            shift and go to state 109

    ELSEF                          shift and go to state 320
    WHEN                           shift and go to state 191

state 189

    (84) CASE -> case LISTAWHEN ELSEF . end case

    end             shift and go to state 322


state 190

    (86) CASE -> case LISTAWHEN end . case

    case            shift and go to state 323


state 191

    (112) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 112 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 112 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 112 (LISTAWHEN -> LISTAWHEN WHEN .)


state 192

    (82) ELSEF -> else . LISTACONTENIDO
    (87) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (88) LISTACONTENIDO -> . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LISTACONTENIDO                 shift and go to state 324
    CONTENIDO                      shift and go to state 299
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 193

    (114) WHEN -> when EXP . then LISTACONTENIDO
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    then            shift and go to state 325
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 194

    (148) SHOW -> show tables para . id parc

    id              shift and go to state 326


state 195

    (149) SHOW -> show collection para . parc

    parc            shift and go to state 327


state 196

    (33) CALLPROCEDURE -> execute id para . LEXP parc
    (34) CALLPROCEDURE -> execute id para . parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    parc            shift and go to state 329
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 328
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 197

    (232) EXIST -> not exist . para SELECT parc

    para            shift and go to state 330


state 198

    (231) EXIST -> exist para . SELECT parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 25

    SELECT                         shift and go to state 331

state 199

    (74) ASIGNACION -> id dospuntos igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 74 (ASIGNACION -> id dospuntos igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 200

    (199) SELECT -> select distinct LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 332
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 201

    (200) SELECT -> select LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (233) LEXP -> LEXP . coma EXP
    (210) WHERE -> . where EXP
    (211) WHERE -> .
    (212) WHERE -> . where EXIST

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 125
    where           shift and go to state 50
    r_from          reduce using rule 211 (WHERE -> .)
    group           reduce using rule 211 (WHERE -> .)
    having          reduce using rule 211 (WHERE -> .)
    union           reduce using rule 211 (WHERE -> .)
    intersect       reduce using rule 211 (WHERE -> .)
    except          reduce using rule 211 (WHERE -> .)
    order           reduce using rule 211 (WHERE -> .)
    limit           reduce using rule 211 (WHERE -> .)
    offset          reduce using rule 211 (WHERE -> .)
    ptcoma          reduce using rule 211 (WHERE -> .)
    mas             reduce using rule 211 (WHERE -> .)
    menos           reduce using rule 211 (WHERE -> .)
    multiplicacion  reduce using rule 211 (WHERE -> .)
    division        reduce using rule 211 (WHERE -> .)
    modulo          reduce using rule 211 (WHERE -> .)
    elevado         reduce using rule 211 (WHERE -> .)
    and             reduce using rule 211 (WHERE -> .)
    or              reduce using rule 211 (WHERE -> .)
    mayor           reduce using rule 211 (WHERE -> .)
    menor           reduce using rule 211 (WHERE -> .)
    mayor_igual     reduce using rule 211 (WHERE -> .)
    menor_igual     reduce using rule 211 (WHERE -> .)
    igual           reduce using rule 211 (WHERE -> .)
    diferente1      reduce using rule 211 (WHERE -> .)
    diferente2      reduce using rule 211 (WHERE -> .)
    between         reduce using rule 211 (WHERE -> .)
    is              reduce using rule 211 (WHERE -> .)
    not             reduce using rule 211 (WHERE -> .)
    as              reduce using rule 211 (WHERE -> .)
    like            reduce using rule 211 (WHERE -> .)
    isnull          reduce using rule 211 (WHERE -> .)
    notnull         reduce using rule 211 (WHERE -> .)
    cadenaString    reduce using rule 211 (WHERE -> .)
    id              reduce using rule 211 (WHERE -> .)
    cadena          reduce using rule 211 (WHERE -> .)
    in              reduce using rule 211 (WHERE -> .)
    then            reduce using rule 211 (WHERE -> .)
    when            reduce using rule 211 (WHERE -> .)
    parc            reduce using rule 211 (WHERE -> .)
    constraint      reduce using rule 211 (WHERE -> .)
    primary         reduce using rule 211 (WHERE -> .)
    null            reduce using rule 211 (WHERE -> .)
    unique          reduce using rule 211 (WHERE -> .)
    references      reduce using rule 211 (WHERE -> .)
    check           reduce using rule 211 (WHERE -> .)
    default         reduce using rule 211 (WHERE -> .)
    asc             reduce using rule 211 (WHERE -> .)
    desc            reduce using rule 211 (WHERE -> .)

  ! coma            [ reduce using rule 211 (WHERE -> .) ]
  ! where           [ reduce using rule 211 (WHERE -> .) ]

    WHERE                          shift and go to state 333

state 202

    (201) SELECT -> select LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (220) HAVING -> . having EXP
    (221) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 335
    r_from          reduce using rule 221 (HAVING -> .)
    coma            reduce using rule 221 (HAVING -> .)
    where           reduce using rule 221 (HAVING -> .)
    group           reduce using rule 221 (HAVING -> .)
    union           reduce using rule 221 (HAVING -> .)
    intersect       reduce using rule 221 (HAVING -> .)
    except          reduce using rule 221 (HAVING -> .)
    order           reduce using rule 221 (HAVING -> .)
    limit           reduce using rule 221 (HAVING -> .)
    offset          reduce using rule 221 (HAVING -> .)
    ptcoma          reduce using rule 221 (HAVING -> .)
    mas             reduce using rule 221 (HAVING -> .)
    menos           reduce using rule 221 (HAVING -> .)
    multiplicacion  reduce using rule 221 (HAVING -> .)
    division        reduce using rule 221 (HAVING -> .)
    modulo          reduce using rule 221 (HAVING -> .)
    elevado         reduce using rule 221 (HAVING -> .)
    and             reduce using rule 221 (HAVING -> .)
    or              reduce using rule 221 (HAVING -> .)
    mayor           reduce using rule 221 (HAVING -> .)
    menor           reduce using rule 221 (HAVING -> .)
    mayor_igual     reduce using rule 221 (HAVING -> .)
    menor_igual     reduce using rule 221 (HAVING -> .)
    igual           reduce using rule 221 (HAVING -> .)
    diferente1      reduce using rule 221 (HAVING -> .)
    diferente2      reduce using rule 221 (HAVING -> .)
    between         reduce using rule 221 (HAVING -> .)
    is              reduce using rule 221 (HAVING -> .)
    not             reduce using rule 221 (HAVING -> .)
    as              reduce using rule 221 (HAVING -> .)
    like            reduce using rule 221 (HAVING -> .)
    isnull          reduce using rule 221 (HAVING -> .)
    notnull         reduce using rule 221 (HAVING -> .)
    cadenaString    reduce using rule 221 (HAVING -> .)
    id              reduce using rule 221 (HAVING -> .)
    cadena          reduce using rule 221 (HAVING -> .)
    in              reduce using rule 221 (HAVING -> .)
    then            reduce using rule 221 (HAVING -> .)
    when            reduce using rule 221 (HAVING -> .)
    parc            reduce using rule 221 (HAVING -> .)
    constraint      reduce using rule 221 (HAVING -> .)
    primary         reduce using rule 221 (HAVING -> .)
    null            reduce using rule 221 (HAVING -> .)
    unique          reduce using rule 221 (HAVING -> .)
    references      reduce using rule 221 (HAVING -> .)
    check           reduce using rule 221 (HAVING -> .)
    default         reduce using rule 221 (HAVING -> .)
    asc             reduce using rule 221 (HAVING -> .)
    desc            reduce using rule 221 (HAVING -> .)

  ! having          [ reduce using rule 221 (HAVING -> .) ]

    HAVING                         shift and go to state 334

state 203

    (218) GROUP -> group . by LEXP

    by              shift and go to state 336


state 204

    (233) LEXP -> LEXP coma EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for like resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
    r_from          reduce using rule 233 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 233 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 233 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 233 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 233 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 233 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 233 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 233 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 233 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 233 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 233 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 233 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 233 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 233 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 233 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 233 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 233 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 233 (LEXP -> LEXP coma EXP .)
    unique          reduce using rule 233 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 233 (LEXP -> LEXP coma EXP .)
    check           reduce using rule 233 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 233 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 233 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 233 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151

  ! mas             [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! as              [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! like            [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! cadenaString    [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! id              [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! cadena          [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 233 (LEXP -> LEXP coma EXP .) ]


state 205

    (280) EXP -> EXP mas EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 280 (EXP -> EXP mas EXP .)
    coma            reduce using rule 280 (EXP -> EXP mas EXP .)
    where           reduce using rule 280 (EXP -> EXP mas EXP .)
    group           reduce using rule 280 (EXP -> EXP mas EXP .)
    having          reduce using rule 280 (EXP -> EXP mas EXP .)
    union           reduce using rule 280 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 280 (EXP -> EXP mas EXP .)
    except          reduce using rule 280 (EXP -> EXP mas EXP .)
    order           reduce using rule 280 (EXP -> EXP mas EXP .)
    limit           reduce using rule 280 (EXP -> EXP mas EXP .)
    offset          reduce using rule 280 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 280 (EXP -> EXP mas EXP .)
    mas             reduce using rule 280 (EXP -> EXP mas EXP .)
    menos           reduce using rule 280 (EXP -> EXP mas EXP .)
    and             reduce using rule 280 (EXP -> EXP mas EXP .)
    or              reduce using rule 280 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 280 (EXP -> EXP mas EXP .)
    menor           reduce using rule 280 (EXP -> EXP mas EXP .)
    mayor_igual     reduce using rule 280 (EXP -> EXP mas EXP .)
    menor_igual     reduce using rule 280 (EXP -> EXP mas EXP .)
    igual           reduce using rule 280 (EXP -> EXP mas EXP .)
    diferente1      reduce using rule 280 (EXP -> EXP mas EXP .)
    diferente2      reduce using rule 280 (EXP -> EXP mas EXP .)
    between         reduce using rule 280 (EXP -> EXP mas EXP .)
    is              reduce using rule 280 (EXP -> EXP mas EXP .)
    not             reduce using rule 280 (EXP -> EXP mas EXP .)
    as              reduce using rule 280 (EXP -> EXP mas EXP .)
    like            reduce using rule 280 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 280 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 280 (EXP -> EXP mas EXP .)
    cadenaString    reduce using rule 280 (EXP -> EXP mas EXP .)
    id              reduce using rule 280 (EXP -> EXP mas EXP .)
    cadena          reduce using rule 280 (EXP -> EXP mas EXP .)
    in              reduce using rule 280 (EXP -> EXP mas EXP .)
    then            reduce using rule 280 (EXP -> EXP mas EXP .)
    when            reduce using rule 280 (EXP -> EXP mas EXP .)
    parc            reduce using rule 280 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 280 (EXP -> EXP mas EXP .)
    primary         reduce using rule 280 (EXP -> EXP mas EXP .)
    null            reduce using rule 280 (EXP -> EXP mas EXP .)
    unique          reduce using rule 280 (EXP -> EXP mas EXP .)
    references      reduce using rule 280 (EXP -> EXP mas EXP .)
    check           reduce using rule 280 (EXP -> EXP mas EXP .)
    default         reduce using rule 280 (EXP -> EXP mas EXP .)
    asc             reduce using rule 280 (EXP -> EXP mas EXP .)
    desc            reduce using rule 280 (EXP -> EXP mas EXP .)
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! multiplicacion  [ reduce using rule 280 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 280 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 280 (EXP -> EXP mas EXP .) ]
  ! elevado         [ reduce using rule 280 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 126 ]
  ! menos           [ shift and go to state 127 ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 206

    (281) EXP -> EXP menos EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 281 (EXP -> EXP menos EXP .)
    coma            reduce using rule 281 (EXP -> EXP menos EXP .)
    where           reduce using rule 281 (EXP -> EXP menos EXP .)
    group           reduce using rule 281 (EXP -> EXP menos EXP .)
    having          reduce using rule 281 (EXP -> EXP menos EXP .)
    union           reduce using rule 281 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 281 (EXP -> EXP menos EXP .)
    except          reduce using rule 281 (EXP -> EXP menos EXP .)
    order           reduce using rule 281 (EXP -> EXP menos EXP .)
    limit           reduce using rule 281 (EXP -> EXP menos EXP .)
    offset          reduce using rule 281 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 281 (EXP -> EXP menos EXP .)
    mas             reduce using rule 281 (EXP -> EXP menos EXP .)
    menos           reduce using rule 281 (EXP -> EXP menos EXP .)
    and             reduce using rule 281 (EXP -> EXP menos EXP .)
    or              reduce using rule 281 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 281 (EXP -> EXP menos EXP .)
    menor           reduce using rule 281 (EXP -> EXP menos EXP .)
    mayor_igual     reduce using rule 281 (EXP -> EXP menos EXP .)
    menor_igual     reduce using rule 281 (EXP -> EXP menos EXP .)
    igual           reduce using rule 281 (EXP -> EXP menos EXP .)
    diferente1      reduce using rule 281 (EXP -> EXP menos EXP .)
    diferente2      reduce using rule 281 (EXP -> EXP menos EXP .)
    between         reduce using rule 281 (EXP -> EXP menos EXP .)
    is              reduce using rule 281 (EXP -> EXP menos EXP .)
    not             reduce using rule 281 (EXP -> EXP menos EXP .)
    as              reduce using rule 281 (EXP -> EXP menos EXP .)
    like            reduce using rule 281 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 281 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 281 (EXP -> EXP menos EXP .)
    cadenaString    reduce using rule 281 (EXP -> EXP menos EXP .)
    id              reduce using rule 281 (EXP -> EXP menos EXP .)
    cadena          reduce using rule 281 (EXP -> EXP menos EXP .)
    in              reduce using rule 281 (EXP -> EXP menos EXP .)
    then            reduce using rule 281 (EXP -> EXP menos EXP .)
    when            reduce using rule 281 (EXP -> EXP menos EXP .)
    parc            reduce using rule 281 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 281 (EXP -> EXP menos EXP .)
    primary         reduce using rule 281 (EXP -> EXP menos EXP .)
    null            reduce using rule 281 (EXP -> EXP menos EXP .)
    unique          reduce using rule 281 (EXP -> EXP menos EXP .)
    references      reduce using rule 281 (EXP -> EXP menos EXP .)
    check           reduce using rule 281 (EXP -> EXP menos EXP .)
    default         reduce using rule 281 (EXP -> EXP menos EXP .)
    asc             reduce using rule 281 (EXP -> EXP menos EXP .)
    desc            reduce using rule 281 (EXP -> EXP menos EXP .)
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! multiplicacion  [ reduce using rule 281 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 281 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 281 (EXP -> EXP menos EXP .) ]
  ! elevado         [ reduce using rule 281 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 126 ]
  ! menos           [ shift and go to state 127 ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 207

    (282) EXP -> EXP multiplicacion EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    mas             reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    menos           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    and             reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    or              reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    mayor           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    menor           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    mayor_igual     reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    menor_igual     reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    igual           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    diferente1      reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    diferente2      reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    not             reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    like            reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    cadenaString    reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    cadena          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    unique          reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    check           reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 282 (EXP -> EXP multiplicacion EXP .)
    elevado         shift and go to state 131

  ! elevado         [ reduce using rule 282 (EXP -> EXP multiplicacion EXP .) ]
  ! mas             [ shift and go to state 126 ]
  ! menos           [ shift and go to state 127 ]
  ! multiplicacion  [ shift and go to state 128 ]
  ! division        [ shift and go to state 129 ]
  ! modulo          [ shift and go to state 130 ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 208

    (283) EXP -> EXP division EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 283 (EXP -> EXP division EXP .)
    coma            reduce using rule 283 (EXP -> EXP division EXP .)
    where           reduce using rule 283 (EXP -> EXP division EXP .)
    group           reduce using rule 283 (EXP -> EXP division EXP .)
    having          reduce using rule 283 (EXP -> EXP division EXP .)
    union           reduce using rule 283 (EXP -> EXP division EXP .)
    intersect       reduce using rule 283 (EXP -> EXP division EXP .)
    except          reduce using rule 283 (EXP -> EXP division EXP .)
    order           reduce using rule 283 (EXP -> EXP division EXP .)
    limit           reduce using rule 283 (EXP -> EXP division EXP .)
    offset          reduce using rule 283 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 283 (EXP -> EXP division EXP .)
    mas             reduce using rule 283 (EXP -> EXP division EXP .)
    menos           reduce using rule 283 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 283 (EXP -> EXP division EXP .)
    division        reduce using rule 283 (EXP -> EXP division EXP .)
    modulo          reduce using rule 283 (EXP -> EXP division EXP .)
    and             reduce using rule 283 (EXP -> EXP division EXP .)
    or              reduce using rule 283 (EXP -> EXP division EXP .)
    mayor           reduce using rule 283 (EXP -> EXP division EXP .)
    menor           reduce using rule 283 (EXP -> EXP division EXP .)
    mayor_igual     reduce using rule 283 (EXP -> EXP division EXP .)
    menor_igual     reduce using rule 283 (EXP -> EXP division EXP .)
    igual           reduce using rule 283 (EXP -> EXP division EXP .)
    diferente1      reduce using rule 283 (EXP -> EXP division EXP .)
    diferente2      reduce using rule 283 (EXP -> EXP division EXP .)
    between         reduce using rule 283 (EXP -> EXP division EXP .)
    is              reduce using rule 283 (EXP -> EXP division EXP .)
    not             reduce using rule 283 (EXP -> EXP division EXP .)
    as              reduce using rule 283 (EXP -> EXP division EXP .)
    like            reduce using rule 283 (EXP -> EXP division EXP .)
    isnull          reduce using rule 283 (EXP -> EXP division EXP .)
    notnull         reduce using rule 283 (EXP -> EXP division EXP .)
    cadenaString    reduce using rule 283 (EXP -> EXP division EXP .)
    id              reduce using rule 283 (EXP -> EXP division EXP .)
    cadena          reduce using rule 283 (EXP -> EXP division EXP .)
    in              reduce using rule 283 (EXP -> EXP division EXP .)
    then            reduce using rule 283 (EXP -> EXP division EXP .)
    when            reduce using rule 283 (EXP -> EXP division EXP .)
    parc            reduce using rule 283 (EXP -> EXP division EXP .)
    constraint      reduce using rule 283 (EXP -> EXP division EXP .)
    primary         reduce using rule 283 (EXP -> EXP division EXP .)
    null            reduce using rule 283 (EXP -> EXP division EXP .)
    unique          reduce using rule 283 (EXP -> EXP division EXP .)
    references      reduce using rule 283 (EXP -> EXP division EXP .)
    check           reduce using rule 283 (EXP -> EXP division EXP .)
    default         reduce using rule 283 (EXP -> EXP division EXP .)
    asc             reduce using rule 283 (EXP -> EXP division EXP .)
    desc            reduce using rule 283 (EXP -> EXP division EXP .)
    elevado         shift and go to state 131

  ! elevado         [ reduce using rule 283 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 126 ]
  ! menos           [ shift and go to state 127 ]
  ! multiplicacion  [ shift and go to state 128 ]
  ! division        [ shift and go to state 129 ]
  ! modulo          [ shift and go to state 130 ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 209

    (284) EXP -> EXP modulo EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 284 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 284 (EXP -> EXP modulo EXP .)
    where           reduce using rule 284 (EXP -> EXP modulo EXP .)
    group           reduce using rule 284 (EXP -> EXP modulo EXP .)
    having          reduce using rule 284 (EXP -> EXP modulo EXP .)
    union           reduce using rule 284 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 284 (EXP -> EXP modulo EXP .)
    except          reduce using rule 284 (EXP -> EXP modulo EXP .)
    order           reduce using rule 284 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 284 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 284 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 284 (EXP -> EXP modulo EXP .)
    mas             reduce using rule 284 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 284 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 284 (EXP -> EXP modulo EXP .)
    division        reduce using rule 284 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 284 (EXP -> EXP modulo EXP .)
    and             reduce using rule 284 (EXP -> EXP modulo EXP .)
    or              reduce using rule 284 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 284 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 284 (EXP -> EXP modulo EXP .)
    mayor_igual     reduce using rule 284 (EXP -> EXP modulo EXP .)
    menor_igual     reduce using rule 284 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 284 (EXP -> EXP modulo EXP .)
    diferente1      reduce using rule 284 (EXP -> EXP modulo EXP .)
    diferente2      reduce using rule 284 (EXP -> EXP modulo EXP .)
    between         reduce using rule 284 (EXP -> EXP modulo EXP .)
    is              reduce using rule 284 (EXP -> EXP modulo EXP .)
    not             reduce using rule 284 (EXP -> EXP modulo EXP .)
    as              reduce using rule 284 (EXP -> EXP modulo EXP .)
    like            reduce using rule 284 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 284 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 284 (EXP -> EXP modulo EXP .)
    cadenaString    reduce using rule 284 (EXP -> EXP modulo EXP .)
    id              reduce using rule 284 (EXP -> EXP modulo EXP .)
    cadena          reduce using rule 284 (EXP -> EXP modulo EXP .)
    in              reduce using rule 284 (EXP -> EXP modulo EXP .)
    then            reduce using rule 284 (EXP -> EXP modulo EXP .)
    when            reduce using rule 284 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 284 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 284 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 284 (EXP -> EXP modulo EXP .)
    null            reduce using rule 284 (EXP -> EXP modulo EXP .)
    unique          reduce using rule 284 (EXP -> EXP modulo EXP .)
    references      reduce using rule 284 (EXP -> EXP modulo EXP .)
    check           reduce using rule 284 (EXP -> EXP modulo EXP .)
    default         reduce using rule 284 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 284 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 284 (EXP -> EXP modulo EXP .)
    elevado         shift and go to state 131

  ! elevado         [ reduce using rule 284 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 126 ]
  ! menos           [ shift and go to state 127 ]
  ! multiplicacion  [ shift and go to state 128 ]
  ! division        [ shift and go to state 129 ]
  ! modulo          [ shift and go to state 130 ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 210

    (285) EXP -> EXP elevado EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 285 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 285 (EXP -> EXP elevado EXP .)
    where           reduce using rule 285 (EXP -> EXP elevado EXP .)
    group           reduce using rule 285 (EXP -> EXP elevado EXP .)
    having          reduce using rule 285 (EXP -> EXP elevado EXP .)
    union           reduce using rule 285 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 285 (EXP -> EXP elevado EXP .)
    except          reduce using rule 285 (EXP -> EXP elevado EXP .)
    order           reduce using rule 285 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 285 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 285 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 285 (EXP -> EXP elevado EXP .)
    mas             reduce using rule 285 (EXP -> EXP elevado EXP .)
    menos           reduce using rule 285 (EXP -> EXP elevado EXP .)
    multiplicacion  reduce using rule 285 (EXP -> EXP elevado EXP .)
    division        reduce using rule 285 (EXP -> EXP elevado EXP .)
    modulo          reduce using rule 285 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 285 (EXP -> EXP elevado EXP .)
    and             reduce using rule 285 (EXP -> EXP elevado EXP .)
    or              reduce using rule 285 (EXP -> EXP elevado EXP .)
    mayor           reduce using rule 285 (EXP -> EXP elevado EXP .)
    menor           reduce using rule 285 (EXP -> EXP elevado EXP .)
    mayor_igual     reduce using rule 285 (EXP -> EXP elevado EXP .)
    menor_igual     reduce using rule 285 (EXP -> EXP elevado EXP .)
    igual           reduce using rule 285 (EXP -> EXP elevado EXP .)
    diferente1      reduce using rule 285 (EXP -> EXP elevado EXP .)
    diferente2      reduce using rule 285 (EXP -> EXP elevado EXP .)
    between         reduce using rule 285 (EXP -> EXP elevado EXP .)
    is              reduce using rule 285 (EXP -> EXP elevado EXP .)
    not             reduce using rule 285 (EXP -> EXP elevado EXP .)
    as              reduce using rule 285 (EXP -> EXP elevado EXP .)
    like            reduce using rule 285 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 285 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 285 (EXP -> EXP elevado EXP .)
    cadenaString    reduce using rule 285 (EXP -> EXP elevado EXP .)
    id              reduce using rule 285 (EXP -> EXP elevado EXP .)
    cadena          reduce using rule 285 (EXP -> EXP elevado EXP .)
    in              reduce using rule 285 (EXP -> EXP elevado EXP .)
    then            reduce using rule 285 (EXP -> EXP elevado EXP .)
    when            reduce using rule 285 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 285 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 285 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 285 (EXP -> EXP elevado EXP .)
    null            reduce using rule 285 (EXP -> EXP elevado EXP .)
    unique          reduce using rule 285 (EXP -> EXP elevado EXP .)
    references      reduce using rule 285 (EXP -> EXP elevado EXP .)
    check           reduce using rule 285 (EXP -> EXP elevado EXP .)
    default         reduce using rule 285 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 285 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 285 (EXP -> EXP elevado EXP .)

  ! mas             [ shift and go to state 126 ]
  ! menos           [ shift and go to state 127 ]
  ! multiplicacion  [ shift and go to state 128 ]
  ! division        [ shift and go to state 129 ]
  ! modulo          [ shift and go to state 130 ]
  ! elevado         [ shift and go to state 131 ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 211

    (286) EXP -> EXP and EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 286 (EXP -> EXP and EXP .)
    coma            reduce using rule 286 (EXP -> EXP and EXP .)
    where           reduce using rule 286 (EXP -> EXP and EXP .)
    group           reduce using rule 286 (EXP -> EXP and EXP .)
    having          reduce using rule 286 (EXP -> EXP and EXP .)
    union           reduce using rule 286 (EXP -> EXP and EXP .)
    intersect       reduce using rule 286 (EXP -> EXP and EXP .)
    except          reduce using rule 286 (EXP -> EXP and EXP .)
    order           reduce using rule 286 (EXP -> EXP and EXP .)
    limit           reduce using rule 286 (EXP -> EXP and EXP .)
    offset          reduce using rule 286 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 286 (EXP -> EXP and EXP .)
    and             reduce using rule 286 (EXP -> EXP and EXP .)
    or              reduce using rule 286 (EXP -> EXP and EXP .)
    between         reduce using rule 286 (EXP -> EXP and EXP .)
    is              reduce using rule 286 (EXP -> EXP and EXP .)
    as              reduce using rule 286 (EXP -> EXP and EXP .)
    like            reduce using rule 286 (EXP -> EXP and EXP .)
    isnull          reduce using rule 286 (EXP -> EXP and EXP .)
    notnull         reduce using rule 286 (EXP -> EXP and EXP .)
    cadenaString    reduce using rule 286 (EXP -> EXP and EXP .)
    id              reduce using rule 286 (EXP -> EXP and EXP .)
    cadena          reduce using rule 286 (EXP -> EXP and EXP .)
    in              reduce using rule 286 (EXP -> EXP and EXP .)
    then            reduce using rule 286 (EXP -> EXP and EXP .)
    when            reduce using rule 286 (EXP -> EXP and EXP .)
    parc            reduce using rule 286 (EXP -> EXP and EXP .)
    constraint      reduce using rule 286 (EXP -> EXP and EXP .)
    primary         reduce using rule 286 (EXP -> EXP and EXP .)
    null            reduce using rule 286 (EXP -> EXP and EXP .)
    unique          reduce using rule 286 (EXP -> EXP and EXP .)
    references      reduce using rule 286 (EXP -> EXP and EXP .)
    check           reduce using rule 286 (EXP -> EXP and EXP .)
    default         reduce using rule 286 (EXP -> EXP and EXP .)
    asc             reduce using rule 286 (EXP -> EXP and EXP .)
    desc            reduce using rule 286 (EXP -> EXP and EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    not             shift and go to state 143

  ! mas             [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! multiplicacion  [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! elevado         [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! mayor_igual     [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! menor_igual     [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! diferente1      [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! diferente2      [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! not             [ reduce using rule 286 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 212

    (287) EXP -> EXP or EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 287 (EXP -> EXP or EXP .)
    coma            reduce using rule 287 (EXP -> EXP or EXP .)
    where           reduce using rule 287 (EXP -> EXP or EXP .)
    group           reduce using rule 287 (EXP -> EXP or EXP .)
    having          reduce using rule 287 (EXP -> EXP or EXP .)
    union           reduce using rule 287 (EXP -> EXP or EXP .)
    intersect       reduce using rule 287 (EXP -> EXP or EXP .)
    except          reduce using rule 287 (EXP -> EXP or EXP .)
    order           reduce using rule 287 (EXP -> EXP or EXP .)
    limit           reduce using rule 287 (EXP -> EXP or EXP .)
    offset          reduce using rule 287 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 287 (EXP -> EXP or EXP .)
    or              reduce using rule 287 (EXP -> EXP or EXP .)
    between         reduce using rule 287 (EXP -> EXP or EXP .)
    is              reduce using rule 287 (EXP -> EXP or EXP .)
    as              reduce using rule 287 (EXP -> EXP or EXP .)
    like            reduce using rule 287 (EXP -> EXP or EXP .)
    isnull          reduce using rule 287 (EXP -> EXP or EXP .)
    notnull         reduce using rule 287 (EXP -> EXP or EXP .)
    cadenaString    reduce using rule 287 (EXP -> EXP or EXP .)
    id              reduce using rule 287 (EXP -> EXP or EXP .)
    cadena          reduce using rule 287 (EXP -> EXP or EXP .)
    in              reduce using rule 287 (EXP -> EXP or EXP .)
    then            reduce using rule 287 (EXP -> EXP or EXP .)
    when            reduce using rule 287 (EXP -> EXP or EXP .)
    parc            reduce using rule 287 (EXP -> EXP or EXP .)
    constraint      reduce using rule 287 (EXP -> EXP or EXP .)
    primary         reduce using rule 287 (EXP -> EXP or EXP .)
    null            reduce using rule 287 (EXP -> EXP or EXP .)
    unique          reduce using rule 287 (EXP -> EXP or EXP .)
    references      reduce using rule 287 (EXP -> EXP or EXP .)
    check           reduce using rule 287 (EXP -> EXP or EXP .)
    default         reduce using rule 287 (EXP -> EXP or EXP .)
    asc             reduce using rule 287 (EXP -> EXP or EXP .)
    desc            reduce using rule 287 (EXP -> EXP or EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    not             shift and go to state 143

  ! mas             [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! multiplicacion  [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! elevado         [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! mayor_igual     [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! menor_igual     [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! diferente1      [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! diferente2      [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! not             [ reduce using rule 287 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 213

    (288) EXP -> EXP mayor EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 288 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 288 (EXP -> EXP mayor EXP .)
    where           reduce using rule 288 (EXP -> EXP mayor EXP .)
    group           reduce using rule 288 (EXP -> EXP mayor EXP .)
    having          reduce using rule 288 (EXP -> EXP mayor EXP .)
    union           reduce using rule 288 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 288 (EXP -> EXP mayor EXP .)
    except          reduce using rule 288 (EXP -> EXP mayor EXP .)
    order           reduce using rule 288 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 288 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 288 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 288 (EXP -> EXP mayor EXP .)
    and             reduce using rule 288 (EXP -> EXP mayor EXP .)
    or              reduce using rule 288 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 288 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 288 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 288 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 288 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 288 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 288 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 288 (EXP -> EXP mayor EXP .)
    between         reduce using rule 288 (EXP -> EXP mayor EXP .)
    is              reduce using rule 288 (EXP -> EXP mayor EXP .)
    not             reduce using rule 288 (EXP -> EXP mayor EXP .)
    as              reduce using rule 288 (EXP -> EXP mayor EXP .)
    like            reduce using rule 288 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 288 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 288 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 288 (EXP -> EXP mayor EXP .)
    id              reduce using rule 288 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 288 (EXP -> EXP mayor EXP .)
    in              reduce using rule 288 (EXP -> EXP mayor EXP .)
    then            reduce using rule 288 (EXP -> EXP mayor EXP .)
    when            reduce using rule 288 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 288 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 288 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 288 (EXP -> EXP mayor EXP .)
    null            reduce using rule 288 (EXP -> EXP mayor EXP .)
    unique          reduce using rule 288 (EXP -> EXP mayor EXP .)
    references      reduce using rule 288 (EXP -> EXP mayor EXP .)
    check           reduce using rule 288 (EXP -> EXP mayor EXP .)
    default         reduce using rule 288 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 288 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 288 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 214

    (289) EXP -> EXP menor EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 289 (EXP -> EXP menor EXP .)
    coma            reduce using rule 289 (EXP -> EXP menor EXP .)
    where           reduce using rule 289 (EXP -> EXP menor EXP .)
    group           reduce using rule 289 (EXP -> EXP menor EXP .)
    having          reduce using rule 289 (EXP -> EXP menor EXP .)
    union           reduce using rule 289 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 289 (EXP -> EXP menor EXP .)
    except          reduce using rule 289 (EXP -> EXP menor EXP .)
    order           reduce using rule 289 (EXP -> EXP menor EXP .)
    limit           reduce using rule 289 (EXP -> EXP menor EXP .)
    offset          reduce using rule 289 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 289 (EXP -> EXP menor EXP .)
    and             reduce using rule 289 (EXP -> EXP menor EXP .)
    or              reduce using rule 289 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 289 (EXP -> EXP menor EXP .)
    menor           reduce using rule 289 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 289 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 289 (EXP -> EXP menor EXP .)
    igual           reduce using rule 289 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 289 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 289 (EXP -> EXP menor EXP .)
    between         reduce using rule 289 (EXP -> EXP menor EXP .)
    is              reduce using rule 289 (EXP -> EXP menor EXP .)
    not             reduce using rule 289 (EXP -> EXP menor EXP .)
    as              reduce using rule 289 (EXP -> EXP menor EXP .)
    like            reduce using rule 289 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 289 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 289 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 289 (EXP -> EXP menor EXP .)
    id              reduce using rule 289 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 289 (EXP -> EXP menor EXP .)
    in              reduce using rule 289 (EXP -> EXP menor EXP .)
    then            reduce using rule 289 (EXP -> EXP menor EXP .)
    when            reduce using rule 289 (EXP -> EXP menor EXP .)
    parc            reduce using rule 289 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 289 (EXP -> EXP menor EXP .)
    primary         reduce using rule 289 (EXP -> EXP menor EXP .)
    null            reduce using rule 289 (EXP -> EXP menor EXP .)
    unique          reduce using rule 289 (EXP -> EXP menor EXP .)
    references      reduce using rule 289 (EXP -> EXP menor EXP .)
    check           reduce using rule 289 (EXP -> EXP menor EXP .)
    default         reduce using rule 289 (EXP -> EXP menor EXP .)
    asc             reduce using rule 289 (EXP -> EXP menor EXP .)
    desc            reduce using rule 289 (EXP -> EXP menor EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 215

    (290) EXP -> EXP mayor_igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    unique          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    check           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 216

    (291) EXP -> EXP menor_igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    unique          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    check           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 217

    (292) EXP -> EXP igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 292 (EXP -> EXP igual EXP .)
    coma            reduce using rule 292 (EXP -> EXP igual EXP .)
    where           reduce using rule 292 (EXP -> EXP igual EXP .)
    group           reduce using rule 292 (EXP -> EXP igual EXP .)
    having          reduce using rule 292 (EXP -> EXP igual EXP .)
    union           reduce using rule 292 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 292 (EXP -> EXP igual EXP .)
    except          reduce using rule 292 (EXP -> EXP igual EXP .)
    order           reduce using rule 292 (EXP -> EXP igual EXP .)
    limit           reduce using rule 292 (EXP -> EXP igual EXP .)
    offset          reduce using rule 292 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 292 (EXP -> EXP igual EXP .)
    and             reduce using rule 292 (EXP -> EXP igual EXP .)
    or              reduce using rule 292 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 292 (EXP -> EXP igual EXP .)
    menor           reduce using rule 292 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 292 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 292 (EXP -> EXP igual EXP .)
    igual           reduce using rule 292 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 292 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 292 (EXP -> EXP igual EXP .)
    between         reduce using rule 292 (EXP -> EXP igual EXP .)
    is              reduce using rule 292 (EXP -> EXP igual EXP .)
    not             reduce using rule 292 (EXP -> EXP igual EXP .)
    as              reduce using rule 292 (EXP -> EXP igual EXP .)
    like            reduce using rule 292 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 292 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 292 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 292 (EXP -> EXP igual EXP .)
    id              reduce using rule 292 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 292 (EXP -> EXP igual EXP .)
    in              reduce using rule 292 (EXP -> EXP igual EXP .)
    then            reduce using rule 292 (EXP -> EXP igual EXP .)
    when            reduce using rule 292 (EXP -> EXP igual EXP .)
    parc            reduce using rule 292 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 292 (EXP -> EXP igual EXP .)
    primary         reduce using rule 292 (EXP -> EXP igual EXP .)
    null            reduce using rule 292 (EXP -> EXP igual EXP .)
    unique          reduce using rule 292 (EXP -> EXP igual EXP .)
    references      reduce using rule 292 (EXP -> EXP igual EXP .)
    check           reduce using rule 292 (EXP -> EXP igual EXP .)
    default         reduce using rule 292 (EXP -> EXP igual EXP .)
    asc             reduce using rule 292 (EXP -> EXP igual EXP .)
    desc            reduce using rule 292 (EXP -> EXP igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 218

    (293) EXP -> EXP diferente1 EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    unique          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    check           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 219

    (294) EXP -> EXP diferente2 EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    unique          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    check           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 220

    (295) EXP -> EXP between EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 295 (EXP -> EXP between EXP .)
    coma            reduce using rule 295 (EXP -> EXP between EXP .)
    where           reduce using rule 295 (EXP -> EXP between EXP .)
    group           reduce using rule 295 (EXP -> EXP between EXP .)
    having          reduce using rule 295 (EXP -> EXP between EXP .)
    union           reduce using rule 295 (EXP -> EXP between EXP .)
    intersect       reduce using rule 295 (EXP -> EXP between EXP .)
    except          reduce using rule 295 (EXP -> EXP between EXP .)
    order           reduce using rule 295 (EXP -> EXP between EXP .)
    limit           reduce using rule 295 (EXP -> EXP between EXP .)
    offset          reduce using rule 295 (EXP -> EXP between EXP .)
    ptcoma          reduce using rule 295 (EXP -> EXP between EXP .)
    and             reduce using rule 295 (EXP -> EXP between EXP .)
    or              reduce using rule 295 (EXP -> EXP between EXP .)
    between         reduce using rule 295 (EXP -> EXP between EXP .)
    is              reduce using rule 295 (EXP -> EXP between EXP .)
    not             reduce using rule 295 (EXP -> EXP between EXP .)
    as              reduce using rule 295 (EXP -> EXP between EXP .)
    like            reduce using rule 295 (EXP -> EXP between EXP .)
    isnull          reduce using rule 295 (EXP -> EXP between EXP .)
    notnull         reduce using rule 295 (EXP -> EXP between EXP .)
    cadenaString    reduce using rule 295 (EXP -> EXP between EXP .)
    id              reduce using rule 295 (EXP -> EXP between EXP .)
    cadena          reduce using rule 295 (EXP -> EXP between EXP .)
    in              reduce using rule 295 (EXP -> EXP between EXP .)
    then            reduce using rule 295 (EXP -> EXP between EXP .)
    when            reduce using rule 295 (EXP -> EXP between EXP .)
    parc            reduce using rule 295 (EXP -> EXP between EXP .)
    constraint      reduce using rule 295 (EXP -> EXP between EXP .)
    primary         reduce using rule 295 (EXP -> EXP between EXP .)
    null            reduce using rule 295 (EXP -> EXP between EXP .)
    unique          reduce using rule 295 (EXP -> EXP between EXP .)
    references      reduce using rule 295 (EXP -> EXP between EXP .)
    check           reduce using rule 295 (EXP -> EXP between EXP .)
    default         reduce using rule 295 (EXP -> EXP between EXP .)
    asc             reduce using rule 295 (EXP -> EXP between EXP .)
    desc            reduce using rule 295 (EXP -> EXP between EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140

  ! mas             [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! menos           [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! multiplicacion  [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! division        [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! modulo          [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! elevado         [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! mayor           [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! menor           [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! mayor_igual     [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! menor_igual     [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! igual           [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! diferente1      [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! diferente2      [ reduce using rule 295 (EXP -> EXP between EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 221

    (318) EXP -> EXP between symetric . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 337
    SELECT                         shift and go to state 72

state 222

    (296) EXP -> EXP is not . null
    (297) EXP -> EXP is not . true
    (298) EXP -> EXP is not . false
    (299) EXP -> EXP is not . unknown
    (321) EXP -> EXP is not . distinct r_from EXP

    null            shift and go to state 338
    true            shift and go to state 339
    false           shift and go to state 340
    unknown         shift and go to state 341
    distinct        shift and go to state 342


state 223

    (301) EXP -> EXP is null .

    r_from          reduce using rule 301 (EXP -> EXP is null .)
    coma            reduce using rule 301 (EXP -> EXP is null .)
    where           reduce using rule 301 (EXP -> EXP is null .)
    group           reduce using rule 301 (EXP -> EXP is null .)
    having          reduce using rule 301 (EXP -> EXP is null .)
    union           reduce using rule 301 (EXP -> EXP is null .)
    intersect       reduce using rule 301 (EXP -> EXP is null .)
    except          reduce using rule 301 (EXP -> EXP is null .)
    order           reduce using rule 301 (EXP -> EXP is null .)
    limit           reduce using rule 301 (EXP -> EXP is null .)
    offset          reduce using rule 301 (EXP -> EXP is null .)
    ptcoma          reduce using rule 301 (EXP -> EXP is null .)
    mas             reduce using rule 301 (EXP -> EXP is null .)
    menos           reduce using rule 301 (EXP -> EXP is null .)
    multiplicacion  reduce using rule 301 (EXP -> EXP is null .)
    division        reduce using rule 301 (EXP -> EXP is null .)
    modulo          reduce using rule 301 (EXP -> EXP is null .)
    elevado         reduce using rule 301 (EXP -> EXP is null .)
    and             reduce using rule 301 (EXP -> EXP is null .)
    or              reduce using rule 301 (EXP -> EXP is null .)
    mayor           reduce using rule 301 (EXP -> EXP is null .)
    menor           reduce using rule 301 (EXP -> EXP is null .)
    mayor_igual     reduce using rule 301 (EXP -> EXP is null .)
    menor_igual     reduce using rule 301 (EXP -> EXP is null .)
    igual           reduce using rule 301 (EXP -> EXP is null .)
    diferente1      reduce using rule 301 (EXP -> EXP is null .)
    diferente2      reduce using rule 301 (EXP -> EXP is null .)
    between         reduce using rule 301 (EXP -> EXP is null .)
    is              reduce using rule 301 (EXP -> EXP is null .)
    not             reduce using rule 301 (EXP -> EXP is null .)
    as              reduce using rule 301 (EXP -> EXP is null .)
    like            reduce using rule 301 (EXP -> EXP is null .)
    isnull          reduce using rule 301 (EXP -> EXP is null .)
    notnull         reduce using rule 301 (EXP -> EXP is null .)
    cadenaString    reduce using rule 301 (EXP -> EXP is null .)
    id              reduce using rule 301 (EXP -> EXP is null .)
    cadena          reduce using rule 301 (EXP -> EXP is null .)
    in              reduce using rule 301 (EXP -> EXP is null .)
    then            reduce using rule 301 (EXP -> EXP is null .)
    when            reduce using rule 301 (EXP -> EXP is null .)
    parc            reduce using rule 301 (EXP -> EXP is null .)
    constraint      reduce using rule 301 (EXP -> EXP is null .)
    primary         reduce using rule 301 (EXP -> EXP is null .)
    null            reduce using rule 301 (EXP -> EXP is null .)
    unique          reduce using rule 301 (EXP -> EXP is null .)
    references      reduce using rule 301 (EXP -> EXP is null .)
    check           reduce using rule 301 (EXP -> EXP is null .)
    default         reduce using rule 301 (EXP -> EXP is null .)
    asc             reduce using rule 301 (EXP -> EXP is null .)
    desc            reduce using rule 301 (EXP -> EXP is null .)


state 224

    (302) EXP -> EXP is true .

    r_from          reduce using rule 302 (EXP -> EXP is true .)
    coma            reduce using rule 302 (EXP -> EXP is true .)
    where           reduce using rule 302 (EXP -> EXP is true .)
    group           reduce using rule 302 (EXP -> EXP is true .)
    having          reduce using rule 302 (EXP -> EXP is true .)
    union           reduce using rule 302 (EXP -> EXP is true .)
    intersect       reduce using rule 302 (EXP -> EXP is true .)
    except          reduce using rule 302 (EXP -> EXP is true .)
    order           reduce using rule 302 (EXP -> EXP is true .)
    limit           reduce using rule 302 (EXP -> EXP is true .)
    offset          reduce using rule 302 (EXP -> EXP is true .)
    ptcoma          reduce using rule 302 (EXP -> EXP is true .)
    mas             reduce using rule 302 (EXP -> EXP is true .)
    menos           reduce using rule 302 (EXP -> EXP is true .)
    multiplicacion  reduce using rule 302 (EXP -> EXP is true .)
    division        reduce using rule 302 (EXP -> EXP is true .)
    modulo          reduce using rule 302 (EXP -> EXP is true .)
    elevado         reduce using rule 302 (EXP -> EXP is true .)
    and             reduce using rule 302 (EXP -> EXP is true .)
    or              reduce using rule 302 (EXP -> EXP is true .)
    mayor           reduce using rule 302 (EXP -> EXP is true .)
    menor           reduce using rule 302 (EXP -> EXP is true .)
    mayor_igual     reduce using rule 302 (EXP -> EXP is true .)
    menor_igual     reduce using rule 302 (EXP -> EXP is true .)
    igual           reduce using rule 302 (EXP -> EXP is true .)
    diferente1      reduce using rule 302 (EXP -> EXP is true .)
    diferente2      reduce using rule 302 (EXP -> EXP is true .)
    between         reduce using rule 302 (EXP -> EXP is true .)
    is              reduce using rule 302 (EXP -> EXP is true .)
    not             reduce using rule 302 (EXP -> EXP is true .)
    as              reduce using rule 302 (EXP -> EXP is true .)
    like            reduce using rule 302 (EXP -> EXP is true .)
    isnull          reduce using rule 302 (EXP -> EXP is true .)
    notnull         reduce using rule 302 (EXP -> EXP is true .)
    cadenaString    reduce using rule 302 (EXP -> EXP is true .)
    id              reduce using rule 302 (EXP -> EXP is true .)
    cadena          reduce using rule 302 (EXP -> EXP is true .)
    in              reduce using rule 302 (EXP -> EXP is true .)
    then            reduce using rule 302 (EXP -> EXP is true .)
    when            reduce using rule 302 (EXP -> EXP is true .)
    parc            reduce using rule 302 (EXP -> EXP is true .)
    constraint      reduce using rule 302 (EXP -> EXP is true .)
    primary         reduce using rule 302 (EXP -> EXP is true .)
    null            reduce using rule 302 (EXP -> EXP is true .)
    unique          reduce using rule 302 (EXP -> EXP is true .)
    references      reduce using rule 302 (EXP -> EXP is true .)
    check           reduce using rule 302 (EXP -> EXP is true .)
    default         reduce using rule 302 (EXP -> EXP is true .)
    asc             reduce using rule 302 (EXP -> EXP is true .)
    desc            reduce using rule 302 (EXP -> EXP is true .)


state 225

    (308) EXP -> EXP is false .

    r_from          reduce using rule 308 (EXP -> EXP is false .)
    coma            reduce using rule 308 (EXP -> EXP is false .)
    where           reduce using rule 308 (EXP -> EXP is false .)
    group           reduce using rule 308 (EXP -> EXP is false .)
    having          reduce using rule 308 (EXP -> EXP is false .)
    union           reduce using rule 308 (EXP -> EXP is false .)
    intersect       reduce using rule 308 (EXP -> EXP is false .)
    except          reduce using rule 308 (EXP -> EXP is false .)
    order           reduce using rule 308 (EXP -> EXP is false .)
    limit           reduce using rule 308 (EXP -> EXP is false .)
    offset          reduce using rule 308 (EXP -> EXP is false .)
    ptcoma          reduce using rule 308 (EXP -> EXP is false .)
    mas             reduce using rule 308 (EXP -> EXP is false .)
    menos           reduce using rule 308 (EXP -> EXP is false .)
    multiplicacion  reduce using rule 308 (EXP -> EXP is false .)
    division        reduce using rule 308 (EXP -> EXP is false .)
    modulo          reduce using rule 308 (EXP -> EXP is false .)
    elevado         reduce using rule 308 (EXP -> EXP is false .)
    and             reduce using rule 308 (EXP -> EXP is false .)
    or              reduce using rule 308 (EXP -> EXP is false .)
    mayor           reduce using rule 308 (EXP -> EXP is false .)
    menor           reduce using rule 308 (EXP -> EXP is false .)
    mayor_igual     reduce using rule 308 (EXP -> EXP is false .)
    menor_igual     reduce using rule 308 (EXP -> EXP is false .)
    igual           reduce using rule 308 (EXP -> EXP is false .)
    diferente1      reduce using rule 308 (EXP -> EXP is false .)
    diferente2      reduce using rule 308 (EXP -> EXP is false .)
    between         reduce using rule 308 (EXP -> EXP is false .)
    is              reduce using rule 308 (EXP -> EXP is false .)
    not             reduce using rule 308 (EXP -> EXP is false .)
    as              reduce using rule 308 (EXP -> EXP is false .)
    like            reduce using rule 308 (EXP -> EXP is false .)
    isnull          reduce using rule 308 (EXP -> EXP is false .)
    notnull         reduce using rule 308 (EXP -> EXP is false .)
    cadenaString    reduce using rule 308 (EXP -> EXP is false .)
    id              reduce using rule 308 (EXP -> EXP is false .)
    cadena          reduce using rule 308 (EXP -> EXP is false .)
    in              reduce using rule 308 (EXP -> EXP is false .)
    then            reduce using rule 308 (EXP -> EXP is false .)
    when            reduce using rule 308 (EXP -> EXP is false .)
    parc            reduce using rule 308 (EXP -> EXP is false .)
    constraint      reduce using rule 308 (EXP -> EXP is false .)
    primary         reduce using rule 308 (EXP -> EXP is false .)
    null            reduce using rule 308 (EXP -> EXP is false .)
    unique          reduce using rule 308 (EXP -> EXP is false .)
    references      reduce using rule 308 (EXP -> EXP is false .)
    check           reduce using rule 308 (EXP -> EXP is false .)
    default         reduce using rule 308 (EXP -> EXP is false .)
    asc             reduce using rule 308 (EXP -> EXP is false .)
    desc            reduce using rule 308 (EXP -> EXP is false .)


state 226

    (303) EXP -> EXP is unknown .

    r_from          reduce using rule 303 (EXP -> EXP is unknown .)
    coma            reduce using rule 303 (EXP -> EXP is unknown .)
    where           reduce using rule 303 (EXP -> EXP is unknown .)
    group           reduce using rule 303 (EXP -> EXP is unknown .)
    having          reduce using rule 303 (EXP -> EXP is unknown .)
    union           reduce using rule 303 (EXP -> EXP is unknown .)
    intersect       reduce using rule 303 (EXP -> EXP is unknown .)
    except          reduce using rule 303 (EXP -> EXP is unknown .)
    order           reduce using rule 303 (EXP -> EXP is unknown .)
    limit           reduce using rule 303 (EXP -> EXP is unknown .)
    offset          reduce using rule 303 (EXP -> EXP is unknown .)
    ptcoma          reduce using rule 303 (EXP -> EXP is unknown .)
    mas             reduce using rule 303 (EXP -> EXP is unknown .)
    menos           reduce using rule 303 (EXP -> EXP is unknown .)
    multiplicacion  reduce using rule 303 (EXP -> EXP is unknown .)
    division        reduce using rule 303 (EXP -> EXP is unknown .)
    modulo          reduce using rule 303 (EXP -> EXP is unknown .)
    elevado         reduce using rule 303 (EXP -> EXP is unknown .)
    and             reduce using rule 303 (EXP -> EXP is unknown .)
    or              reduce using rule 303 (EXP -> EXP is unknown .)
    mayor           reduce using rule 303 (EXP -> EXP is unknown .)
    menor           reduce using rule 303 (EXP -> EXP is unknown .)
    mayor_igual     reduce using rule 303 (EXP -> EXP is unknown .)
    menor_igual     reduce using rule 303 (EXP -> EXP is unknown .)
    igual           reduce using rule 303 (EXP -> EXP is unknown .)
    diferente1      reduce using rule 303 (EXP -> EXP is unknown .)
    diferente2      reduce using rule 303 (EXP -> EXP is unknown .)
    between         reduce using rule 303 (EXP -> EXP is unknown .)
    is              reduce using rule 303 (EXP -> EXP is unknown .)
    not             reduce using rule 303 (EXP -> EXP is unknown .)
    as              reduce using rule 303 (EXP -> EXP is unknown .)
    like            reduce using rule 303 (EXP -> EXP is unknown .)
    isnull          reduce using rule 303 (EXP -> EXP is unknown .)
    notnull         reduce using rule 303 (EXP -> EXP is unknown .)
    cadenaString    reduce using rule 303 (EXP -> EXP is unknown .)
    id              reduce using rule 303 (EXP -> EXP is unknown .)
    cadena          reduce using rule 303 (EXP -> EXP is unknown .)
    in              reduce using rule 303 (EXP -> EXP is unknown .)
    then            reduce using rule 303 (EXP -> EXP is unknown .)
    when            reduce using rule 303 (EXP -> EXP is unknown .)
    parc            reduce using rule 303 (EXP -> EXP is unknown .)
    constraint      reduce using rule 303 (EXP -> EXP is unknown .)
    primary         reduce using rule 303 (EXP -> EXP is unknown .)
    null            reduce using rule 303 (EXP -> EXP is unknown .)
    unique          reduce using rule 303 (EXP -> EXP is unknown .)
    references      reduce using rule 303 (EXP -> EXP is unknown .)
    check           reduce using rule 303 (EXP -> EXP is unknown .)
    default         reduce using rule 303 (EXP -> EXP is unknown .)
    asc             reduce using rule 303 (EXP -> EXP is unknown .)
    desc            reduce using rule 303 (EXP -> EXP is unknown .)


state 227

    (322) EXP -> EXP is distinct . r_from EXP

    r_from          shift and go to state 343


state 228

    (300) EXP -> EXP not like . cadena

    cadena          shift and go to state 344


state 229

    (317) EXP -> EXP not between . EXP
    (323) EXP -> EXP not between . symetric EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    symetric        shift and go to state 346
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 345
    SELECT                         shift and go to state 72

state 230

    (320) EXP -> EXP not in . para LEXP parc

    para            shift and go to state 347


state 231

    (307) EXP -> EXP like cadena .

    r_from          reduce using rule 307 (EXP -> EXP like cadena .)
    coma            reduce using rule 307 (EXP -> EXP like cadena .)
    where           reduce using rule 307 (EXP -> EXP like cadena .)
    group           reduce using rule 307 (EXP -> EXP like cadena .)
    having          reduce using rule 307 (EXP -> EXP like cadena .)
    union           reduce using rule 307 (EXP -> EXP like cadena .)
    intersect       reduce using rule 307 (EXP -> EXP like cadena .)
    except          reduce using rule 307 (EXP -> EXP like cadena .)
    order           reduce using rule 307 (EXP -> EXP like cadena .)
    limit           reduce using rule 307 (EXP -> EXP like cadena .)
    offset          reduce using rule 307 (EXP -> EXP like cadena .)
    ptcoma          reduce using rule 307 (EXP -> EXP like cadena .)
    mas             reduce using rule 307 (EXP -> EXP like cadena .)
    menos           reduce using rule 307 (EXP -> EXP like cadena .)
    multiplicacion  reduce using rule 307 (EXP -> EXP like cadena .)
    division        reduce using rule 307 (EXP -> EXP like cadena .)
    modulo          reduce using rule 307 (EXP -> EXP like cadena .)
    elevado         reduce using rule 307 (EXP -> EXP like cadena .)
    and             reduce using rule 307 (EXP -> EXP like cadena .)
    or              reduce using rule 307 (EXP -> EXP like cadena .)
    mayor           reduce using rule 307 (EXP -> EXP like cadena .)
    menor           reduce using rule 307 (EXP -> EXP like cadena .)
    mayor_igual     reduce using rule 307 (EXP -> EXP like cadena .)
    menor_igual     reduce using rule 307 (EXP -> EXP like cadena .)
    igual           reduce using rule 307 (EXP -> EXP like cadena .)
    diferente1      reduce using rule 307 (EXP -> EXP like cadena .)
    diferente2      reduce using rule 307 (EXP -> EXP like cadena .)
    between         reduce using rule 307 (EXP -> EXP like cadena .)
    is              reduce using rule 307 (EXP -> EXP like cadena .)
    not             reduce using rule 307 (EXP -> EXP like cadena .)
    as              reduce using rule 307 (EXP -> EXP like cadena .)
    like            reduce using rule 307 (EXP -> EXP like cadena .)
    isnull          reduce using rule 307 (EXP -> EXP like cadena .)
    notnull         reduce using rule 307 (EXP -> EXP like cadena .)
    cadenaString    reduce using rule 307 (EXP -> EXP like cadena .)
    id              reduce using rule 307 (EXP -> EXP like cadena .)
    cadena          reduce using rule 307 (EXP -> EXP like cadena .)
    in              reduce using rule 307 (EXP -> EXP like cadena .)
    then            reduce using rule 307 (EXP -> EXP like cadena .)
    when            reduce using rule 307 (EXP -> EXP like cadena .)
    parc            reduce using rule 307 (EXP -> EXP like cadena .)
    constraint      reduce using rule 307 (EXP -> EXP like cadena .)
    primary         reduce using rule 307 (EXP -> EXP like cadena .)
    null            reduce using rule 307 (EXP -> EXP like cadena .)
    unique          reduce using rule 307 (EXP -> EXP like cadena .)
    references      reduce using rule 307 (EXP -> EXP like cadena .)
    check           reduce using rule 307 (EXP -> EXP like cadena .)
    default         reduce using rule 307 (EXP -> EXP like cadena .)
    asc             reduce using rule 307 (EXP -> EXP like cadena .)
    desc            reduce using rule 307 (EXP -> EXP like cadena .)


state 232

    (304) EXP -> EXP as cadena .

    r_from          reduce using rule 304 (EXP -> EXP as cadena .)
    coma            reduce using rule 304 (EXP -> EXP as cadena .)
    where           reduce using rule 304 (EXP -> EXP as cadena .)
    group           reduce using rule 304 (EXP -> EXP as cadena .)
    having          reduce using rule 304 (EXP -> EXP as cadena .)
    union           reduce using rule 304 (EXP -> EXP as cadena .)
    intersect       reduce using rule 304 (EXP -> EXP as cadena .)
    except          reduce using rule 304 (EXP -> EXP as cadena .)
    order           reduce using rule 304 (EXP -> EXP as cadena .)
    limit           reduce using rule 304 (EXP -> EXP as cadena .)
    offset          reduce using rule 304 (EXP -> EXP as cadena .)
    ptcoma          reduce using rule 304 (EXP -> EXP as cadena .)
    mas             reduce using rule 304 (EXP -> EXP as cadena .)
    menos           reduce using rule 304 (EXP -> EXP as cadena .)
    multiplicacion  reduce using rule 304 (EXP -> EXP as cadena .)
    division        reduce using rule 304 (EXP -> EXP as cadena .)
    modulo          reduce using rule 304 (EXP -> EXP as cadena .)
    elevado         reduce using rule 304 (EXP -> EXP as cadena .)
    and             reduce using rule 304 (EXP -> EXP as cadena .)
    or              reduce using rule 304 (EXP -> EXP as cadena .)
    mayor           reduce using rule 304 (EXP -> EXP as cadena .)
    menor           reduce using rule 304 (EXP -> EXP as cadena .)
    mayor_igual     reduce using rule 304 (EXP -> EXP as cadena .)
    menor_igual     reduce using rule 304 (EXP -> EXP as cadena .)
    igual           reduce using rule 304 (EXP -> EXP as cadena .)
    diferente1      reduce using rule 304 (EXP -> EXP as cadena .)
    diferente2      reduce using rule 304 (EXP -> EXP as cadena .)
    between         reduce using rule 304 (EXP -> EXP as cadena .)
    is              reduce using rule 304 (EXP -> EXP as cadena .)
    not             reduce using rule 304 (EXP -> EXP as cadena .)
    as              reduce using rule 304 (EXP -> EXP as cadena .)
    like            reduce using rule 304 (EXP -> EXP as cadena .)
    isnull          reduce using rule 304 (EXP -> EXP as cadena .)
    notnull         reduce using rule 304 (EXP -> EXP as cadena .)
    cadenaString    reduce using rule 304 (EXP -> EXP as cadena .)
    id              reduce using rule 304 (EXP -> EXP as cadena .)
    cadena          reduce using rule 304 (EXP -> EXP as cadena .)
    in              reduce using rule 304 (EXP -> EXP as cadena .)
    then            reduce using rule 304 (EXP -> EXP as cadena .)
    when            reduce using rule 304 (EXP -> EXP as cadena .)
    parc            reduce using rule 304 (EXP -> EXP as cadena .)
    constraint      reduce using rule 304 (EXP -> EXP as cadena .)
    primary         reduce using rule 304 (EXP -> EXP as cadena .)
    null            reduce using rule 304 (EXP -> EXP as cadena .)
    unique          reduce using rule 304 (EXP -> EXP as cadena .)
    references      reduce using rule 304 (EXP -> EXP as cadena .)
    check           reduce using rule 304 (EXP -> EXP as cadena .)
    default         reduce using rule 304 (EXP -> EXP as cadena .)
    asc             reduce using rule 304 (EXP -> EXP as cadena .)
    desc            reduce using rule 304 (EXP -> EXP as cadena .)


state 233

    (305) EXP -> EXP as id .

    r_from          reduce using rule 305 (EXP -> EXP as id .)
    coma            reduce using rule 305 (EXP -> EXP as id .)
    where           reduce using rule 305 (EXP -> EXP as id .)
    group           reduce using rule 305 (EXP -> EXP as id .)
    having          reduce using rule 305 (EXP -> EXP as id .)
    union           reduce using rule 305 (EXP -> EXP as id .)
    intersect       reduce using rule 305 (EXP -> EXP as id .)
    except          reduce using rule 305 (EXP -> EXP as id .)
    order           reduce using rule 305 (EXP -> EXP as id .)
    limit           reduce using rule 305 (EXP -> EXP as id .)
    offset          reduce using rule 305 (EXP -> EXP as id .)
    ptcoma          reduce using rule 305 (EXP -> EXP as id .)
    mas             reduce using rule 305 (EXP -> EXP as id .)
    menos           reduce using rule 305 (EXP -> EXP as id .)
    multiplicacion  reduce using rule 305 (EXP -> EXP as id .)
    division        reduce using rule 305 (EXP -> EXP as id .)
    modulo          reduce using rule 305 (EXP -> EXP as id .)
    elevado         reduce using rule 305 (EXP -> EXP as id .)
    and             reduce using rule 305 (EXP -> EXP as id .)
    or              reduce using rule 305 (EXP -> EXP as id .)
    mayor           reduce using rule 305 (EXP -> EXP as id .)
    menor           reduce using rule 305 (EXP -> EXP as id .)
    mayor_igual     reduce using rule 305 (EXP -> EXP as id .)
    menor_igual     reduce using rule 305 (EXP -> EXP as id .)
    igual           reduce using rule 305 (EXP -> EXP as id .)
    diferente1      reduce using rule 305 (EXP -> EXP as id .)
    diferente2      reduce using rule 305 (EXP -> EXP as id .)
    between         reduce using rule 305 (EXP -> EXP as id .)
    is              reduce using rule 305 (EXP -> EXP as id .)
    not             reduce using rule 305 (EXP -> EXP as id .)
    as              reduce using rule 305 (EXP -> EXP as id .)
    like            reduce using rule 305 (EXP -> EXP as id .)
    isnull          reduce using rule 305 (EXP -> EXP as id .)
    notnull         reduce using rule 305 (EXP -> EXP as id .)
    cadenaString    reduce using rule 305 (EXP -> EXP as id .)
    id              reduce using rule 305 (EXP -> EXP as id .)
    cadena          reduce using rule 305 (EXP -> EXP as id .)
    in              reduce using rule 305 (EXP -> EXP as id .)
    then            reduce using rule 305 (EXP -> EXP as id .)
    when            reduce using rule 305 (EXP -> EXP as id .)
    parc            reduce using rule 305 (EXP -> EXP as id .)
    constraint      reduce using rule 305 (EXP -> EXP as id .)
    primary         reduce using rule 305 (EXP -> EXP as id .)
    null            reduce using rule 305 (EXP -> EXP as id .)
    unique          reduce using rule 305 (EXP -> EXP as id .)
    references      reduce using rule 305 (EXP -> EXP as id .)
    check           reduce using rule 305 (EXP -> EXP as id .)
    default         reduce using rule 305 (EXP -> EXP as id .)
    asc             reduce using rule 305 (EXP -> EXP as id .)
    desc            reduce using rule 305 (EXP -> EXP as id .)


state 234

    (306) EXP -> EXP as cadenaString .

    r_from          reduce using rule 306 (EXP -> EXP as cadenaString .)
    coma            reduce using rule 306 (EXP -> EXP as cadenaString .)
    where           reduce using rule 306 (EXP -> EXP as cadenaString .)
    group           reduce using rule 306 (EXP -> EXP as cadenaString .)
    having          reduce using rule 306 (EXP -> EXP as cadenaString .)
    union           reduce using rule 306 (EXP -> EXP as cadenaString .)
    intersect       reduce using rule 306 (EXP -> EXP as cadenaString .)
    except          reduce using rule 306 (EXP -> EXP as cadenaString .)
    order           reduce using rule 306 (EXP -> EXP as cadenaString .)
    limit           reduce using rule 306 (EXP -> EXP as cadenaString .)
    offset          reduce using rule 306 (EXP -> EXP as cadenaString .)
    ptcoma          reduce using rule 306 (EXP -> EXP as cadenaString .)
    mas             reduce using rule 306 (EXP -> EXP as cadenaString .)
    menos           reduce using rule 306 (EXP -> EXP as cadenaString .)
    multiplicacion  reduce using rule 306 (EXP -> EXP as cadenaString .)
    division        reduce using rule 306 (EXP -> EXP as cadenaString .)
    modulo          reduce using rule 306 (EXP -> EXP as cadenaString .)
    elevado         reduce using rule 306 (EXP -> EXP as cadenaString .)
    and             reduce using rule 306 (EXP -> EXP as cadenaString .)
    or              reduce using rule 306 (EXP -> EXP as cadenaString .)
    mayor           reduce using rule 306 (EXP -> EXP as cadenaString .)
    menor           reduce using rule 306 (EXP -> EXP as cadenaString .)
    mayor_igual     reduce using rule 306 (EXP -> EXP as cadenaString .)
    menor_igual     reduce using rule 306 (EXP -> EXP as cadenaString .)
    igual           reduce using rule 306 (EXP -> EXP as cadenaString .)
    diferente1      reduce using rule 306 (EXP -> EXP as cadenaString .)
    diferente2      reduce using rule 306 (EXP -> EXP as cadenaString .)
    between         reduce using rule 306 (EXP -> EXP as cadenaString .)
    is              reduce using rule 306 (EXP -> EXP as cadenaString .)
    not             reduce using rule 306 (EXP -> EXP as cadenaString .)
    as              reduce using rule 306 (EXP -> EXP as cadenaString .)
    like            reduce using rule 306 (EXP -> EXP as cadenaString .)
    isnull          reduce using rule 306 (EXP -> EXP as cadenaString .)
    notnull         reduce using rule 306 (EXP -> EXP as cadenaString .)
    cadenaString    reduce using rule 306 (EXP -> EXP as cadenaString .)
    id              reduce using rule 306 (EXP -> EXP as cadenaString .)
    cadena          reduce using rule 306 (EXP -> EXP as cadenaString .)
    in              reduce using rule 306 (EXP -> EXP as cadenaString .)
    then            reduce using rule 306 (EXP -> EXP as cadenaString .)
    when            reduce using rule 306 (EXP -> EXP as cadenaString .)
    parc            reduce using rule 306 (EXP -> EXP as cadenaString .)
    constraint      reduce using rule 306 (EXP -> EXP as cadenaString .)
    primary         reduce using rule 306 (EXP -> EXP as cadenaString .)
    null            reduce using rule 306 (EXP -> EXP as cadenaString .)
    unique          reduce using rule 306 (EXP -> EXP as cadenaString .)
    references      reduce using rule 306 (EXP -> EXP as cadenaString .)
    check           reduce using rule 306 (EXP -> EXP as cadenaString .)
    default         reduce using rule 306 (EXP -> EXP as cadenaString .)
    asc             reduce using rule 306 (EXP -> EXP as cadenaString .)
    desc            reduce using rule 306 (EXP -> EXP as cadenaString .)


state 235

    (319) EXP -> EXP in para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 60
    LEXP                           shift and go to state 348
    SELECT                         shift and go to state 72

state 236

    (332) EXP -> cadena as TIPO .

    r_from          reduce using rule 332 (EXP -> cadena as TIPO .)
    coma            reduce using rule 332 (EXP -> cadena as TIPO .)
    where           reduce using rule 332 (EXP -> cadena as TIPO .)
    group           reduce using rule 332 (EXP -> cadena as TIPO .)
    having          reduce using rule 332 (EXP -> cadena as TIPO .)
    union           reduce using rule 332 (EXP -> cadena as TIPO .)
    intersect       reduce using rule 332 (EXP -> cadena as TIPO .)
    except          reduce using rule 332 (EXP -> cadena as TIPO .)
    order           reduce using rule 332 (EXP -> cadena as TIPO .)
    limit           reduce using rule 332 (EXP -> cadena as TIPO .)
    offset          reduce using rule 332 (EXP -> cadena as TIPO .)
    ptcoma          reduce using rule 332 (EXP -> cadena as TIPO .)
    mas             reduce using rule 332 (EXP -> cadena as TIPO .)
    menos           reduce using rule 332 (EXP -> cadena as TIPO .)
    multiplicacion  reduce using rule 332 (EXP -> cadena as TIPO .)
    division        reduce using rule 332 (EXP -> cadena as TIPO .)
    modulo          reduce using rule 332 (EXP -> cadena as TIPO .)
    elevado         reduce using rule 332 (EXP -> cadena as TIPO .)
    and             reduce using rule 332 (EXP -> cadena as TIPO .)
    or              reduce using rule 332 (EXP -> cadena as TIPO .)
    mayor           reduce using rule 332 (EXP -> cadena as TIPO .)
    menor           reduce using rule 332 (EXP -> cadena as TIPO .)
    mayor_igual     reduce using rule 332 (EXP -> cadena as TIPO .)
    menor_igual     reduce using rule 332 (EXP -> cadena as TIPO .)
    igual           reduce using rule 332 (EXP -> cadena as TIPO .)
    diferente1      reduce using rule 332 (EXP -> cadena as TIPO .)
    diferente2      reduce using rule 332 (EXP -> cadena as TIPO .)
    between         reduce using rule 332 (EXP -> cadena as TIPO .)
    is              reduce using rule 332 (EXP -> cadena as TIPO .)
    not             reduce using rule 332 (EXP -> cadena as TIPO .)
    as              reduce using rule 332 (EXP -> cadena as TIPO .)
    like            reduce using rule 332 (EXP -> cadena as TIPO .)
    isnull          reduce using rule 332 (EXP -> cadena as TIPO .)
    notnull         reduce using rule 332 (EXP -> cadena as TIPO .)
    cadenaString    reduce using rule 332 (EXP -> cadena as TIPO .)
    id              reduce using rule 332 (EXP -> cadena as TIPO .)
    cadena          reduce using rule 332 (EXP -> cadena as TIPO .)
    in              reduce using rule 332 (EXP -> cadena as TIPO .)
    then            reduce using rule 332 (EXP -> cadena as TIPO .)
    when            reduce using rule 332 (EXP -> cadena as TIPO .)
    parc            reduce using rule 332 (EXP -> cadena as TIPO .)
    constraint      reduce using rule 332 (EXP -> cadena as TIPO .)
    primary         reduce using rule 332 (EXP -> cadena as TIPO .)
    null            reduce using rule 332 (EXP -> cadena as TIPO .)
    unique          reduce using rule 332 (EXP -> cadena as TIPO .)
    references      reduce using rule 332 (EXP -> cadena as TIPO .)
    check           reduce using rule 332 (EXP -> cadena as TIPO .)
    default         reduce using rule 332 (EXP -> cadena as TIPO .)
    asc             reduce using rule 332 (EXP -> cadena as TIPO .)
    desc            reduce using rule 332 (EXP -> cadena as TIPO .)


state 237

    (235) TIPO -> decimal . para LEXP parc
    (267) TIPO -> decimal .

    para            shift and go to state 349
    r_from          reduce using rule 267 (TIPO -> decimal .)
    coma            reduce using rule 267 (TIPO -> decimal .)
    where           reduce using rule 267 (TIPO -> decimal .)
    group           reduce using rule 267 (TIPO -> decimal .)
    having          reduce using rule 267 (TIPO -> decimal .)
    union           reduce using rule 267 (TIPO -> decimal .)
    intersect       reduce using rule 267 (TIPO -> decimal .)
    except          reduce using rule 267 (TIPO -> decimal .)
    order           reduce using rule 267 (TIPO -> decimal .)
    limit           reduce using rule 267 (TIPO -> decimal .)
    offset          reduce using rule 267 (TIPO -> decimal .)
    ptcoma          reduce using rule 267 (TIPO -> decimal .)
    mas             reduce using rule 267 (TIPO -> decimal .)
    menos           reduce using rule 267 (TIPO -> decimal .)
    multiplicacion  reduce using rule 267 (TIPO -> decimal .)
    division        reduce using rule 267 (TIPO -> decimal .)
    modulo          reduce using rule 267 (TIPO -> decimal .)
    elevado         reduce using rule 267 (TIPO -> decimal .)
    and             reduce using rule 267 (TIPO -> decimal .)
    or              reduce using rule 267 (TIPO -> decimal .)
    mayor           reduce using rule 267 (TIPO -> decimal .)
    menor           reduce using rule 267 (TIPO -> decimal .)
    mayor_igual     reduce using rule 267 (TIPO -> decimal .)
    menor_igual     reduce using rule 267 (TIPO -> decimal .)
    igual           reduce using rule 267 (TIPO -> decimal .)
    diferente1      reduce using rule 267 (TIPO -> decimal .)
    diferente2      reduce using rule 267 (TIPO -> decimal .)
    between         reduce using rule 267 (TIPO -> decimal .)
    is              reduce using rule 267 (TIPO -> decimal .)
    not             reduce using rule 267 (TIPO -> decimal .)
    as              reduce using rule 267 (TIPO -> decimal .)
    like            reduce using rule 267 (TIPO -> decimal .)
    isnull          reduce using rule 267 (TIPO -> decimal .)
    notnull         reduce using rule 267 (TIPO -> decimal .)
    cadenaString    reduce using rule 267 (TIPO -> decimal .)
    id              reduce using rule 267 (TIPO -> decimal .)
    cadena          reduce using rule 267 (TIPO -> decimal .)
    in              reduce using rule 267 (TIPO -> decimal .)
    then            reduce using rule 267 (TIPO -> decimal .)
    when            reduce using rule 267 (TIPO -> decimal .)
    parc            reduce using rule 267 (TIPO -> decimal .)
    constraint      reduce using rule 267 (TIPO -> decimal .)
    primary         reduce using rule 267 (TIPO -> decimal .)
    null            reduce using rule 267 (TIPO -> decimal .)
    unique          reduce using rule 267 (TIPO -> decimal .)
    references      reduce using rule 267 (TIPO -> decimal .)
    check           reduce using rule 267 (TIPO -> decimal .)
    default         reduce using rule 267 (TIPO -> decimal .)
    asc             reduce using rule 267 (TIPO -> decimal .)
    desc            reduce using rule 267 (TIPO -> decimal .)
    dospuntos       reduce using rule 267 (TIPO -> decimal .)
    language        reduce using rule 267 (TIPO -> decimal .)
    do              reduce using rule 267 (TIPO -> decimal .)


state 238

    (236) TIPO -> numeric . para LEXP parc
    (268) TIPO -> numeric .

    para            shift and go to state 350
    r_from          reduce using rule 268 (TIPO -> numeric .)
    coma            reduce using rule 268 (TIPO -> numeric .)
    where           reduce using rule 268 (TIPO -> numeric .)
    group           reduce using rule 268 (TIPO -> numeric .)
    having          reduce using rule 268 (TIPO -> numeric .)
    union           reduce using rule 268 (TIPO -> numeric .)
    intersect       reduce using rule 268 (TIPO -> numeric .)
    except          reduce using rule 268 (TIPO -> numeric .)
    order           reduce using rule 268 (TIPO -> numeric .)
    limit           reduce using rule 268 (TIPO -> numeric .)
    offset          reduce using rule 268 (TIPO -> numeric .)
    ptcoma          reduce using rule 268 (TIPO -> numeric .)
    mas             reduce using rule 268 (TIPO -> numeric .)
    menos           reduce using rule 268 (TIPO -> numeric .)
    multiplicacion  reduce using rule 268 (TIPO -> numeric .)
    division        reduce using rule 268 (TIPO -> numeric .)
    modulo          reduce using rule 268 (TIPO -> numeric .)
    elevado         reduce using rule 268 (TIPO -> numeric .)
    and             reduce using rule 268 (TIPO -> numeric .)
    or              reduce using rule 268 (TIPO -> numeric .)
    mayor           reduce using rule 268 (TIPO -> numeric .)
    menor           reduce using rule 268 (TIPO -> numeric .)
    mayor_igual     reduce using rule 268 (TIPO -> numeric .)
    menor_igual     reduce using rule 268 (TIPO -> numeric .)
    igual           reduce using rule 268 (TIPO -> numeric .)
    diferente1      reduce using rule 268 (TIPO -> numeric .)
    diferente2      reduce using rule 268 (TIPO -> numeric .)
    between         reduce using rule 268 (TIPO -> numeric .)
    is              reduce using rule 268 (TIPO -> numeric .)
    not             reduce using rule 268 (TIPO -> numeric .)
    as              reduce using rule 268 (TIPO -> numeric .)
    like            reduce using rule 268 (TIPO -> numeric .)
    isnull          reduce using rule 268 (TIPO -> numeric .)
    notnull         reduce using rule 268 (TIPO -> numeric .)
    cadenaString    reduce using rule 268 (TIPO -> numeric .)
    id              reduce using rule 268 (TIPO -> numeric .)
    cadena          reduce using rule 268 (TIPO -> numeric .)
    in              reduce using rule 268 (TIPO -> numeric .)
    then            reduce using rule 268 (TIPO -> numeric .)
    when            reduce using rule 268 (TIPO -> numeric .)
    parc            reduce using rule 268 (TIPO -> numeric .)
    constraint      reduce using rule 268 (TIPO -> numeric .)
    primary         reduce using rule 268 (TIPO -> numeric .)
    null            reduce using rule 268 (TIPO -> numeric .)
    unique          reduce using rule 268 (TIPO -> numeric .)
    references      reduce using rule 268 (TIPO -> numeric .)
    check           reduce using rule 268 (TIPO -> numeric .)
    default         reduce using rule 268 (TIPO -> numeric .)
    asc             reduce using rule 268 (TIPO -> numeric .)
    desc            reduce using rule 268 (TIPO -> numeric .)
    dospuntos       reduce using rule 268 (TIPO -> numeric .)
    language        reduce using rule 268 (TIPO -> numeric .)
    do              reduce using rule 268 (TIPO -> numeric .)


state 239

    (237) TIPO -> varchar . para int parc
    (266) TIPO -> varchar .

    para            shift and go to state 351
    r_from          reduce using rule 266 (TIPO -> varchar .)
    coma            reduce using rule 266 (TIPO -> varchar .)
    where           reduce using rule 266 (TIPO -> varchar .)
    group           reduce using rule 266 (TIPO -> varchar .)
    having          reduce using rule 266 (TIPO -> varchar .)
    union           reduce using rule 266 (TIPO -> varchar .)
    intersect       reduce using rule 266 (TIPO -> varchar .)
    except          reduce using rule 266 (TIPO -> varchar .)
    order           reduce using rule 266 (TIPO -> varchar .)
    limit           reduce using rule 266 (TIPO -> varchar .)
    offset          reduce using rule 266 (TIPO -> varchar .)
    ptcoma          reduce using rule 266 (TIPO -> varchar .)
    mas             reduce using rule 266 (TIPO -> varchar .)
    menos           reduce using rule 266 (TIPO -> varchar .)
    multiplicacion  reduce using rule 266 (TIPO -> varchar .)
    division        reduce using rule 266 (TIPO -> varchar .)
    modulo          reduce using rule 266 (TIPO -> varchar .)
    elevado         reduce using rule 266 (TIPO -> varchar .)
    and             reduce using rule 266 (TIPO -> varchar .)
    or              reduce using rule 266 (TIPO -> varchar .)
    mayor           reduce using rule 266 (TIPO -> varchar .)
    menor           reduce using rule 266 (TIPO -> varchar .)
    mayor_igual     reduce using rule 266 (TIPO -> varchar .)
    menor_igual     reduce using rule 266 (TIPO -> varchar .)
    igual           reduce using rule 266 (TIPO -> varchar .)
    diferente1      reduce using rule 266 (TIPO -> varchar .)
    diferente2      reduce using rule 266 (TIPO -> varchar .)
    between         reduce using rule 266 (TIPO -> varchar .)
    is              reduce using rule 266 (TIPO -> varchar .)
    not             reduce using rule 266 (TIPO -> varchar .)
    as              reduce using rule 266 (TIPO -> varchar .)
    like            reduce using rule 266 (TIPO -> varchar .)
    isnull          reduce using rule 266 (TIPO -> varchar .)
    notnull         reduce using rule 266 (TIPO -> varchar .)
    cadenaString    reduce using rule 266 (TIPO -> varchar .)
    id              reduce using rule 266 (TIPO -> varchar .)
    cadena          reduce using rule 266 (TIPO -> varchar .)
    in              reduce using rule 266 (TIPO -> varchar .)
    then            reduce using rule 266 (TIPO -> varchar .)
    when            reduce using rule 266 (TIPO -> varchar .)
    parc            reduce using rule 266 (TIPO -> varchar .)
    constraint      reduce using rule 266 (TIPO -> varchar .)
    primary         reduce using rule 266 (TIPO -> varchar .)
    null            reduce using rule 266 (TIPO -> varchar .)
    unique          reduce using rule 266 (TIPO -> varchar .)
    references      reduce using rule 266 (TIPO -> varchar .)
    check           reduce using rule 266 (TIPO -> varchar .)
    default         reduce using rule 266 (TIPO -> varchar .)
    asc             reduce using rule 266 (TIPO -> varchar .)
    desc            reduce using rule 266 (TIPO -> varchar .)
    dospuntos       reduce using rule 266 (TIPO -> varchar .)
    language        reduce using rule 266 (TIPO -> varchar .)
    do              reduce using rule 266 (TIPO -> varchar .)


state 240

    (238) TIPO -> timestamp . para int parc
    (247) TIPO -> timestamp . para int parc without time zone
    (248) TIPO -> timestamp . para int parc with time zone
    (260) TIPO -> timestamp .
    (270) TIPO -> timestamp . without time zone
    (271) TIPO -> timestamp . with time zone

    para            shift and go to state 352
    r_from          reduce using rule 260 (TIPO -> timestamp .)
    coma            reduce using rule 260 (TIPO -> timestamp .)
    where           reduce using rule 260 (TIPO -> timestamp .)
    group           reduce using rule 260 (TIPO -> timestamp .)
    having          reduce using rule 260 (TIPO -> timestamp .)
    union           reduce using rule 260 (TIPO -> timestamp .)
    intersect       reduce using rule 260 (TIPO -> timestamp .)
    except          reduce using rule 260 (TIPO -> timestamp .)
    order           reduce using rule 260 (TIPO -> timestamp .)
    limit           reduce using rule 260 (TIPO -> timestamp .)
    offset          reduce using rule 260 (TIPO -> timestamp .)
    ptcoma          reduce using rule 260 (TIPO -> timestamp .)
    mas             reduce using rule 260 (TIPO -> timestamp .)
    menos           reduce using rule 260 (TIPO -> timestamp .)
    multiplicacion  reduce using rule 260 (TIPO -> timestamp .)
    division        reduce using rule 260 (TIPO -> timestamp .)
    modulo          reduce using rule 260 (TIPO -> timestamp .)
    elevado         reduce using rule 260 (TIPO -> timestamp .)
    and             reduce using rule 260 (TIPO -> timestamp .)
    or              reduce using rule 260 (TIPO -> timestamp .)
    mayor           reduce using rule 260 (TIPO -> timestamp .)
    menor           reduce using rule 260 (TIPO -> timestamp .)
    mayor_igual     reduce using rule 260 (TIPO -> timestamp .)
    menor_igual     reduce using rule 260 (TIPO -> timestamp .)
    igual           reduce using rule 260 (TIPO -> timestamp .)
    diferente1      reduce using rule 260 (TIPO -> timestamp .)
    diferente2      reduce using rule 260 (TIPO -> timestamp .)
    between         reduce using rule 260 (TIPO -> timestamp .)
    is              reduce using rule 260 (TIPO -> timestamp .)
    not             reduce using rule 260 (TIPO -> timestamp .)
    as              reduce using rule 260 (TIPO -> timestamp .)
    like            reduce using rule 260 (TIPO -> timestamp .)
    isnull          reduce using rule 260 (TIPO -> timestamp .)
    notnull         reduce using rule 260 (TIPO -> timestamp .)
    cadenaString    reduce using rule 260 (TIPO -> timestamp .)
    id              reduce using rule 260 (TIPO -> timestamp .)
    cadena          reduce using rule 260 (TIPO -> timestamp .)
    in              reduce using rule 260 (TIPO -> timestamp .)
    then            reduce using rule 260 (TIPO -> timestamp .)
    when            reduce using rule 260 (TIPO -> timestamp .)
    parc            reduce using rule 260 (TIPO -> timestamp .)
    constraint      reduce using rule 260 (TIPO -> timestamp .)
    primary         reduce using rule 260 (TIPO -> timestamp .)
    null            reduce using rule 260 (TIPO -> timestamp .)
    unique          reduce using rule 260 (TIPO -> timestamp .)
    references      reduce using rule 260 (TIPO -> timestamp .)
    check           reduce using rule 260 (TIPO -> timestamp .)
    default         reduce using rule 260 (TIPO -> timestamp .)
    asc             reduce using rule 260 (TIPO -> timestamp .)
    desc            reduce using rule 260 (TIPO -> timestamp .)
    dospuntos       reduce using rule 260 (TIPO -> timestamp .)
    language        reduce using rule 260 (TIPO -> timestamp .)
    do              reduce using rule 260 (TIPO -> timestamp .)
    without         shift and go to state 353
    with            shift and go to state 354


state 241

    (239) TIPO -> character . para int parc
    (243) TIPO -> character . varying para int parc

    para            shift and go to state 355
    varying         shift and go to state 356


state 242

    (240) TIPO -> interval . para int parc
    (244) TIPO -> interval . cadena
    (251) TIPO -> interval . para int parc cadena
    (263) TIPO -> interval .

  ! shift/reduce conflict for cadena resolved as shift
    para            shift and go to state 357
    cadena          shift and go to state 358
    r_from          reduce using rule 263 (TIPO -> interval .)
    coma            reduce using rule 263 (TIPO -> interval .)
    where           reduce using rule 263 (TIPO -> interval .)
    group           reduce using rule 263 (TIPO -> interval .)
    having          reduce using rule 263 (TIPO -> interval .)
    union           reduce using rule 263 (TIPO -> interval .)
    intersect       reduce using rule 263 (TIPO -> interval .)
    except          reduce using rule 263 (TIPO -> interval .)
    order           reduce using rule 263 (TIPO -> interval .)
    limit           reduce using rule 263 (TIPO -> interval .)
    offset          reduce using rule 263 (TIPO -> interval .)
    ptcoma          reduce using rule 263 (TIPO -> interval .)
    mas             reduce using rule 263 (TIPO -> interval .)
    menos           reduce using rule 263 (TIPO -> interval .)
    multiplicacion  reduce using rule 263 (TIPO -> interval .)
    division        reduce using rule 263 (TIPO -> interval .)
    modulo          reduce using rule 263 (TIPO -> interval .)
    elevado         reduce using rule 263 (TIPO -> interval .)
    and             reduce using rule 263 (TIPO -> interval .)
    or              reduce using rule 263 (TIPO -> interval .)
    mayor           reduce using rule 263 (TIPO -> interval .)
    menor           reduce using rule 263 (TIPO -> interval .)
    mayor_igual     reduce using rule 263 (TIPO -> interval .)
    menor_igual     reduce using rule 263 (TIPO -> interval .)
    igual           reduce using rule 263 (TIPO -> interval .)
    diferente1      reduce using rule 263 (TIPO -> interval .)
    diferente2      reduce using rule 263 (TIPO -> interval .)
    between         reduce using rule 263 (TIPO -> interval .)
    is              reduce using rule 263 (TIPO -> interval .)
    not             reduce using rule 263 (TIPO -> interval .)
    as              reduce using rule 263 (TIPO -> interval .)
    like            reduce using rule 263 (TIPO -> interval .)
    isnull          reduce using rule 263 (TIPO -> interval .)
    notnull         reduce using rule 263 (TIPO -> interval .)
    cadenaString    reduce using rule 263 (TIPO -> interval .)
    id              reduce using rule 263 (TIPO -> interval .)
    in              reduce using rule 263 (TIPO -> interval .)
    then            reduce using rule 263 (TIPO -> interval .)
    when            reduce using rule 263 (TIPO -> interval .)
    parc            reduce using rule 263 (TIPO -> interval .)
    constraint      reduce using rule 263 (TIPO -> interval .)
    primary         reduce using rule 263 (TIPO -> interval .)
    null            reduce using rule 263 (TIPO -> interval .)
    unique          reduce using rule 263 (TIPO -> interval .)
    references      reduce using rule 263 (TIPO -> interval .)
    check           reduce using rule 263 (TIPO -> interval .)
    default         reduce using rule 263 (TIPO -> interval .)
    asc             reduce using rule 263 (TIPO -> interval .)
    desc            reduce using rule 263 (TIPO -> interval .)
    dospuntos       reduce using rule 263 (TIPO -> interval .)
    language        reduce using rule 263 (TIPO -> interval .)
    do              reduce using rule 263 (TIPO -> interval .)

  ! cadena          [ reduce using rule 263 (TIPO -> interval .) ]


state 243

    (241) TIPO -> char . para int parc

    para            shift and go to state 359


state 244

    (242) TIPO -> time . para int parc
    (249) TIPO -> time . para int parc without time zone
    (250) TIPO -> time . para int parc with time zone
    (262) TIPO -> time .
    (272) TIPO -> time . without time zone
    (273) TIPO -> time . with time zone

    para            shift and go to state 360
    r_from          reduce using rule 262 (TIPO -> time .)
    coma            reduce using rule 262 (TIPO -> time .)
    where           reduce using rule 262 (TIPO -> time .)
    group           reduce using rule 262 (TIPO -> time .)
    having          reduce using rule 262 (TIPO -> time .)
    union           reduce using rule 262 (TIPO -> time .)
    intersect       reduce using rule 262 (TIPO -> time .)
    except          reduce using rule 262 (TIPO -> time .)
    order           reduce using rule 262 (TIPO -> time .)
    limit           reduce using rule 262 (TIPO -> time .)
    offset          reduce using rule 262 (TIPO -> time .)
    ptcoma          reduce using rule 262 (TIPO -> time .)
    mas             reduce using rule 262 (TIPO -> time .)
    menos           reduce using rule 262 (TIPO -> time .)
    multiplicacion  reduce using rule 262 (TIPO -> time .)
    division        reduce using rule 262 (TIPO -> time .)
    modulo          reduce using rule 262 (TIPO -> time .)
    elevado         reduce using rule 262 (TIPO -> time .)
    and             reduce using rule 262 (TIPO -> time .)
    or              reduce using rule 262 (TIPO -> time .)
    mayor           reduce using rule 262 (TIPO -> time .)
    menor           reduce using rule 262 (TIPO -> time .)
    mayor_igual     reduce using rule 262 (TIPO -> time .)
    menor_igual     reduce using rule 262 (TIPO -> time .)
    igual           reduce using rule 262 (TIPO -> time .)
    diferente1      reduce using rule 262 (TIPO -> time .)
    diferente2      reduce using rule 262 (TIPO -> time .)
    between         reduce using rule 262 (TIPO -> time .)
    is              reduce using rule 262 (TIPO -> time .)
    not             reduce using rule 262 (TIPO -> time .)
    as              reduce using rule 262 (TIPO -> time .)
    like            reduce using rule 262 (TIPO -> time .)
    isnull          reduce using rule 262 (TIPO -> time .)
    notnull         reduce using rule 262 (TIPO -> time .)
    cadenaString    reduce using rule 262 (TIPO -> time .)
    id              reduce using rule 262 (TIPO -> time .)
    cadena          reduce using rule 262 (TIPO -> time .)
    in              reduce using rule 262 (TIPO -> time .)
    then            reduce using rule 262 (TIPO -> time .)
    when            reduce using rule 262 (TIPO -> time .)
    parc            reduce using rule 262 (TIPO -> time .)
    constraint      reduce using rule 262 (TIPO -> time .)
    primary         reduce using rule 262 (TIPO -> time .)
    null            reduce using rule 262 (TIPO -> time .)
    unique          reduce using rule 262 (TIPO -> time .)
    references      reduce using rule 262 (TIPO -> time .)
    check           reduce using rule 262 (TIPO -> time .)
    default         reduce using rule 262 (TIPO -> time .)
    asc             reduce using rule 262 (TIPO -> time .)
    desc            reduce using rule 262 (TIPO -> time .)
    dospuntos       reduce using rule 262 (TIPO -> time .)
    language        reduce using rule 262 (TIPO -> time .)
    do              reduce using rule 262 (TIPO -> time .)
    without         shift and go to state 361
    with            shift and go to state 362


state 245

    (245) TIPO -> id . modulo rowtype
    (269) TIPO -> id .

  ! shift/reduce conflict for modulo resolved as shift
    modulo          shift and go to state 363
    r_from          reduce using rule 269 (TIPO -> id .)
    coma            reduce using rule 269 (TIPO -> id .)
    where           reduce using rule 269 (TIPO -> id .)
    group           reduce using rule 269 (TIPO -> id .)
    having          reduce using rule 269 (TIPO -> id .)
    union           reduce using rule 269 (TIPO -> id .)
    intersect       reduce using rule 269 (TIPO -> id .)
    except          reduce using rule 269 (TIPO -> id .)
    order           reduce using rule 269 (TIPO -> id .)
    limit           reduce using rule 269 (TIPO -> id .)
    offset          reduce using rule 269 (TIPO -> id .)
    ptcoma          reduce using rule 269 (TIPO -> id .)
    mas             reduce using rule 269 (TIPO -> id .)
    menos           reduce using rule 269 (TIPO -> id .)
    multiplicacion  reduce using rule 269 (TIPO -> id .)
    division        reduce using rule 269 (TIPO -> id .)
    elevado         reduce using rule 269 (TIPO -> id .)
    and             reduce using rule 269 (TIPO -> id .)
    or              reduce using rule 269 (TIPO -> id .)
    mayor           reduce using rule 269 (TIPO -> id .)
    menor           reduce using rule 269 (TIPO -> id .)
    mayor_igual     reduce using rule 269 (TIPO -> id .)
    menor_igual     reduce using rule 269 (TIPO -> id .)
    igual           reduce using rule 269 (TIPO -> id .)
    diferente1      reduce using rule 269 (TIPO -> id .)
    diferente2      reduce using rule 269 (TIPO -> id .)
    between         reduce using rule 269 (TIPO -> id .)
    is              reduce using rule 269 (TIPO -> id .)
    not             reduce using rule 269 (TIPO -> id .)
    as              reduce using rule 269 (TIPO -> id .)
    like            reduce using rule 269 (TIPO -> id .)
    isnull          reduce using rule 269 (TIPO -> id .)
    notnull         reduce using rule 269 (TIPO -> id .)
    cadenaString    reduce using rule 269 (TIPO -> id .)
    id              reduce using rule 269 (TIPO -> id .)
    cadena          reduce using rule 269 (TIPO -> id .)
    in              reduce using rule 269 (TIPO -> id .)
    then            reduce using rule 269 (TIPO -> id .)
    when            reduce using rule 269 (TIPO -> id .)
    parc            reduce using rule 269 (TIPO -> id .)
    constraint      reduce using rule 269 (TIPO -> id .)
    primary         reduce using rule 269 (TIPO -> id .)
    null            reduce using rule 269 (TIPO -> id .)
    unique          reduce using rule 269 (TIPO -> id .)
    references      reduce using rule 269 (TIPO -> id .)
    check           reduce using rule 269 (TIPO -> id .)
    default         reduce using rule 269 (TIPO -> id .)
    asc             reduce using rule 269 (TIPO -> id .)
    desc            reduce using rule 269 (TIPO -> id .)
    dospuntos       reduce using rule 269 (TIPO -> id .)
    language        reduce using rule 269 (TIPO -> id .)
    do              reduce using rule 269 (TIPO -> id .)

  ! modulo          [ reduce using rule 269 (TIPO -> id .) ]


state 246

    (246) TIPO -> idPunto . modulo type

    modulo          shift and go to state 364


state 247

    (252) TIPO -> smallint .

    r_from          reduce using rule 252 (TIPO -> smallint .)
    coma            reduce using rule 252 (TIPO -> smallint .)
    where           reduce using rule 252 (TIPO -> smallint .)
    group           reduce using rule 252 (TIPO -> smallint .)
    having          reduce using rule 252 (TIPO -> smallint .)
    union           reduce using rule 252 (TIPO -> smallint .)
    intersect       reduce using rule 252 (TIPO -> smallint .)
    except          reduce using rule 252 (TIPO -> smallint .)
    order           reduce using rule 252 (TIPO -> smallint .)
    limit           reduce using rule 252 (TIPO -> smallint .)
    offset          reduce using rule 252 (TIPO -> smallint .)
    ptcoma          reduce using rule 252 (TIPO -> smallint .)
    mas             reduce using rule 252 (TIPO -> smallint .)
    menos           reduce using rule 252 (TIPO -> smallint .)
    multiplicacion  reduce using rule 252 (TIPO -> smallint .)
    division        reduce using rule 252 (TIPO -> smallint .)
    modulo          reduce using rule 252 (TIPO -> smallint .)
    elevado         reduce using rule 252 (TIPO -> smallint .)
    and             reduce using rule 252 (TIPO -> smallint .)
    or              reduce using rule 252 (TIPO -> smallint .)
    mayor           reduce using rule 252 (TIPO -> smallint .)
    menor           reduce using rule 252 (TIPO -> smallint .)
    mayor_igual     reduce using rule 252 (TIPO -> smallint .)
    menor_igual     reduce using rule 252 (TIPO -> smallint .)
    igual           reduce using rule 252 (TIPO -> smallint .)
    diferente1      reduce using rule 252 (TIPO -> smallint .)
    diferente2      reduce using rule 252 (TIPO -> smallint .)
    between         reduce using rule 252 (TIPO -> smallint .)
    is              reduce using rule 252 (TIPO -> smallint .)
    not             reduce using rule 252 (TIPO -> smallint .)
    as              reduce using rule 252 (TIPO -> smallint .)
    like            reduce using rule 252 (TIPO -> smallint .)
    isnull          reduce using rule 252 (TIPO -> smallint .)
    notnull         reduce using rule 252 (TIPO -> smallint .)
    cadenaString    reduce using rule 252 (TIPO -> smallint .)
    id              reduce using rule 252 (TIPO -> smallint .)
    cadena          reduce using rule 252 (TIPO -> smallint .)
    in              reduce using rule 252 (TIPO -> smallint .)
    then            reduce using rule 252 (TIPO -> smallint .)
    when            reduce using rule 252 (TIPO -> smallint .)
    parc            reduce using rule 252 (TIPO -> smallint .)
    constraint      reduce using rule 252 (TIPO -> smallint .)
    primary         reduce using rule 252 (TIPO -> smallint .)
    null            reduce using rule 252 (TIPO -> smallint .)
    unique          reduce using rule 252 (TIPO -> smallint .)
    references      reduce using rule 252 (TIPO -> smallint .)
    check           reduce using rule 252 (TIPO -> smallint .)
    default         reduce using rule 252 (TIPO -> smallint .)
    asc             reduce using rule 252 (TIPO -> smallint .)
    desc            reduce using rule 252 (TIPO -> smallint .)
    dospuntos       reduce using rule 252 (TIPO -> smallint .)
    language        reduce using rule 252 (TIPO -> smallint .)
    do              reduce using rule 252 (TIPO -> smallint .)


state 248

    (253) TIPO -> integer .

    r_from          reduce using rule 253 (TIPO -> integer .)
    coma            reduce using rule 253 (TIPO -> integer .)
    where           reduce using rule 253 (TIPO -> integer .)
    group           reduce using rule 253 (TIPO -> integer .)
    having          reduce using rule 253 (TIPO -> integer .)
    union           reduce using rule 253 (TIPO -> integer .)
    intersect       reduce using rule 253 (TIPO -> integer .)
    except          reduce using rule 253 (TIPO -> integer .)
    order           reduce using rule 253 (TIPO -> integer .)
    limit           reduce using rule 253 (TIPO -> integer .)
    offset          reduce using rule 253 (TIPO -> integer .)
    ptcoma          reduce using rule 253 (TIPO -> integer .)
    mas             reduce using rule 253 (TIPO -> integer .)
    menos           reduce using rule 253 (TIPO -> integer .)
    multiplicacion  reduce using rule 253 (TIPO -> integer .)
    division        reduce using rule 253 (TIPO -> integer .)
    modulo          reduce using rule 253 (TIPO -> integer .)
    elevado         reduce using rule 253 (TIPO -> integer .)
    and             reduce using rule 253 (TIPO -> integer .)
    or              reduce using rule 253 (TIPO -> integer .)
    mayor           reduce using rule 253 (TIPO -> integer .)
    menor           reduce using rule 253 (TIPO -> integer .)
    mayor_igual     reduce using rule 253 (TIPO -> integer .)
    menor_igual     reduce using rule 253 (TIPO -> integer .)
    igual           reduce using rule 253 (TIPO -> integer .)
    diferente1      reduce using rule 253 (TIPO -> integer .)
    diferente2      reduce using rule 253 (TIPO -> integer .)
    between         reduce using rule 253 (TIPO -> integer .)
    is              reduce using rule 253 (TIPO -> integer .)
    not             reduce using rule 253 (TIPO -> integer .)
    as              reduce using rule 253 (TIPO -> integer .)
    like            reduce using rule 253 (TIPO -> integer .)
    isnull          reduce using rule 253 (TIPO -> integer .)
    notnull         reduce using rule 253 (TIPO -> integer .)
    cadenaString    reduce using rule 253 (TIPO -> integer .)
    id              reduce using rule 253 (TIPO -> integer .)
    cadena          reduce using rule 253 (TIPO -> integer .)
    in              reduce using rule 253 (TIPO -> integer .)
    then            reduce using rule 253 (TIPO -> integer .)
    when            reduce using rule 253 (TIPO -> integer .)
    parc            reduce using rule 253 (TIPO -> integer .)
    constraint      reduce using rule 253 (TIPO -> integer .)
    primary         reduce using rule 253 (TIPO -> integer .)
    null            reduce using rule 253 (TIPO -> integer .)
    unique          reduce using rule 253 (TIPO -> integer .)
    references      reduce using rule 253 (TIPO -> integer .)
    check           reduce using rule 253 (TIPO -> integer .)
    default         reduce using rule 253 (TIPO -> integer .)
    asc             reduce using rule 253 (TIPO -> integer .)
    desc            reduce using rule 253 (TIPO -> integer .)
    dospuntos       reduce using rule 253 (TIPO -> integer .)
    language        reduce using rule 253 (TIPO -> integer .)
    do              reduce using rule 253 (TIPO -> integer .)


state 249

    (254) TIPO -> r_int .

    r_from          reduce using rule 254 (TIPO -> r_int .)
    coma            reduce using rule 254 (TIPO -> r_int .)
    where           reduce using rule 254 (TIPO -> r_int .)
    group           reduce using rule 254 (TIPO -> r_int .)
    having          reduce using rule 254 (TIPO -> r_int .)
    union           reduce using rule 254 (TIPO -> r_int .)
    intersect       reduce using rule 254 (TIPO -> r_int .)
    except          reduce using rule 254 (TIPO -> r_int .)
    order           reduce using rule 254 (TIPO -> r_int .)
    limit           reduce using rule 254 (TIPO -> r_int .)
    offset          reduce using rule 254 (TIPO -> r_int .)
    ptcoma          reduce using rule 254 (TIPO -> r_int .)
    mas             reduce using rule 254 (TIPO -> r_int .)
    menos           reduce using rule 254 (TIPO -> r_int .)
    multiplicacion  reduce using rule 254 (TIPO -> r_int .)
    division        reduce using rule 254 (TIPO -> r_int .)
    modulo          reduce using rule 254 (TIPO -> r_int .)
    elevado         reduce using rule 254 (TIPO -> r_int .)
    and             reduce using rule 254 (TIPO -> r_int .)
    or              reduce using rule 254 (TIPO -> r_int .)
    mayor           reduce using rule 254 (TIPO -> r_int .)
    menor           reduce using rule 254 (TIPO -> r_int .)
    mayor_igual     reduce using rule 254 (TIPO -> r_int .)
    menor_igual     reduce using rule 254 (TIPO -> r_int .)
    igual           reduce using rule 254 (TIPO -> r_int .)
    diferente1      reduce using rule 254 (TIPO -> r_int .)
    diferente2      reduce using rule 254 (TIPO -> r_int .)
    between         reduce using rule 254 (TIPO -> r_int .)
    is              reduce using rule 254 (TIPO -> r_int .)
    not             reduce using rule 254 (TIPO -> r_int .)
    as              reduce using rule 254 (TIPO -> r_int .)
    like            reduce using rule 254 (TIPO -> r_int .)
    isnull          reduce using rule 254 (TIPO -> r_int .)
    notnull         reduce using rule 254 (TIPO -> r_int .)
    cadenaString    reduce using rule 254 (TIPO -> r_int .)
    id              reduce using rule 254 (TIPO -> r_int .)
    cadena          reduce using rule 254 (TIPO -> r_int .)
    in              reduce using rule 254 (TIPO -> r_int .)
    then            reduce using rule 254 (TIPO -> r_int .)
    when            reduce using rule 254 (TIPO -> r_int .)
    parc            reduce using rule 254 (TIPO -> r_int .)
    constraint      reduce using rule 254 (TIPO -> r_int .)
    primary         reduce using rule 254 (TIPO -> r_int .)
    null            reduce using rule 254 (TIPO -> r_int .)
    unique          reduce using rule 254 (TIPO -> r_int .)
    references      reduce using rule 254 (TIPO -> r_int .)
    check           reduce using rule 254 (TIPO -> r_int .)
    default         reduce using rule 254 (TIPO -> r_int .)
    asc             reduce using rule 254 (TIPO -> r_int .)
    desc            reduce using rule 254 (TIPO -> r_int .)
    dospuntos       reduce using rule 254 (TIPO -> r_int .)
    language        reduce using rule 254 (TIPO -> r_int .)
    do              reduce using rule 254 (TIPO -> r_int .)


state 250

    (255) TIPO -> bigint .

    r_from          reduce using rule 255 (TIPO -> bigint .)
    coma            reduce using rule 255 (TIPO -> bigint .)
    where           reduce using rule 255 (TIPO -> bigint .)
    group           reduce using rule 255 (TIPO -> bigint .)
    having          reduce using rule 255 (TIPO -> bigint .)
    union           reduce using rule 255 (TIPO -> bigint .)
    intersect       reduce using rule 255 (TIPO -> bigint .)
    except          reduce using rule 255 (TIPO -> bigint .)
    order           reduce using rule 255 (TIPO -> bigint .)
    limit           reduce using rule 255 (TIPO -> bigint .)
    offset          reduce using rule 255 (TIPO -> bigint .)
    ptcoma          reduce using rule 255 (TIPO -> bigint .)
    mas             reduce using rule 255 (TIPO -> bigint .)
    menos           reduce using rule 255 (TIPO -> bigint .)
    multiplicacion  reduce using rule 255 (TIPO -> bigint .)
    division        reduce using rule 255 (TIPO -> bigint .)
    modulo          reduce using rule 255 (TIPO -> bigint .)
    elevado         reduce using rule 255 (TIPO -> bigint .)
    and             reduce using rule 255 (TIPO -> bigint .)
    or              reduce using rule 255 (TIPO -> bigint .)
    mayor           reduce using rule 255 (TIPO -> bigint .)
    menor           reduce using rule 255 (TIPO -> bigint .)
    mayor_igual     reduce using rule 255 (TIPO -> bigint .)
    menor_igual     reduce using rule 255 (TIPO -> bigint .)
    igual           reduce using rule 255 (TIPO -> bigint .)
    diferente1      reduce using rule 255 (TIPO -> bigint .)
    diferente2      reduce using rule 255 (TIPO -> bigint .)
    between         reduce using rule 255 (TIPO -> bigint .)
    is              reduce using rule 255 (TIPO -> bigint .)
    not             reduce using rule 255 (TIPO -> bigint .)
    as              reduce using rule 255 (TIPO -> bigint .)
    like            reduce using rule 255 (TIPO -> bigint .)
    isnull          reduce using rule 255 (TIPO -> bigint .)
    notnull         reduce using rule 255 (TIPO -> bigint .)
    cadenaString    reduce using rule 255 (TIPO -> bigint .)
    id              reduce using rule 255 (TIPO -> bigint .)
    cadena          reduce using rule 255 (TIPO -> bigint .)
    in              reduce using rule 255 (TIPO -> bigint .)
    then            reduce using rule 255 (TIPO -> bigint .)
    when            reduce using rule 255 (TIPO -> bigint .)
    parc            reduce using rule 255 (TIPO -> bigint .)
    constraint      reduce using rule 255 (TIPO -> bigint .)
    primary         reduce using rule 255 (TIPO -> bigint .)
    null            reduce using rule 255 (TIPO -> bigint .)
    unique          reduce using rule 255 (TIPO -> bigint .)
    references      reduce using rule 255 (TIPO -> bigint .)
    check           reduce using rule 255 (TIPO -> bigint .)
    default         reduce using rule 255 (TIPO -> bigint .)
    asc             reduce using rule 255 (TIPO -> bigint .)
    desc            reduce using rule 255 (TIPO -> bigint .)
    dospuntos       reduce using rule 255 (TIPO -> bigint .)
    language        reduce using rule 255 (TIPO -> bigint .)
    do              reduce using rule 255 (TIPO -> bigint .)


state 251

    (256) TIPO -> real .

    r_from          reduce using rule 256 (TIPO -> real .)
    coma            reduce using rule 256 (TIPO -> real .)
    where           reduce using rule 256 (TIPO -> real .)
    group           reduce using rule 256 (TIPO -> real .)
    having          reduce using rule 256 (TIPO -> real .)
    union           reduce using rule 256 (TIPO -> real .)
    intersect       reduce using rule 256 (TIPO -> real .)
    except          reduce using rule 256 (TIPO -> real .)
    order           reduce using rule 256 (TIPO -> real .)
    limit           reduce using rule 256 (TIPO -> real .)
    offset          reduce using rule 256 (TIPO -> real .)
    ptcoma          reduce using rule 256 (TIPO -> real .)
    mas             reduce using rule 256 (TIPO -> real .)
    menos           reduce using rule 256 (TIPO -> real .)
    multiplicacion  reduce using rule 256 (TIPO -> real .)
    division        reduce using rule 256 (TIPO -> real .)
    modulo          reduce using rule 256 (TIPO -> real .)
    elevado         reduce using rule 256 (TIPO -> real .)
    and             reduce using rule 256 (TIPO -> real .)
    or              reduce using rule 256 (TIPO -> real .)
    mayor           reduce using rule 256 (TIPO -> real .)
    menor           reduce using rule 256 (TIPO -> real .)
    mayor_igual     reduce using rule 256 (TIPO -> real .)
    menor_igual     reduce using rule 256 (TIPO -> real .)
    igual           reduce using rule 256 (TIPO -> real .)
    diferente1      reduce using rule 256 (TIPO -> real .)
    diferente2      reduce using rule 256 (TIPO -> real .)
    between         reduce using rule 256 (TIPO -> real .)
    is              reduce using rule 256 (TIPO -> real .)
    not             reduce using rule 256 (TIPO -> real .)
    as              reduce using rule 256 (TIPO -> real .)
    like            reduce using rule 256 (TIPO -> real .)
    isnull          reduce using rule 256 (TIPO -> real .)
    notnull         reduce using rule 256 (TIPO -> real .)
    cadenaString    reduce using rule 256 (TIPO -> real .)
    id              reduce using rule 256 (TIPO -> real .)
    cadena          reduce using rule 256 (TIPO -> real .)
    in              reduce using rule 256 (TIPO -> real .)
    then            reduce using rule 256 (TIPO -> real .)
    when            reduce using rule 256 (TIPO -> real .)
    parc            reduce using rule 256 (TIPO -> real .)
    constraint      reduce using rule 256 (TIPO -> real .)
    primary         reduce using rule 256 (TIPO -> real .)
    null            reduce using rule 256 (TIPO -> real .)
    unique          reduce using rule 256 (TIPO -> real .)
    references      reduce using rule 256 (TIPO -> real .)
    check           reduce using rule 256 (TIPO -> real .)
    default         reduce using rule 256 (TIPO -> real .)
    asc             reduce using rule 256 (TIPO -> real .)
    desc            reduce using rule 256 (TIPO -> real .)
    dospuntos       reduce using rule 256 (TIPO -> real .)
    language        reduce using rule 256 (TIPO -> real .)
    do              reduce using rule 256 (TIPO -> real .)


state 252

    (257) TIPO -> double . precision

    precision       shift and go to state 365


state 253

    (258) TIPO -> money .

    r_from          reduce using rule 258 (TIPO -> money .)
    coma            reduce using rule 258 (TIPO -> money .)
    where           reduce using rule 258 (TIPO -> money .)
    group           reduce using rule 258 (TIPO -> money .)
    having          reduce using rule 258 (TIPO -> money .)
    union           reduce using rule 258 (TIPO -> money .)
    intersect       reduce using rule 258 (TIPO -> money .)
    except          reduce using rule 258 (TIPO -> money .)
    order           reduce using rule 258 (TIPO -> money .)
    limit           reduce using rule 258 (TIPO -> money .)
    offset          reduce using rule 258 (TIPO -> money .)
    ptcoma          reduce using rule 258 (TIPO -> money .)
    mas             reduce using rule 258 (TIPO -> money .)
    menos           reduce using rule 258 (TIPO -> money .)
    multiplicacion  reduce using rule 258 (TIPO -> money .)
    division        reduce using rule 258 (TIPO -> money .)
    modulo          reduce using rule 258 (TIPO -> money .)
    elevado         reduce using rule 258 (TIPO -> money .)
    and             reduce using rule 258 (TIPO -> money .)
    or              reduce using rule 258 (TIPO -> money .)
    mayor           reduce using rule 258 (TIPO -> money .)
    menor           reduce using rule 258 (TIPO -> money .)
    mayor_igual     reduce using rule 258 (TIPO -> money .)
    menor_igual     reduce using rule 258 (TIPO -> money .)
    igual           reduce using rule 258 (TIPO -> money .)
    diferente1      reduce using rule 258 (TIPO -> money .)
    diferente2      reduce using rule 258 (TIPO -> money .)
    between         reduce using rule 258 (TIPO -> money .)
    is              reduce using rule 258 (TIPO -> money .)
    not             reduce using rule 258 (TIPO -> money .)
    as              reduce using rule 258 (TIPO -> money .)
    like            reduce using rule 258 (TIPO -> money .)
    isnull          reduce using rule 258 (TIPO -> money .)
    notnull         reduce using rule 258 (TIPO -> money .)
    cadenaString    reduce using rule 258 (TIPO -> money .)
    id              reduce using rule 258 (TIPO -> money .)
    cadena          reduce using rule 258 (TIPO -> money .)
    in              reduce using rule 258 (TIPO -> money .)
    then            reduce using rule 258 (TIPO -> money .)
    when            reduce using rule 258 (TIPO -> money .)
    parc            reduce using rule 258 (TIPO -> money .)
    constraint      reduce using rule 258 (TIPO -> money .)
    primary         reduce using rule 258 (TIPO -> money .)
    null            reduce using rule 258 (TIPO -> money .)
    unique          reduce using rule 258 (TIPO -> money .)
    references      reduce using rule 258 (TIPO -> money .)
    check           reduce using rule 258 (TIPO -> money .)
    default         reduce using rule 258 (TIPO -> money .)
    asc             reduce using rule 258 (TIPO -> money .)
    desc            reduce using rule 258 (TIPO -> money .)
    dospuntos       reduce using rule 258 (TIPO -> money .)
    language        reduce using rule 258 (TIPO -> money .)
    do              reduce using rule 258 (TIPO -> money .)


state 254

    (259) TIPO -> text .

    r_from          reduce using rule 259 (TIPO -> text .)
    coma            reduce using rule 259 (TIPO -> text .)
    where           reduce using rule 259 (TIPO -> text .)
    group           reduce using rule 259 (TIPO -> text .)
    having          reduce using rule 259 (TIPO -> text .)
    union           reduce using rule 259 (TIPO -> text .)
    intersect       reduce using rule 259 (TIPO -> text .)
    except          reduce using rule 259 (TIPO -> text .)
    order           reduce using rule 259 (TIPO -> text .)
    limit           reduce using rule 259 (TIPO -> text .)
    offset          reduce using rule 259 (TIPO -> text .)
    ptcoma          reduce using rule 259 (TIPO -> text .)
    mas             reduce using rule 259 (TIPO -> text .)
    menos           reduce using rule 259 (TIPO -> text .)
    multiplicacion  reduce using rule 259 (TIPO -> text .)
    division        reduce using rule 259 (TIPO -> text .)
    modulo          reduce using rule 259 (TIPO -> text .)
    elevado         reduce using rule 259 (TIPO -> text .)
    and             reduce using rule 259 (TIPO -> text .)
    or              reduce using rule 259 (TIPO -> text .)
    mayor           reduce using rule 259 (TIPO -> text .)
    menor           reduce using rule 259 (TIPO -> text .)
    mayor_igual     reduce using rule 259 (TIPO -> text .)
    menor_igual     reduce using rule 259 (TIPO -> text .)
    igual           reduce using rule 259 (TIPO -> text .)
    diferente1      reduce using rule 259 (TIPO -> text .)
    diferente2      reduce using rule 259 (TIPO -> text .)
    between         reduce using rule 259 (TIPO -> text .)
    is              reduce using rule 259 (TIPO -> text .)
    not             reduce using rule 259 (TIPO -> text .)
    as              reduce using rule 259 (TIPO -> text .)
    like            reduce using rule 259 (TIPO -> text .)
    isnull          reduce using rule 259 (TIPO -> text .)
    notnull         reduce using rule 259 (TIPO -> text .)
    cadenaString    reduce using rule 259 (TIPO -> text .)
    id              reduce using rule 259 (TIPO -> text .)
    cadena          reduce using rule 259 (TIPO -> text .)
    in              reduce using rule 259 (TIPO -> text .)
    then            reduce using rule 259 (TIPO -> text .)
    when            reduce using rule 259 (TIPO -> text .)
    parc            reduce using rule 259 (TIPO -> text .)
    constraint      reduce using rule 259 (TIPO -> text .)
    primary         reduce using rule 259 (TIPO -> text .)
    null            reduce using rule 259 (TIPO -> text .)
    unique          reduce using rule 259 (TIPO -> text .)
    references      reduce using rule 259 (TIPO -> text .)
    check           reduce using rule 259 (TIPO -> text .)
    default         reduce using rule 259 (TIPO -> text .)
    asc             reduce using rule 259 (TIPO -> text .)
    desc            reduce using rule 259 (TIPO -> text .)
    dospuntos       reduce using rule 259 (TIPO -> text .)
    language        reduce using rule 259 (TIPO -> text .)
    do              reduce using rule 259 (TIPO -> text .)


state 255

    (261) TIPO -> date .

    r_from          reduce using rule 261 (TIPO -> date .)
    coma            reduce using rule 261 (TIPO -> date .)
    where           reduce using rule 261 (TIPO -> date .)
    group           reduce using rule 261 (TIPO -> date .)
    having          reduce using rule 261 (TIPO -> date .)
    union           reduce using rule 261 (TIPO -> date .)
    intersect       reduce using rule 261 (TIPO -> date .)
    except          reduce using rule 261 (TIPO -> date .)
    order           reduce using rule 261 (TIPO -> date .)
    limit           reduce using rule 261 (TIPO -> date .)
    offset          reduce using rule 261 (TIPO -> date .)
    ptcoma          reduce using rule 261 (TIPO -> date .)
    mas             reduce using rule 261 (TIPO -> date .)
    menos           reduce using rule 261 (TIPO -> date .)
    multiplicacion  reduce using rule 261 (TIPO -> date .)
    division        reduce using rule 261 (TIPO -> date .)
    modulo          reduce using rule 261 (TIPO -> date .)
    elevado         reduce using rule 261 (TIPO -> date .)
    and             reduce using rule 261 (TIPO -> date .)
    or              reduce using rule 261 (TIPO -> date .)
    mayor           reduce using rule 261 (TIPO -> date .)
    menor           reduce using rule 261 (TIPO -> date .)
    mayor_igual     reduce using rule 261 (TIPO -> date .)
    menor_igual     reduce using rule 261 (TIPO -> date .)
    igual           reduce using rule 261 (TIPO -> date .)
    diferente1      reduce using rule 261 (TIPO -> date .)
    diferente2      reduce using rule 261 (TIPO -> date .)
    between         reduce using rule 261 (TIPO -> date .)
    is              reduce using rule 261 (TIPO -> date .)
    not             reduce using rule 261 (TIPO -> date .)
    as              reduce using rule 261 (TIPO -> date .)
    like            reduce using rule 261 (TIPO -> date .)
    isnull          reduce using rule 261 (TIPO -> date .)
    notnull         reduce using rule 261 (TIPO -> date .)
    cadenaString    reduce using rule 261 (TIPO -> date .)
    id              reduce using rule 261 (TIPO -> date .)
    cadena          reduce using rule 261 (TIPO -> date .)
    in              reduce using rule 261 (TIPO -> date .)
    then            reduce using rule 261 (TIPO -> date .)
    when            reduce using rule 261 (TIPO -> date .)
    parc            reduce using rule 261 (TIPO -> date .)
    constraint      reduce using rule 261 (TIPO -> date .)
    primary         reduce using rule 261 (TIPO -> date .)
    null            reduce using rule 261 (TIPO -> date .)
    unique          reduce using rule 261 (TIPO -> date .)
    references      reduce using rule 261 (TIPO -> date .)
    check           reduce using rule 261 (TIPO -> date .)
    default         reduce using rule 261 (TIPO -> date .)
    asc             reduce using rule 261 (TIPO -> date .)
    desc            reduce using rule 261 (TIPO -> date .)
    dospuntos       reduce using rule 261 (TIPO -> date .)
    language        reduce using rule 261 (TIPO -> date .)
    do              reduce using rule 261 (TIPO -> date .)


state 256

    (264) TIPO -> boolean .

    r_from          reduce using rule 264 (TIPO -> boolean .)
    coma            reduce using rule 264 (TIPO -> boolean .)
    where           reduce using rule 264 (TIPO -> boolean .)
    group           reduce using rule 264 (TIPO -> boolean .)
    having          reduce using rule 264 (TIPO -> boolean .)
    union           reduce using rule 264 (TIPO -> boolean .)
    intersect       reduce using rule 264 (TIPO -> boolean .)
    except          reduce using rule 264 (TIPO -> boolean .)
    order           reduce using rule 264 (TIPO -> boolean .)
    limit           reduce using rule 264 (TIPO -> boolean .)
    offset          reduce using rule 264 (TIPO -> boolean .)
    ptcoma          reduce using rule 264 (TIPO -> boolean .)
    mas             reduce using rule 264 (TIPO -> boolean .)
    menos           reduce using rule 264 (TIPO -> boolean .)
    multiplicacion  reduce using rule 264 (TIPO -> boolean .)
    division        reduce using rule 264 (TIPO -> boolean .)
    modulo          reduce using rule 264 (TIPO -> boolean .)
    elevado         reduce using rule 264 (TIPO -> boolean .)
    and             reduce using rule 264 (TIPO -> boolean .)
    or              reduce using rule 264 (TIPO -> boolean .)
    mayor           reduce using rule 264 (TIPO -> boolean .)
    menor           reduce using rule 264 (TIPO -> boolean .)
    mayor_igual     reduce using rule 264 (TIPO -> boolean .)
    menor_igual     reduce using rule 264 (TIPO -> boolean .)
    igual           reduce using rule 264 (TIPO -> boolean .)
    diferente1      reduce using rule 264 (TIPO -> boolean .)
    diferente2      reduce using rule 264 (TIPO -> boolean .)
    between         reduce using rule 264 (TIPO -> boolean .)
    is              reduce using rule 264 (TIPO -> boolean .)
    not             reduce using rule 264 (TIPO -> boolean .)
    as              reduce using rule 264 (TIPO -> boolean .)
    like            reduce using rule 264 (TIPO -> boolean .)
    isnull          reduce using rule 264 (TIPO -> boolean .)
    notnull         reduce using rule 264 (TIPO -> boolean .)
    cadenaString    reduce using rule 264 (TIPO -> boolean .)
    id              reduce using rule 264 (TIPO -> boolean .)
    cadena          reduce using rule 264 (TIPO -> boolean .)
    in              reduce using rule 264 (TIPO -> boolean .)
    then            reduce using rule 264 (TIPO -> boolean .)
    when            reduce using rule 264 (TIPO -> boolean .)
    parc            reduce using rule 264 (TIPO -> boolean .)
    constraint      reduce using rule 264 (TIPO -> boolean .)
    primary         reduce using rule 264 (TIPO -> boolean .)
    null            reduce using rule 264 (TIPO -> boolean .)
    unique          reduce using rule 264 (TIPO -> boolean .)
    references      reduce using rule 264 (TIPO -> boolean .)
    check           reduce using rule 264 (TIPO -> boolean .)
    default         reduce using rule 264 (TIPO -> boolean .)
    asc             reduce using rule 264 (TIPO -> boolean .)
    desc            reduce using rule 264 (TIPO -> boolean .)
    dospuntos       reduce using rule 264 (TIPO -> boolean .)
    language        reduce using rule 264 (TIPO -> boolean .)
    do              reduce using rule 264 (TIPO -> boolean .)


state 257

    (265) TIPO -> record .

    r_from          reduce using rule 265 (TIPO -> record .)
    coma            reduce using rule 265 (TIPO -> record .)
    where           reduce using rule 265 (TIPO -> record .)
    group           reduce using rule 265 (TIPO -> record .)
    having          reduce using rule 265 (TIPO -> record .)
    union           reduce using rule 265 (TIPO -> record .)
    intersect       reduce using rule 265 (TIPO -> record .)
    except          reduce using rule 265 (TIPO -> record .)
    order           reduce using rule 265 (TIPO -> record .)
    limit           reduce using rule 265 (TIPO -> record .)
    offset          reduce using rule 265 (TIPO -> record .)
    ptcoma          reduce using rule 265 (TIPO -> record .)
    mas             reduce using rule 265 (TIPO -> record .)
    menos           reduce using rule 265 (TIPO -> record .)
    multiplicacion  reduce using rule 265 (TIPO -> record .)
    division        reduce using rule 265 (TIPO -> record .)
    modulo          reduce using rule 265 (TIPO -> record .)
    elevado         reduce using rule 265 (TIPO -> record .)
    and             reduce using rule 265 (TIPO -> record .)
    or              reduce using rule 265 (TIPO -> record .)
    mayor           reduce using rule 265 (TIPO -> record .)
    menor           reduce using rule 265 (TIPO -> record .)
    mayor_igual     reduce using rule 265 (TIPO -> record .)
    menor_igual     reduce using rule 265 (TIPO -> record .)
    igual           reduce using rule 265 (TIPO -> record .)
    diferente1      reduce using rule 265 (TIPO -> record .)
    diferente2      reduce using rule 265 (TIPO -> record .)
    between         reduce using rule 265 (TIPO -> record .)
    is              reduce using rule 265 (TIPO -> record .)
    not             reduce using rule 265 (TIPO -> record .)
    as              reduce using rule 265 (TIPO -> record .)
    like            reduce using rule 265 (TIPO -> record .)
    isnull          reduce using rule 265 (TIPO -> record .)
    notnull         reduce using rule 265 (TIPO -> record .)
    cadenaString    reduce using rule 265 (TIPO -> record .)
    id              reduce using rule 265 (TIPO -> record .)
    cadena          reduce using rule 265 (TIPO -> record .)
    in              reduce using rule 265 (TIPO -> record .)
    then            reduce using rule 265 (TIPO -> record .)
    when            reduce using rule 265 (TIPO -> record .)
    parc            reduce using rule 265 (TIPO -> record .)
    constraint      reduce using rule 265 (TIPO -> record .)
    primary         reduce using rule 265 (TIPO -> record .)
    null            reduce using rule 265 (TIPO -> record .)
    unique          reduce using rule 265 (TIPO -> record .)
    references      reduce using rule 265 (TIPO -> record .)
    check           reduce using rule 265 (TIPO -> record .)
    default         reduce using rule 265 (TIPO -> record .)
    asc             reduce using rule 265 (TIPO -> record .)
    desc            reduce using rule 265 (TIPO -> record .)
    dospuntos       reduce using rule 265 (TIPO -> record .)
    language        reduce using rule 265 (TIPO -> record .)
    do              reduce using rule 265 (TIPO -> record .)


state 258

    (326) EXP -> id para parc .

    r_from          reduce using rule 326 (EXP -> id para parc .)
    coma            reduce using rule 326 (EXP -> id para parc .)
    where           reduce using rule 326 (EXP -> id para parc .)
    group           reduce using rule 326 (EXP -> id para parc .)
    having          reduce using rule 326 (EXP -> id para parc .)
    union           reduce using rule 326 (EXP -> id para parc .)
    intersect       reduce using rule 326 (EXP -> id para parc .)
    except          reduce using rule 326 (EXP -> id para parc .)
    order           reduce using rule 326 (EXP -> id para parc .)
    limit           reduce using rule 326 (EXP -> id para parc .)
    offset          reduce using rule 326 (EXP -> id para parc .)
    ptcoma          reduce using rule 326 (EXP -> id para parc .)
    mas             reduce using rule 326 (EXP -> id para parc .)
    menos           reduce using rule 326 (EXP -> id para parc .)
    multiplicacion  reduce using rule 326 (EXP -> id para parc .)
    division        reduce using rule 326 (EXP -> id para parc .)
    modulo          reduce using rule 326 (EXP -> id para parc .)
    elevado         reduce using rule 326 (EXP -> id para parc .)
    and             reduce using rule 326 (EXP -> id para parc .)
    or              reduce using rule 326 (EXP -> id para parc .)
    mayor           reduce using rule 326 (EXP -> id para parc .)
    menor           reduce using rule 326 (EXP -> id para parc .)
    mayor_igual     reduce using rule 326 (EXP -> id para parc .)
    menor_igual     reduce using rule 326 (EXP -> id para parc .)
    igual           reduce using rule 326 (EXP -> id para parc .)
    diferente1      reduce using rule 326 (EXP -> id para parc .)
    diferente2      reduce using rule 326 (EXP -> id para parc .)
    between         reduce using rule 326 (EXP -> id para parc .)
    is              reduce using rule 326 (EXP -> id para parc .)
    not             reduce using rule 326 (EXP -> id para parc .)
    as              reduce using rule 326 (EXP -> id para parc .)
    like            reduce using rule 326 (EXP -> id para parc .)
    isnull          reduce using rule 326 (EXP -> id para parc .)
    notnull         reduce using rule 326 (EXP -> id para parc .)
    cadenaString    reduce using rule 326 (EXP -> id para parc .)
    id              reduce using rule 326 (EXP -> id para parc .)
    cadena          reduce using rule 326 (EXP -> id para parc .)
    in              reduce using rule 326 (EXP -> id para parc .)
    then            reduce using rule 326 (EXP -> id para parc .)
    when            reduce using rule 326 (EXP -> id para parc .)
    parc            reduce using rule 326 (EXP -> id para parc .)
    constraint      reduce using rule 326 (EXP -> id para parc .)
    primary         reduce using rule 326 (EXP -> id para parc .)
    null            reduce using rule 326 (EXP -> id para parc .)
    unique          reduce using rule 326 (EXP -> id para parc .)
    references      reduce using rule 326 (EXP -> id para parc .)
    check           reduce using rule 326 (EXP -> id para parc .)
    default         reduce using rule 326 (EXP -> id para parc .)
    asc             reduce using rule 326 (EXP -> id para parc .)
    desc            reduce using rule 326 (EXP -> id para parc .)


state 259

    (327) EXP -> id para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 366
    coma            shift and go to state 125


state 260

    (325) EXP -> para EXP parc .

    r_from          reduce using rule 325 (EXP -> para EXP parc .)
    coma            reduce using rule 325 (EXP -> para EXP parc .)
    where           reduce using rule 325 (EXP -> para EXP parc .)
    group           reduce using rule 325 (EXP -> para EXP parc .)
    having          reduce using rule 325 (EXP -> para EXP parc .)
    union           reduce using rule 325 (EXP -> para EXP parc .)
    intersect       reduce using rule 325 (EXP -> para EXP parc .)
    except          reduce using rule 325 (EXP -> para EXP parc .)
    order           reduce using rule 325 (EXP -> para EXP parc .)
    limit           reduce using rule 325 (EXP -> para EXP parc .)
    offset          reduce using rule 325 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 325 (EXP -> para EXP parc .)
    mas             reduce using rule 325 (EXP -> para EXP parc .)
    menos           reduce using rule 325 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 325 (EXP -> para EXP parc .)
    division        reduce using rule 325 (EXP -> para EXP parc .)
    modulo          reduce using rule 325 (EXP -> para EXP parc .)
    elevado         reduce using rule 325 (EXP -> para EXP parc .)
    and             reduce using rule 325 (EXP -> para EXP parc .)
    or              reduce using rule 325 (EXP -> para EXP parc .)
    mayor           reduce using rule 325 (EXP -> para EXP parc .)
    menor           reduce using rule 325 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 325 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 325 (EXP -> para EXP parc .)
    igual           reduce using rule 325 (EXP -> para EXP parc .)
    diferente1      reduce using rule 325 (EXP -> para EXP parc .)
    diferente2      reduce using rule 325 (EXP -> para EXP parc .)
    between         reduce using rule 325 (EXP -> para EXP parc .)
    is              reduce using rule 325 (EXP -> para EXP parc .)
    not             reduce using rule 325 (EXP -> para EXP parc .)
    as              reduce using rule 325 (EXP -> para EXP parc .)
    like            reduce using rule 325 (EXP -> para EXP parc .)
    isnull          reduce using rule 325 (EXP -> para EXP parc .)
    notnull         reduce using rule 325 (EXP -> para EXP parc .)
    cadenaString    reduce using rule 325 (EXP -> para EXP parc .)
    id              reduce using rule 325 (EXP -> para EXP parc .)
    cadena          reduce using rule 325 (EXP -> para EXP parc .)
    in              reduce using rule 325 (EXP -> para EXP parc .)
    then            reduce using rule 325 (EXP -> para EXP parc .)
    when            reduce using rule 325 (EXP -> para EXP parc .)
    parc            reduce using rule 325 (EXP -> para EXP parc .)
    constraint      reduce using rule 325 (EXP -> para EXP parc .)
    primary         reduce using rule 325 (EXP -> para EXP parc .)
    null            reduce using rule 325 (EXP -> para EXP parc .)
    unique          reduce using rule 325 (EXP -> para EXP parc .)
    references      reduce using rule 325 (EXP -> para EXP parc .)
    check           reduce using rule 325 (EXP -> para EXP parc .)
    default         reduce using rule 325 (EXP -> para EXP parc .)
    asc             reduce using rule 325 (EXP -> para EXP parc .)
    desc            reduce using rule 325 (EXP -> para EXP parc .)


state 261

    (328) EXP -> any para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 367
    coma            shift and go to state 125


state 262

    (329) EXP -> all para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 368
    coma            shift and go to state 125


state 263

    (330) EXP -> some para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 369
    coma            shift and go to state 125


state 264

    (331) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 370


state 265

    (274) FIELDS -> year .

    r_from          reduce using rule 274 (FIELDS -> year .)


state 266

    (275) FIELDS -> month .

    r_from          reduce using rule 275 (FIELDS -> month .)


state 267

    (276) FIELDS -> day .

    r_from          reduce using rule 276 (FIELDS -> day .)


state 268

    (277) FIELDS -> hour .

    r_from          reduce using rule 277 (FIELDS -> hour .)


state 269

    (278) FIELDS -> minute .

    r_from          reduce using rule 278 (FIELDS -> minute .)


state 270

    (279) FIELDS -> second .

    r_from          reduce using rule 279 (FIELDS -> second .)


state 271

    (167) CREATETABLE -> create table id para . LDEF parc ptcoma
    (168) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (169) LDEF -> . LDEF coma COLDEF
    (170) LDEF -> . COLDEF
    (171) COLDEF -> . OPCONST
    (172) COLDEF -> . constraint id OPCONST
    (173) COLDEF -> . id TIPO
    (174) COLDEF -> . id TIPO LOPCOLUMN
    (186) OPCONST -> . primary key para LEXP parc
    (187) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (188) OPCONST -> . check para CONDCHECK parc
    (189) OPCONST -> . unique para LEXP parc

    constraint      shift and go to state 375
    id              shift and go to state 371
    primary         shift and go to state 376
    foreign         shift and go to state 377
    check           shift and go to state 378
    unique          shift and go to state 379

    LDEF                           shift and go to state 372
    COLDEF                         shift and go to state 373
    OPCONST                        shift and go to state 374

state 272

    (198) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 380


state 273

    (150) CREATEDB -> create RD if not . exist id
    (151) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 381


state 274

    (153) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 153 (CREATEDB -> create RD id OPCCDB .)


state 275

    (154) OPCCDB -> PROPIETARIO .
    (156) OPCCDB -> PROPIETARIO . MODO
    (165) MODO -> . mode igual int
    (166) MODO -> . mode int

    ptcoma          reduce using rule 154 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 278

    MODO                           shift and go to state 382

state 276

    (155) OPCCDB -> MODO .

    ptcoma          reduce using rule 155 (OPCCDB -> MODO .)


state 277

    (159) PROPIETARIO -> owner . igual id
    (160) PROPIETARIO -> owner . id
    (161) PROPIETARIO -> owner . igual cadena
    (162) PROPIETARIO -> owner . cadena
    (163) PROPIETARIO -> owner . igual cadenaString
    (164) PROPIETARIO -> owner . cadenaString

    igual           shift and go to state 383
    id              shift and go to state 384
    cadena          shift and go to state 385
    cadenaString    shift and go to state 386


state 278

    (165) MODO -> mode . igual int
    (166) MODO -> mode . int

    igual           shift and go to state 387
    int             shift and go to state 388


state 279

    (50) CREATEINDEX -> create index id on . id para LEXP parc
    (52) CREATEINDEX -> create index id on . id using hash para LEXP parc
    (53) CREATEINDEX -> create index id on . id para id ORDEN parc
    (54) CREATEINDEX -> create index id on . id para id id ORDEN parc
    (55) CREATEINDEX -> create index id on . id para id id parc

    id              shift and go to state 389


state 280

    (51) CREATEINDEX -> create unique index id . on id para LEXP parc

    on              shift and go to state 390


state 281

    (35) PROCEDIMIENTOS -> create procedure id para . LPARAM parc LENGUAJE LCONTENIDOP
    (36) PROCEDIMIENTOS -> create procedure id para . LPARAM parc LCONTENIDOP LENGUAJE
    (37) PROCEDIMIENTOS -> create procedure id para . parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create procedure id para . parc LCONTENIDOP LENGUAJE
    (43) LPARAM -> . LPARAM coma inout id TIPO
    (44) LPARAM -> . LPARAM coma id TIPO
    (45) LPARAM -> . inout id TIPO
    (46) LPARAM -> . id TIPO

    parc            shift and go to state 393
    inout           shift and go to state 394
    id              shift and go to state 391

    LPARAM                         shift and go to state 392

state 282

    (26) FUNCIONES -> create function id para . LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para . LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> create function id para . parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id para . parc RETURNP LCONTENIDOP LENGUAJE
    (43) LPARAM -> . LPARAM coma inout id TIPO
    (44) LPARAM -> . LPARAM coma id TIPO
    (45) LPARAM -> . inout id TIPO
    (46) LPARAM -> . id TIPO

    parc            shift and go to state 396
    inout           shift and go to state 394
    id              shift and go to state 391

    LPARAM                         shift and go to state 395

state 283

    (157) RD -> or replace databases .

    if              reduce using rule 157 (RD -> or replace databases .)
    id              reduce using rule 157 (RD -> or replace databases .)


state 284

    (229) LCAMPOS -> id . igual EXP

    igual           shift and go to state 397


state 285

    (227) UPDATE -> update id set LCAMPOS . where LEXP
    (228) LCAMPOS -> LCAMPOS . coma id igual EXP

    where           shift and go to state 398
    coma            shift and go to state 399


state 286

    (230) DELETE -> delete r_from id WHERE .

    ptcoma          reduce using rule 230 (DELETE -> delete r_from id WHERE .)


state 287

    (123) ALTER -> alter databases id RO .

    ptcoma          reduce using rule 123 (ALTER -> alter databases id RO .)


state 288

    (125) RO -> rename . to id

    to              shift and go to state 400


state 289

    (126) RO -> owner . to id

    to              shift and go to state 401


state 290

    (140) OP -> alter . column id set not null
    (141) OP -> alter . column id set null
    (146) OP -> alter . column id type TIPO

    column          shift and go to state 402


state 291

    (124) ALTER -> alter table id LOP .
    (131) LOP -> LOP . coma OP

    ptcoma          reduce using rule 124 (ALTER -> alter table id LOP .)
    coma            shift and go to state 403


state 292

    (132) LOP -> OP .

    coma            reduce using rule 132 (LOP -> OP .)
    ptcoma          reduce using rule 132 (LOP -> OP .)


state 293

    (133) OP -> add . column id TIPO
    (134) OP -> add . check para CONDCHECK parc
    (135) OP -> add . constraint id check para CONDCHECK parc
    (136) OP -> add . constraint id unique para LEXP parc
    (137) OP -> add . unique para LEXP parc
    (138) OP -> add . foreign key para LEXP parc references id para LEXP parc
    (139) OP -> add . constraint id foreign key para LEXP parc references id para LEXP parc

    column          shift and go to state 404
    check           shift and go to state 405
    constraint      shift and go to state 406
    unique          shift and go to state 407
    foreign         shift and go to state 408


state 294

    (142) OP -> drop . constraint id
    (143) OP -> drop . column LEXP
    (144) OP -> drop . check id

    constraint      shift and go to state 409
    column          shift and go to state 410
    check           shift and go to state 411


state 295

    (145) OP -> rename . column id to id

    column          shift and go to state 412


state 296

    (127) ALTER -> alter index id alter . EXP
    (129) ALTER -> alter index id alter . column EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    column          shift and go to state 414
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 413
    SELECT                         shift and go to state 72

state 297

    (128) ALTER -> alter index if exist . id alter EXP
    (130) ALTER -> alter index if exist . id alter column EXP

    id              shift and go to state 415


state 298

    (76) CONDICIONIF -> if EXP then LISTACONTENIDO . LELIF ELSEF end if
    (77) CONDICIONIF -> if EXP then LISTACONTENIDO . ELSEF end if
    (78) CONDICIONIF -> if EXP then LISTACONTENIDO . LELIF end if
    (79) CONDICIONIF -> if EXP then LISTACONTENIDO . end if
    (87) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (80) LELIF -> . LELIF elsif EXP then LISTACONTENIDO
    (81) LELIF -> . elsif EXP then LISTACONTENIDO
    (82) ELSEF -> . else LISTACONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    end             shift and go to state 418
    elsif           shift and go to state 420
    else            shift and go to state 192
    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LELIF                          shift and go to state 416
    ELSEF                          shift and go to state 417
    CONTENIDO                      shift and go to state 419
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 299

    (88) LISTACONTENIDO -> CONTENIDO .

    end             reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    elsif           reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    else            reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    declare         reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    id              reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    if              reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    raise           reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    begin           reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    execute         reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    return          reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    insert          reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    select          reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    update          reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    delete          reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    case            reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    when            reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)
    dolarn          reduce using rule 88 (LISTACONTENIDO -> CONTENIDO .)


state 300

    (89) CONTENIDO -> ASIGNACION . ptcoma

    ptcoma          shift and go to state 421


state 301

    (90) CONTENIDO -> CONDICIONIF . ptcoma

    ptcoma          shift and go to state 422


state 302

    (91) CONTENIDO -> RAISE . ptcoma

    ptcoma          shift and go to state 423


state 303

    (92) CONTENIDO -> BEGINEND . ptcoma

    ptcoma          shift and go to state 424


state 304

    (93) CONTENIDO -> CALLPROCEDURE . ptcoma

    ptcoma          shift and go to state 425


state 305

    (94) CONTENIDO -> RETURN . ptcoma

    ptcoma          shift and go to state 426


state 306

    (95) CONTENIDO -> INSERT . ptcoma

    ptcoma          shift and go to state 427


state 307

    (96) CONTENIDO -> SELECT . ptcoma

    ptcoma          shift and go to state 428


state 308

    (97) CONTENIDO -> UPDATE . ptcoma

    ptcoma          shift and go to state 429


state 309

    (98) CONTENIDO -> DELETE . ptcoma

    ptcoma          shift and go to state 430


state 310

    (99) CONTENIDO -> CASE . ptcoma

    ptcoma          shift and go to state 431


state 311

    (100) CONTENIDO -> declare . LDEC
    (64) LDEC -> . LDEC DECLARACIONES
    (65) LDEC -> . DECLARACIONES
    (66) DECLARACIONES -> . id TIPO not null ASIG ptcoma
    (67) DECLARACIONES -> . id TIPO ASIG ptcoma
    (68) DECLARACIONES -> . id constant TIPO not null ASIG ptcoma
    (69) DECLARACIONES -> . id constant TIPO ASIG ptcoma

    id              shift and go to state 434

    LDEC                           shift and go to state 432
    DECLARACIONES                  shift and go to state 433

state 312

    (101) RAISE -> raise . LEVEL FORMAT
    (102) RAISE -> raise . LEVEL EXP
    (103) RAISE -> raise . LEVEL
    (104) RAISE -> raise .
    (105) RAISE -> raise . LEVEL cadena coma id
    (106) LEVEL -> . info
    (107) LEVEL -> . debug
    (108) LEVEL -> . notice
    (109) LEVEL -> . warning
    (110) LEVEL -> . exception

    ptcoma          reduce using rule 104 (RAISE -> raise .)
    info            shift and go to state 436
    debug           shift and go to state 437
    notice          shift and go to state 438
    warning         shift and go to state 439
    exception       shift and go to state 440

    LEVEL                          shift and go to state 435

state 313

    (49) BEGINEND -> begin . LISTACONTENIDO end
    (87) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (88) LISTACONTENIDO -> . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LISTACONTENIDO                 shift and go to state 441
    CONTENIDO                      shift and go to state 299
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 314

    (25) RETURN -> return . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 442
    SELECT                         shift and go to state 72

state 315

    (118) DROP -> drop all para parc .

    ptcoma          reduce using rule 118 (DROP -> drop all para parc .)


state 316

    (122) DROP -> drop databases if exist . id

    id              shift and go to state 443


state 317

    (31) DROPFUNC -> drop function if exist . id

    id              shift and go to state 444


state 318

    (116) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 445


state 319

    (117) INSERT -> insert into id para . LEXP parc values para LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 446
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 320

    (83) CASE -> case EXP LISTAWHEN ELSEF . end case

    end             shift and go to state 447


state 321

    (85) CASE -> case EXP LISTAWHEN end .

    ptcoma          reduce using rule 85 (CASE -> case EXP LISTAWHEN end .)


state 322

    (84) CASE -> case LISTAWHEN ELSEF end . case

    case            shift and go to state 448


state 323

    (86) CASE -> case LISTAWHEN end case .

    ptcoma          reduce using rule 86 (CASE -> case LISTAWHEN end case .)


state 324

    (82) ELSEF -> else LISTACONTENIDO .
    (87) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    end             reduce using rule 82 (ELSEF -> else LISTACONTENIDO .)
    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    CONTENIDO                      shift and go to state 419
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 325

    (114) WHEN -> when EXP then . LISTACONTENIDO
    (87) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (88) LISTACONTENIDO -> . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LISTACONTENIDO                 shift and go to state 449
    CONTENIDO                      shift and go to state 299
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 326

    (148) SHOW -> show tables para id . parc

    parc            shift and go to state 450


state 327

    (149) SHOW -> show collection para parc .

    ptcoma          reduce using rule 149 (SHOW -> show collection para parc .)


state 328

    (33) CALLPROCEDURE -> execute id para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 451
    coma            shift and go to state 125


state 329

    (34) CALLPROCEDURE -> execute id para parc .

    ptcoma          reduce using rule 34 (CALLPROCEDURE -> execute id para parc .)


state 330

    (232) EXIST -> not exist para . SELECT parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 25

    SELECT                         shift and go to state 452

state 331

    (231) EXIST -> exist para SELECT . parc

    parc            shift and go to state 453


state 332

    (199) SELECT -> select distinct LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (233) LEXP -> LEXP . coma EXP
    (210) WHERE -> . where EXP
    (211) WHERE -> .
    (212) WHERE -> . where EXIST

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 125
    where           shift and go to state 50
    r_from          reduce using rule 211 (WHERE -> .)
    group           reduce using rule 211 (WHERE -> .)
    having          reduce using rule 211 (WHERE -> .)
    union           reduce using rule 211 (WHERE -> .)
    intersect       reduce using rule 211 (WHERE -> .)
    except          reduce using rule 211 (WHERE -> .)
    order           reduce using rule 211 (WHERE -> .)
    limit           reduce using rule 211 (WHERE -> .)
    offset          reduce using rule 211 (WHERE -> .)
    ptcoma          reduce using rule 211 (WHERE -> .)
    mas             reduce using rule 211 (WHERE -> .)
    menos           reduce using rule 211 (WHERE -> .)
    multiplicacion  reduce using rule 211 (WHERE -> .)
    division        reduce using rule 211 (WHERE -> .)
    modulo          reduce using rule 211 (WHERE -> .)
    elevado         reduce using rule 211 (WHERE -> .)
    and             reduce using rule 211 (WHERE -> .)
    or              reduce using rule 211 (WHERE -> .)
    mayor           reduce using rule 211 (WHERE -> .)
    menor           reduce using rule 211 (WHERE -> .)
    mayor_igual     reduce using rule 211 (WHERE -> .)
    menor_igual     reduce using rule 211 (WHERE -> .)
    igual           reduce using rule 211 (WHERE -> .)
    diferente1      reduce using rule 211 (WHERE -> .)
    diferente2      reduce using rule 211 (WHERE -> .)
    between         reduce using rule 211 (WHERE -> .)
    is              reduce using rule 211 (WHERE -> .)
    not             reduce using rule 211 (WHERE -> .)
    as              reduce using rule 211 (WHERE -> .)
    like            reduce using rule 211 (WHERE -> .)
    isnull          reduce using rule 211 (WHERE -> .)
    notnull         reduce using rule 211 (WHERE -> .)
    cadenaString    reduce using rule 211 (WHERE -> .)
    id              reduce using rule 211 (WHERE -> .)
    cadena          reduce using rule 211 (WHERE -> .)
    in              reduce using rule 211 (WHERE -> .)
    then            reduce using rule 211 (WHERE -> .)
    when            reduce using rule 211 (WHERE -> .)
    parc            reduce using rule 211 (WHERE -> .)
    constraint      reduce using rule 211 (WHERE -> .)
    primary         reduce using rule 211 (WHERE -> .)
    null            reduce using rule 211 (WHERE -> .)
    unique          reduce using rule 211 (WHERE -> .)
    references      reduce using rule 211 (WHERE -> .)
    check           reduce using rule 211 (WHERE -> .)
    default         reduce using rule 211 (WHERE -> .)
    asc             reduce using rule 211 (WHERE -> .)
    desc            reduce using rule 211 (WHERE -> .)

  ! coma            [ reduce using rule 211 (WHERE -> .) ]
  ! where           [ reduce using rule 211 (WHERE -> .) ]

    WHERE                          shift and go to state 454

state 333

    (200) SELECT -> select LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (218) GROUP -> . group by LEXP
    (219) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 203
    r_from          reduce using rule 219 (GROUP -> .)
    coma            reduce using rule 219 (GROUP -> .)
    where           reduce using rule 219 (GROUP -> .)
    having          reduce using rule 219 (GROUP -> .)
    union           reduce using rule 219 (GROUP -> .)
    intersect       reduce using rule 219 (GROUP -> .)
    except          reduce using rule 219 (GROUP -> .)
    order           reduce using rule 219 (GROUP -> .)
    limit           reduce using rule 219 (GROUP -> .)
    offset          reduce using rule 219 (GROUP -> .)
    ptcoma          reduce using rule 219 (GROUP -> .)
    mas             reduce using rule 219 (GROUP -> .)
    menos           reduce using rule 219 (GROUP -> .)
    multiplicacion  reduce using rule 219 (GROUP -> .)
    division        reduce using rule 219 (GROUP -> .)
    modulo          reduce using rule 219 (GROUP -> .)
    elevado         reduce using rule 219 (GROUP -> .)
    and             reduce using rule 219 (GROUP -> .)
    or              reduce using rule 219 (GROUP -> .)
    mayor           reduce using rule 219 (GROUP -> .)
    menor           reduce using rule 219 (GROUP -> .)
    mayor_igual     reduce using rule 219 (GROUP -> .)
    menor_igual     reduce using rule 219 (GROUP -> .)
    igual           reduce using rule 219 (GROUP -> .)
    diferente1      reduce using rule 219 (GROUP -> .)
    diferente2      reduce using rule 219 (GROUP -> .)
    between         reduce using rule 219 (GROUP -> .)
    is              reduce using rule 219 (GROUP -> .)
    not             reduce using rule 219 (GROUP -> .)
    as              reduce using rule 219 (GROUP -> .)
    like            reduce using rule 219 (GROUP -> .)
    isnull          reduce using rule 219 (GROUP -> .)
    notnull         reduce using rule 219 (GROUP -> .)
    cadenaString    reduce using rule 219 (GROUP -> .)
    id              reduce using rule 219 (GROUP -> .)
    cadena          reduce using rule 219 (GROUP -> .)
    in              reduce using rule 219 (GROUP -> .)
    then            reduce using rule 219 (GROUP -> .)
    when            reduce using rule 219 (GROUP -> .)
    parc            reduce using rule 219 (GROUP -> .)
    constraint      reduce using rule 219 (GROUP -> .)
    primary         reduce using rule 219 (GROUP -> .)
    null            reduce using rule 219 (GROUP -> .)
    unique          reduce using rule 219 (GROUP -> .)
    references      reduce using rule 219 (GROUP -> .)
    check           reduce using rule 219 (GROUP -> .)
    default         reduce using rule 219 (GROUP -> .)
    asc             reduce using rule 219 (GROUP -> .)
    desc            reduce using rule 219 (GROUP -> .)

  ! group           [ reduce using rule 219 (GROUP -> .) ]

    GROUP                          shift and go to state 455

state 334

    (201) SELECT -> select LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (213) COMBINING -> . union LEXP
    (214) COMBINING -> . union all LEXP
    (215) COMBINING -> . intersect LEXP
    (216) COMBINING -> . except LEXP
    (217) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 457
    intersect       shift and go to state 458
    except          shift and go to state 459
    r_from          reduce using rule 217 (COMBINING -> .)
    coma            reduce using rule 217 (COMBINING -> .)
    where           reduce using rule 217 (COMBINING -> .)
    group           reduce using rule 217 (COMBINING -> .)
    having          reduce using rule 217 (COMBINING -> .)
    order           reduce using rule 217 (COMBINING -> .)
    limit           reduce using rule 217 (COMBINING -> .)
    offset          reduce using rule 217 (COMBINING -> .)
    ptcoma          reduce using rule 217 (COMBINING -> .)
    mas             reduce using rule 217 (COMBINING -> .)
    menos           reduce using rule 217 (COMBINING -> .)
    multiplicacion  reduce using rule 217 (COMBINING -> .)
    division        reduce using rule 217 (COMBINING -> .)
    modulo          reduce using rule 217 (COMBINING -> .)
    elevado         reduce using rule 217 (COMBINING -> .)
    and             reduce using rule 217 (COMBINING -> .)
    or              reduce using rule 217 (COMBINING -> .)
    mayor           reduce using rule 217 (COMBINING -> .)
    menor           reduce using rule 217 (COMBINING -> .)
    mayor_igual     reduce using rule 217 (COMBINING -> .)
    menor_igual     reduce using rule 217 (COMBINING -> .)
    igual           reduce using rule 217 (COMBINING -> .)
    diferente1      reduce using rule 217 (COMBINING -> .)
    diferente2      reduce using rule 217 (COMBINING -> .)
    between         reduce using rule 217 (COMBINING -> .)
    is              reduce using rule 217 (COMBINING -> .)
    not             reduce using rule 217 (COMBINING -> .)
    as              reduce using rule 217 (COMBINING -> .)
    like            reduce using rule 217 (COMBINING -> .)
    isnull          reduce using rule 217 (COMBINING -> .)
    notnull         reduce using rule 217 (COMBINING -> .)
    cadenaString    reduce using rule 217 (COMBINING -> .)
    id              reduce using rule 217 (COMBINING -> .)
    cadena          reduce using rule 217 (COMBINING -> .)
    in              reduce using rule 217 (COMBINING -> .)
    then            reduce using rule 217 (COMBINING -> .)
    when            reduce using rule 217 (COMBINING -> .)
    parc            reduce using rule 217 (COMBINING -> .)
    constraint      reduce using rule 217 (COMBINING -> .)
    primary         reduce using rule 217 (COMBINING -> .)
    null            reduce using rule 217 (COMBINING -> .)
    unique          reduce using rule 217 (COMBINING -> .)
    references      reduce using rule 217 (COMBINING -> .)
    check           reduce using rule 217 (COMBINING -> .)
    default         reduce using rule 217 (COMBINING -> .)
    asc             reduce using rule 217 (COMBINING -> .)
    desc            reduce using rule 217 (COMBINING -> .)

  ! union           [ reduce using rule 217 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 217 (COMBINING -> .) ]
  ! except          [ reduce using rule 217 (COMBINING -> .) ]

    COMBINING                      shift and go to state 456

state 335

    (220) HAVING -> having . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 460
    SELECT                         shift and go to state 72

state 336

    (218) GROUP -> group by . LEXP
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 461
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 337

    (318) EXP -> EXP between symetric EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 318 (EXP -> EXP between symetric EXP .)
    coma            reduce using rule 318 (EXP -> EXP between symetric EXP .)
    where           reduce using rule 318 (EXP -> EXP between symetric EXP .)
    group           reduce using rule 318 (EXP -> EXP between symetric EXP .)
    having          reduce using rule 318 (EXP -> EXP between symetric EXP .)
    union           reduce using rule 318 (EXP -> EXP between symetric EXP .)
    intersect       reduce using rule 318 (EXP -> EXP between symetric EXP .)
    except          reduce using rule 318 (EXP -> EXP between symetric EXP .)
    order           reduce using rule 318 (EXP -> EXP between symetric EXP .)
    limit           reduce using rule 318 (EXP -> EXP between symetric EXP .)
    offset          reduce using rule 318 (EXP -> EXP between symetric EXP .)
    ptcoma          reduce using rule 318 (EXP -> EXP between symetric EXP .)
    and             reduce using rule 318 (EXP -> EXP between symetric EXP .)
    or              reduce using rule 318 (EXP -> EXP between symetric EXP .)
    between         reduce using rule 318 (EXP -> EXP between symetric EXP .)
    is              reduce using rule 318 (EXP -> EXP between symetric EXP .)
    not             reduce using rule 318 (EXP -> EXP between symetric EXP .)
    as              reduce using rule 318 (EXP -> EXP between symetric EXP .)
    like            reduce using rule 318 (EXP -> EXP between symetric EXP .)
    isnull          reduce using rule 318 (EXP -> EXP between symetric EXP .)
    notnull         reduce using rule 318 (EXP -> EXP between symetric EXP .)
    cadenaString    reduce using rule 318 (EXP -> EXP between symetric EXP .)
    id              reduce using rule 318 (EXP -> EXP between symetric EXP .)
    cadena          reduce using rule 318 (EXP -> EXP between symetric EXP .)
    in              reduce using rule 318 (EXP -> EXP between symetric EXP .)
    then            reduce using rule 318 (EXP -> EXP between symetric EXP .)
    when            reduce using rule 318 (EXP -> EXP between symetric EXP .)
    parc            reduce using rule 318 (EXP -> EXP between symetric EXP .)
    constraint      reduce using rule 318 (EXP -> EXP between symetric EXP .)
    primary         reduce using rule 318 (EXP -> EXP between symetric EXP .)
    null            reduce using rule 318 (EXP -> EXP between symetric EXP .)
    unique          reduce using rule 318 (EXP -> EXP between symetric EXP .)
    references      reduce using rule 318 (EXP -> EXP between symetric EXP .)
    check           reduce using rule 318 (EXP -> EXP between symetric EXP .)
    default         reduce using rule 318 (EXP -> EXP between symetric EXP .)
    asc             reduce using rule 318 (EXP -> EXP between symetric EXP .)
    desc            reduce using rule 318 (EXP -> EXP between symetric EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140

  ! mas             [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! menos           [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! division        [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! modulo          [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! elevado         [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! mayor           [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! menor           [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! igual           [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! diferente1      [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! diferente2      [ reduce using rule 318 (EXP -> EXP between symetric EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 338

    (296) EXP -> EXP is not null .

    r_from          reduce using rule 296 (EXP -> EXP is not null .)
    coma            reduce using rule 296 (EXP -> EXP is not null .)
    where           reduce using rule 296 (EXP -> EXP is not null .)
    group           reduce using rule 296 (EXP -> EXP is not null .)
    having          reduce using rule 296 (EXP -> EXP is not null .)
    union           reduce using rule 296 (EXP -> EXP is not null .)
    intersect       reduce using rule 296 (EXP -> EXP is not null .)
    except          reduce using rule 296 (EXP -> EXP is not null .)
    order           reduce using rule 296 (EXP -> EXP is not null .)
    limit           reduce using rule 296 (EXP -> EXP is not null .)
    offset          reduce using rule 296 (EXP -> EXP is not null .)
    ptcoma          reduce using rule 296 (EXP -> EXP is not null .)
    mas             reduce using rule 296 (EXP -> EXP is not null .)
    menos           reduce using rule 296 (EXP -> EXP is not null .)
    multiplicacion  reduce using rule 296 (EXP -> EXP is not null .)
    division        reduce using rule 296 (EXP -> EXP is not null .)
    modulo          reduce using rule 296 (EXP -> EXP is not null .)
    elevado         reduce using rule 296 (EXP -> EXP is not null .)
    and             reduce using rule 296 (EXP -> EXP is not null .)
    or              reduce using rule 296 (EXP -> EXP is not null .)
    mayor           reduce using rule 296 (EXP -> EXP is not null .)
    menor           reduce using rule 296 (EXP -> EXP is not null .)
    mayor_igual     reduce using rule 296 (EXP -> EXP is not null .)
    menor_igual     reduce using rule 296 (EXP -> EXP is not null .)
    igual           reduce using rule 296 (EXP -> EXP is not null .)
    diferente1      reduce using rule 296 (EXP -> EXP is not null .)
    diferente2      reduce using rule 296 (EXP -> EXP is not null .)
    between         reduce using rule 296 (EXP -> EXP is not null .)
    is              reduce using rule 296 (EXP -> EXP is not null .)
    not             reduce using rule 296 (EXP -> EXP is not null .)
    as              reduce using rule 296 (EXP -> EXP is not null .)
    like            reduce using rule 296 (EXP -> EXP is not null .)
    isnull          reduce using rule 296 (EXP -> EXP is not null .)
    notnull         reduce using rule 296 (EXP -> EXP is not null .)
    cadenaString    reduce using rule 296 (EXP -> EXP is not null .)
    id              reduce using rule 296 (EXP -> EXP is not null .)
    cadena          reduce using rule 296 (EXP -> EXP is not null .)
    in              reduce using rule 296 (EXP -> EXP is not null .)
    then            reduce using rule 296 (EXP -> EXP is not null .)
    when            reduce using rule 296 (EXP -> EXP is not null .)
    parc            reduce using rule 296 (EXP -> EXP is not null .)
    constraint      reduce using rule 296 (EXP -> EXP is not null .)
    primary         reduce using rule 296 (EXP -> EXP is not null .)
    null            reduce using rule 296 (EXP -> EXP is not null .)
    unique          reduce using rule 296 (EXP -> EXP is not null .)
    references      reduce using rule 296 (EXP -> EXP is not null .)
    check           reduce using rule 296 (EXP -> EXP is not null .)
    default         reduce using rule 296 (EXP -> EXP is not null .)
    asc             reduce using rule 296 (EXP -> EXP is not null .)
    desc            reduce using rule 296 (EXP -> EXP is not null .)


state 339

    (297) EXP -> EXP is not true .

    r_from          reduce using rule 297 (EXP -> EXP is not true .)
    coma            reduce using rule 297 (EXP -> EXP is not true .)
    where           reduce using rule 297 (EXP -> EXP is not true .)
    group           reduce using rule 297 (EXP -> EXP is not true .)
    having          reduce using rule 297 (EXP -> EXP is not true .)
    union           reduce using rule 297 (EXP -> EXP is not true .)
    intersect       reduce using rule 297 (EXP -> EXP is not true .)
    except          reduce using rule 297 (EXP -> EXP is not true .)
    order           reduce using rule 297 (EXP -> EXP is not true .)
    limit           reduce using rule 297 (EXP -> EXP is not true .)
    offset          reduce using rule 297 (EXP -> EXP is not true .)
    ptcoma          reduce using rule 297 (EXP -> EXP is not true .)
    mas             reduce using rule 297 (EXP -> EXP is not true .)
    menos           reduce using rule 297 (EXP -> EXP is not true .)
    multiplicacion  reduce using rule 297 (EXP -> EXP is not true .)
    division        reduce using rule 297 (EXP -> EXP is not true .)
    modulo          reduce using rule 297 (EXP -> EXP is not true .)
    elevado         reduce using rule 297 (EXP -> EXP is not true .)
    and             reduce using rule 297 (EXP -> EXP is not true .)
    or              reduce using rule 297 (EXP -> EXP is not true .)
    mayor           reduce using rule 297 (EXP -> EXP is not true .)
    menor           reduce using rule 297 (EXP -> EXP is not true .)
    mayor_igual     reduce using rule 297 (EXP -> EXP is not true .)
    menor_igual     reduce using rule 297 (EXP -> EXP is not true .)
    igual           reduce using rule 297 (EXP -> EXP is not true .)
    diferente1      reduce using rule 297 (EXP -> EXP is not true .)
    diferente2      reduce using rule 297 (EXP -> EXP is not true .)
    between         reduce using rule 297 (EXP -> EXP is not true .)
    is              reduce using rule 297 (EXP -> EXP is not true .)
    not             reduce using rule 297 (EXP -> EXP is not true .)
    as              reduce using rule 297 (EXP -> EXP is not true .)
    like            reduce using rule 297 (EXP -> EXP is not true .)
    isnull          reduce using rule 297 (EXP -> EXP is not true .)
    notnull         reduce using rule 297 (EXP -> EXP is not true .)
    cadenaString    reduce using rule 297 (EXP -> EXP is not true .)
    id              reduce using rule 297 (EXP -> EXP is not true .)
    cadena          reduce using rule 297 (EXP -> EXP is not true .)
    in              reduce using rule 297 (EXP -> EXP is not true .)
    then            reduce using rule 297 (EXP -> EXP is not true .)
    when            reduce using rule 297 (EXP -> EXP is not true .)
    parc            reduce using rule 297 (EXP -> EXP is not true .)
    constraint      reduce using rule 297 (EXP -> EXP is not true .)
    primary         reduce using rule 297 (EXP -> EXP is not true .)
    null            reduce using rule 297 (EXP -> EXP is not true .)
    unique          reduce using rule 297 (EXP -> EXP is not true .)
    references      reduce using rule 297 (EXP -> EXP is not true .)
    check           reduce using rule 297 (EXP -> EXP is not true .)
    default         reduce using rule 297 (EXP -> EXP is not true .)
    asc             reduce using rule 297 (EXP -> EXP is not true .)
    desc            reduce using rule 297 (EXP -> EXP is not true .)


state 340

    (298) EXP -> EXP is not false .

    r_from          reduce using rule 298 (EXP -> EXP is not false .)
    coma            reduce using rule 298 (EXP -> EXP is not false .)
    where           reduce using rule 298 (EXP -> EXP is not false .)
    group           reduce using rule 298 (EXP -> EXP is not false .)
    having          reduce using rule 298 (EXP -> EXP is not false .)
    union           reduce using rule 298 (EXP -> EXP is not false .)
    intersect       reduce using rule 298 (EXP -> EXP is not false .)
    except          reduce using rule 298 (EXP -> EXP is not false .)
    order           reduce using rule 298 (EXP -> EXP is not false .)
    limit           reduce using rule 298 (EXP -> EXP is not false .)
    offset          reduce using rule 298 (EXP -> EXP is not false .)
    ptcoma          reduce using rule 298 (EXP -> EXP is not false .)
    mas             reduce using rule 298 (EXP -> EXP is not false .)
    menos           reduce using rule 298 (EXP -> EXP is not false .)
    multiplicacion  reduce using rule 298 (EXP -> EXP is not false .)
    division        reduce using rule 298 (EXP -> EXP is not false .)
    modulo          reduce using rule 298 (EXP -> EXP is not false .)
    elevado         reduce using rule 298 (EXP -> EXP is not false .)
    and             reduce using rule 298 (EXP -> EXP is not false .)
    or              reduce using rule 298 (EXP -> EXP is not false .)
    mayor           reduce using rule 298 (EXP -> EXP is not false .)
    menor           reduce using rule 298 (EXP -> EXP is not false .)
    mayor_igual     reduce using rule 298 (EXP -> EXP is not false .)
    menor_igual     reduce using rule 298 (EXP -> EXP is not false .)
    igual           reduce using rule 298 (EXP -> EXP is not false .)
    diferente1      reduce using rule 298 (EXP -> EXP is not false .)
    diferente2      reduce using rule 298 (EXP -> EXP is not false .)
    between         reduce using rule 298 (EXP -> EXP is not false .)
    is              reduce using rule 298 (EXP -> EXP is not false .)
    not             reduce using rule 298 (EXP -> EXP is not false .)
    as              reduce using rule 298 (EXP -> EXP is not false .)
    like            reduce using rule 298 (EXP -> EXP is not false .)
    isnull          reduce using rule 298 (EXP -> EXP is not false .)
    notnull         reduce using rule 298 (EXP -> EXP is not false .)
    cadenaString    reduce using rule 298 (EXP -> EXP is not false .)
    id              reduce using rule 298 (EXP -> EXP is not false .)
    cadena          reduce using rule 298 (EXP -> EXP is not false .)
    in              reduce using rule 298 (EXP -> EXP is not false .)
    then            reduce using rule 298 (EXP -> EXP is not false .)
    when            reduce using rule 298 (EXP -> EXP is not false .)
    parc            reduce using rule 298 (EXP -> EXP is not false .)
    constraint      reduce using rule 298 (EXP -> EXP is not false .)
    primary         reduce using rule 298 (EXP -> EXP is not false .)
    null            reduce using rule 298 (EXP -> EXP is not false .)
    unique          reduce using rule 298 (EXP -> EXP is not false .)
    references      reduce using rule 298 (EXP -> EXP is not false .)
    check           reduce using rule 298 (EXP -> EXP is not false .)
    default         reduce using rule 298 (EXP -> EXP is not false .)
    asc             reduce using rule 298 (EXP -> EXP is not false .)
    desc            reduce using rule 298 (EXP -> EXP is not false .)


state 341

    (299) EXP -> EXP is not unknown .

    r_from          reduce using rule 299 (EXP -> EXP is not unknown .)
    coma            reduce using rule 299 (EXP -> EXP is not unknown .)
    where           reduce using rule 299 (EXP -> EXP is not unknown .)
    group           reduce using rule 299 (EXP -> EXP is not unknown .)
    having          reduce using rule 299 (EXP -> EXP is not unknown .)
    union           reduce using rule 299 (EXP -> EXP is not unknown .)
    intersect       reduce using rule 299 (EXP -> EXP is not unknown .)
    except          reduce using rule 299 (EXP -> EXP is not unknown .)
    order           reduce using rule 299 (EXP -> EXP is not unknown .)
    limit           reduce using rule 299 (EXP -> EXP is not unknown .)
    offset          reduce using rule 299 (EXP -> EXP is not unknown .)
    ptcoma          reduce using rule 299 (EXP -> EXP is not unknown .)
    mas             reduce using rule 299 (EXP -> EXP is not unknown .)
    menos           reduce using rule 299 (EXP -> EXP is not unknown .)
    multiplicacion  reduce using rule 299 (EXP -> EXP is not unknown .)
    division        reduce using rule 299 (EXP -> EXP is not unknown .)
    modulo          reduce using rule 299 (EXP -> EXP is not unknown .)
    elevado         reduce using rule 299 (EXP -> EXP is not unknown .)
    and             reduce using rule 299 (EXP -> EXP is not unknown .)
    or              reduce using rule 299 (EXP -> EXP is not unknown .)
    mayor           reduce using rule 299 (EXP -> EXP is not unknown .)
    menor           reduce using rule 299 (EXP -> EXP is not unknown .)
    mayor_igual     reduce using rule 299 (EXP -> EXP is not unknown .)
    menor_igual     reduce using rule 299 (EXP -> EXP is not unknown .)
    igual           reduce using rule 299 (EXP -> EXP is not unknown .)
    diferente1      reduce using rule 299 (EXP -> EXP is not unknown .)
    diferente2      reduce using rule 299 (EXP -> EXP is not unknown .)
    between         reduce using rule 299 (EXP -> EXP is not unknown .)
    is              reduce using rule 299 (EXP -> EXP is not unknown .)
    not             reduce using rule 299 (EXP -> EXP is not unknown .)
    as              reduce using rule 299 (EXP -> EXP is not unknown .)
    like            reduce using rule 299 (EXP -> EXP is not unknown .)
    isnull          reduce using rule 299 (EXP -> EXP is not unknown .)
    notnull         reduce using rule 299 (EXP -> EXP is not unknown .)
    cadenaString    reduce using rule 299 (EXP -> EXP is not unknown .)
    id              reduce using rule 299 (EXP -> EXP is not unknown .)
    cadena          reduce using rule 299 (EXP -> EXP is not unknown .)
    in              reduce using rule 299 (EXP -> EXP is not unknown .)
    then            reduce using rule 299 (EXP -> EXP is not unknown .)
    when            reduce using rule 299 (EXP -> EXP is not unknown .)
    parc            reduce using rule 299 (EXP -> EXP is not unknown .)
    constraint      reduce using rule 299 (EXP -> EXP is not unknown .)
    primary         reduce using rule 299 (EXP -> EXP is not unknown .)
    null            reduce using rule 299 (EXP -> EXP is not unknown .)
    unique          reduce using rule 299 (EXP -> EXP is not unknown .)
    references      reduce using rule 299 (EXP -> EXP is not unknown .)
    check           reduce using rule 299 (EXP -> EXP is not unknown .)
    default         reduce using rule 299 (EXP -> EXP is not unknown .)
    asc             reduce using rule 299 (EXP -> EXP is not unknown .)
    desc            reduce using rule 299 (EXP -> EXP is not unknown .)


state 342

    (321) EXP -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 462


state 343

    (322) EXP -> EXP is distinct r_from . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 463
    SELECT                         shift and go to state 72

state 344

    (300) EXP -> EXP not like cadena .

    r_from          reduce using rule 300 (EXP -> EXP not like cadena .)
    coma            reduce using rule 300 (EXP -> EXP not like cadena .)
    where           reduce using rule 300 (EXP -> EXP not like cadena .)
    group           reduce using rule 300 (EXP -> EXP not like cadena .)
    having          reduce using rule 300 (EXP -> EXP not like cadena .)
    union           reduce using rule 300 (EXP -> EXP not like cadena .)
    intersect       reduce using rule 300 (EXP -> EXP not like cadena .)
    except          reduce using rule 300 (EXP -> EXP not like cadena .)
    order           reduce using rule 300 (EXP -> EXP not like cadena .)
    limit           reduce using rule 300 (EXP -> EXP not like cadena .)
    offset          reduce using rule 300 (EXP -> EXP not like cadena .)
    ptcoma          reduce using rule 300 (EXP -> EXP not like cadena .)
    mas             reduce using rule 300 (EXP -> EXP not like cadena .)
    menos           reduce using rule 300 (EXP -> EXP not like cadena .)
    multiplicacion  reduce using rule 300 (EXP -> EXP not like cadena .)
    division        reduce using rule 300 (EXP -> EXP not like cadena .)
    modulo          reduce using rule 300 (EXP -> EXP not like cadena .)
    elevado         reduce using rule 300 (EXP -> EXP not like cadena .)
    and             reduce using rule 300 (EXP -> EXP not like cadena .)
    or              reduce using rule 300 (EXP -> EXP not like cadena .)
    mayor           reduce using rule 300 (EXP -> EXP not like cadena .)
    menor           reduce using rule 300 (EXP -> EXP not like cadena .)
    mayor_igual     reduce using rule 300 (EXP -> EXP not like cadena .)
    menor_igual     reduce using rule 300 (EXP -> EXP not like cadena .)
    igual           reduce using rule 300 (EXP -> EXP not like cadena .)
    diferente1      reduce using rule 300 (EXP -> EXP not like cadena .)
    diferente2      reduce using rule 300 (EXP -> EXP not like cadena .)
    between         reduce using rule 300 (EXP -> EXP not like cadena .)
    is              reduce using rule 300 (EXP -> EXP not like cadena .)
    not             reduce using rule 300 (EXP -> EXP not like cadena .)
    as              reduce using rule 300 (EXP -> EXP not like cadena .)
    like            reduce using rule 300 (EXP -> EXP not like cadena .)
    isnull          reduce using rule 300 (EXP -> EXP not like cadena .)
    notnull         reduce using rule 300 (EXP -> EXP not like cadena .)
    cadenaString    reduce using rule 300 (EXP -> EXP not like cadena .)
    id              reduce using rule 300 (EXP -> EXP not like cadena .)
    cadena          reduce using rule 300 (EXP -> EXP not like cadena .)
    in              reduce using rule 300 (EXP -> EXP not like cadena .)
    then            reduce using rule 300 (EXP -> EXP not like cadena .)
    when            reduce using rule 300 (EXP -> EXP not like cadena .)
    parc            reduce using rule 300 (EXP -> EXP not like cadena .)
    constraint      reduce using rule 300 (EXP -> EXP not like cadena .)
    primary         reduce using rule 300 (EXP -> EXP not like cadena .)
    null            reduce using rule 300 (EXP -> EXP not like cadena .)
    unique          reduce using rule 300 (EXP -> EXP not like cadena .)
    references      reduce using rule 300 (EXP -> EXP not like cadena .)
    check           reduce using rule 300 (EXP -> EXP not like cadena .)
    default         reduce using rule 300 (EXP -> EXP not like cadena .)
    asc             reduce using rule 300 (EXP -> EXP not like cadena .)
    desc            reduce using rule 300 (EXP -> EXP not like cadena .)


state 345

    (317) EXP -> EXP not between EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 317 (EXP -> EXP not between EXP .)
    coma            reduce using rule 317 (EXP -> EXP not between EXP .)
    where           reduce using rule 317 (EXP -> EXP not between EXP .)
    group           reduce using rule 317 (EXP -> EXP not between EXP .)
    having          reduce using rule 317 (EXP -> EXP not between EXP .)
    union           reduce using rule 317 (EXP -> EXP not between EXP .)
    intersect       reduce using rule 317 (EXP -> EXP not between EXP .)
    except          reduce using rule 317 (EXP -> EXP not between EXP .)
    order           reduce using rule 317 (EXP -> EXP not between EXP .)
    limit           reduce using rule 317 (EXP -> EXP not between EXP .)
    offset          reduce using rule 317 (EXP -> EXP not between EXP .)
    ptcoma          reduce using rule 317 (EXP -> EXP not between EXP .)
    and             reduce using rule 317 (EXP -> EXP not between EXP .)
    or              reduce using rule 317 (EXP -> EXP not between EXP .)
    between         reduce using rule 317 (EXP -> EXP not between EXP .)
    is              reduce using rule 317 (EXP -> EXP not between EXP .)
    not             reduce using rule 317 (EXP -> EXP not between EXP .)
    as              reduce using rule 317 (EXP -> EXP not between EXP .)
    like            reduce using rule 317 (EXP -> EXP not between EXP .)
    isnull          reduce using rule 317 (EXP -> EXP not between EXP .)
    notnull         reduce using rule 317 (EXP -> EXP not between EXP .)
    cadenaString    reduce using rule 317 (EXP -> EXP not between EXP .)
    id              reduce using rule 317 (EXP -> EXP not between EXP .)
    cadena          reduce using rule 317 (EXP -> EXP not between EXP .)
    in              reduce using rule 317 (EXP -> EXP not between EXP .)
    then            reduce using rule 317 (EXP -> EXP not between EXP .)
    when            reduce using rule 317 (EXP -> EXP not between EXP .)
    parc            reduce using rule 317 (EXP -> EXP not between EXP .)
    constraint      reduce using rule 317 (EXP -> EXP not between EXP .)
    primary         reduce using rule 317 (EXP -> EXP not between EXP .)
    null            reduce using rule 317 (EXP -> EXP not between EXP .)
    unique          reduce using rule 317 (EXP -> EXP not between EXP .)
    references      reduce using rule 317 (EXP -> EXP not between EXP .)
    check           reduce using rule 317 (EXP -> EXP not between EXP .)
    default         reduce using rule 317 (EXP -> EXP not between EXP .)
    asc             reduce using rule 317 (EXP -> EXP not between EXP .)
    desc            reduce using rule 317 (EXP -> EXP not between EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140

  ! mas             [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! menos           [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! multiplicacion  [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! division        [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! modulo          [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! elevado         [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! mayor           [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! menor           [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! mayor_igual     [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! menor_igual     [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! igual           [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! diferente1      [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! diferente2      [ reduce using rule 317 (EXP -> EXP not between EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 346

    (323) EXP -> EXP not between symetric . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 464
    SELECT                         shift and go to state 72

state 347

    (320) EXP -> EXP not in para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 60
    LEXP                           shift and go to state 465
    SELECT                         shift and go to state 72

state 348

    (319) EXP -> EXP in para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 466
    coma            shift and go to state 125


state 349

    (235) TIPO -> decimal para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 467
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 350

    (236) TIPO -> numeric para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 468
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 351

    (237) TIPO -> varchar para . int parc

    int             shift and go to state 469


state 352

    (238) TIPO -> timestamp para . int parc
    (247) TIPO -> timestamp para . int parc without time zone
    (248) TIPO -> timestamp para . int parc with time zone

    int             shift and go to state 470


state 353

    (270) TIPO -> timestamp without . time zone

    time            shift and go to state 471


state 354

    (271) TIPO -> timestamp with . time zone

    time            shift and go to state 472


state 355

    (239) TIPO -> character para . int parc

    int             shift and go to state 473


state 356

    (243) TIPO -> character varying . para int parc

    para            shift and go to state 474


state 357

    (240) TIPO -> interval para . int parc
    (251) TIPO -> interval para . int parc cadena

    int             shift and go to state 475


state 358

    (244) TIPO -> interval cadena .

    r_from          reduce using rule 244 (TIPO -> interval cadena .)
    coma            reduce using rule 244 (TIPO -> interval cadena .)
    where           reduce using rule 244 (TIPO -> interval cadena .)
    group           reduce using rule 244 (TIPO -> interval cadena .)
    having          reduce using rule 244 (TIPO -> interval cadena .)
    union           reduce using rule 244 (TIPO -> interval cadena .)
    intersect       reduce using rule 244 (TIPO -> interval cadena .)
    except          reduce using rule 244 (TIPO -> interval cadena .)
    order           reduce using rule 244 (TIPO -> interval cadena .)
    limit           reduce using rule 244 (TIPO -> interval cadena .)
    offset          reduce using rule 244 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 244 (TIPO -> interval cadena .)
    mas             reduce using rule 244 (TIPO -> interval cadena .)
    menos           reduce using rule 244 (TIPO -> interval cadena .)
    multiplicacion  reduce using rule 244 (TIPO -> interval cadena .)
    division        reduce using rule 244 (TIPO -> interval cadena .)
    modulo          reduce using rule 244 (TIPO -> interval cadena .)
    elevado         reduce using rule 244 (TIPO -> interval cadena .)
    and             reduce using rule 244 (TIPO -> interval cadena .)
    or              reduce using rule 244 (TIPO -> interval cadena .)
    mayor           reduce using rule 244 (TIPO -> interval cadena .)
    menor           reduce using rule 244 (TIPO -> interval cadena .)
    mayor_igual     reduce using rule 244 (TIPO -> interval cadena .)
    menor_igual     reduce using rule 244 (TIPO -> interval cadena .)
    igual           reduce using rule 244 (TIPO -> interval cadena .)
    diferente1      reduce using rule 244 (TIPO -> interval cadena .)
    diferente2      reduce using rule 244 (TIPO -> interval cadena .)
    between         reduce using rule 244 (TIPO -> interval cadena .)
    is              reduce using rule 244 (TIPO -> interval cadena .)
    not             reduce using rule 244 (TIPO -> interval cadena .)
    as              reduce using rule 244 (TIPO -> interval cadena .)
    like            reduce using rule 244 (TIPO -> interval cadena .)
    isnull          reduce using rule 244 (TIPO -> interval cadena .)
    notnull         reduce using rule 244 (TIPO -> interval cadena .)
    cadenaString    reduce using rule 244 (TIPO -> interval cadena .)
    id              reduce using rule 244 (TIPO -> interval cadena .)
    cadena          reduce using rule 244 (TIPO -> interval cadena .)
    in              reduce using rule 244 (TIPO -> interval cadena .)
    then            reduce using rule 244 (TIPO -> interval cadena .)
    when            reduce using rule 244 (TIPO -> interval cadena .)
    parc            reduce using rule 244 (TIPO -> interval cadena .)
    constraint      reduce using rule 244 (TIPO -> interval cadena .)
    primary         reduce using rule 244 (TIPO -> interval cadena .)
    null            reduce using rule 244 (TIPO -> interval cadena .)
    unique          reduce using rule 244 (TIPO -> interval cadena .)
    references      reduce using rule 244 (TIPO -> interval cadena .)
    check           reduce using rule 244 (TIPO -> interval cadena .)
    default         reduce using rule 244 (TIPO -> interval cadena .)
    asc             reduce using rule 244 (TIPO -> interval cadena .)
    desc            reduce using rule 244 (TIPO -> interval cadena .)
    dospuntos       reduce using rule 244 (TIPO -> interval cadena .)
    language        reduce using rule 244 (TIPO -> interval cadena .)
    do              reduce using rule 244 (TIPO -> interval cadena .)


state 359

    (241) TIPO -> char para . int parc

    int             shift and go to state 476


state 360

    (242) TIPO -> time para . int parc
    (249) TIPO -> time para . int parc without time zone
    (250) TIPO -> time para . int parc with time zone

    int             shift and go to state 477


state 361

    (272) TIPO -> time without . time zone

    time            shift and go to state 478


state 362

    (273) TIPO -> time with . time zone

    time            shift and go to state 479


state 363

    (245) TIPO -> id modulo . rowtype

    rowtype         shift and go to state 480


state 364

    (246) TIPO -> idPunto modulo . type

    type            shift and go to state 481


state 365

    (257) TIPO -> double precision .

    r_from          reduce using rule 257 (TIPO -> double precision .)
    coma            reduce using rule 257 (TIPO -> double precision .)
    where           reduce using rule 257 (TIPO -> double precision .)
    group           reduce using rule 257 (TIPO -> double precision .)
    having          reduce using rule 257 (TIPO -> double precision .)
    union           reduce using rule 257 (TIPO -> double precision .)
    intersect       reduce using rule 257 (TIPO -> double precision .)
    except          reduce using rule 257 (TIPO -> double precision .)
    order           reduce using rule 257 (TIPO -> double precision .)
    limit           reduce using rule 257 (TIPO -> double precision .)
    offset          reduce using rule 257 (TIPO -> double precision .)
    ptcoma          reduce using rule 257 (TIPO -> double precision .)
    mas             reduce using rule 257 (TIPO -> double precision .)
    menos           reduce using rule 257 (TIPO -> double precision .)
    multiplicacion  reduce using rule 257 (TIPO -> double precision .)
    division        reduce using rule 257 (TIPO -> double precision .)
    modulo          reduce using rule 257 (TIPO -> double precision .)
    elevado         reduce using rule 257 (TIPO -> double precision .)
    and             reduce using rule 257 (TIPO -> double precision .)
    or              reduce using rule 257 (TIPO -> double precision .)
    mayor           reduce using rule 257 (TIPO -> double precision .)
    menor           reduce using rule 257 (TIPO -> double precision .)
    mayor_igual     reduce using rule 257 (TIPO -> double precision .)
    menor_igual     reduce using rule 257 (TIPO -> double precision .)
    igual           reduce using rule 257 (TIPO -> double precision .)
    diferente1      reduce using rule 257 (TIPO -> double precision .)
    diferente2      reduce using rule 257 (TIPO -> double precision .)
    between         reduce using rule 257 (TIPO -> double precision .)
    is              reduce using rule 257 (TIPO -> double precision .)
    not             reduce using rule 257 (TIPO -> double precision .)
    as              reduce using rule 257 (TIPO -> double precision .)
    like            reduce using rule 257 (TIPO -> double precision .)
    isnull          reduce using rule 257 (TIPO -> double precision .)
    notnull         reduce using rule 257 (TIPO -> double precision .)
    cadenaString    reduce using rule 257 (TIPO -> double precision .)
    id              reduce using rule 257 (TIPO -> double precision .)
    cadena          reduce using rule 257 (TIPO -> double precision .)
    in              reduce using rule 257 (TIPO -> double precision .)
    then            reduce using rule 257 (TIPO -> double precision .)
    when            reduce using rule 257 (TIPO -> double precision .)
    parc            reduce using rule 257 (TIPO -> double precision .)
    constraint      reduce using rule 257 (TIPO -> double precision .)
    primary         reduce using rule 257 (TIPO -> double precision .)
    null            reduce using rule 257 (TIPO -> double precision .)
    unique          reduce using rule 257 (TIPO -> double precision .)
    references      reduce using rule 257 (TIPO -> double precision .)
    check           reduce using rule 257 (TIPO -> double precision .)
    default         reduce using rule 257 (TIPO -> double precision .)
    asc             reduce using rule 257 (TIPO -> double precision .)
    desc            reduce using rule 257 (TIPO -> double precision .)
    dospuntos       reduce using rule 257 (TIPO -> double precision .)
    language        reduce using rule 257 (TIPO -> double precision .)
    do              reduce using rule 257 (TIPO -> double precision .)


state 366

    (327) EXP -> id para LEXP parc .

    r_from          reduce using rule 327 (EXP -> id para LEXP parc .)
    coma            reduce using rule 327 (EXP -> id para LEXP parc .)
    where           reduce using rule 327 (EXP -> id para LEXP parc .)
    group           reduce using rule 327 (EXP -> id para LEXP parc .)
    having          reduce using rule 327 (EXP -> id para LEXP parc .)
    union           reduce using rule 327 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 327 (EXP -> id para LEXP parc .)
    except          reduce using rule 327 (EXP -> id para LEXP parc .)
    order           reduce using rule 327 (EXP -> id para LEXP parc .)
    limit           reduce using rule 327 (EXP -> id para LEXP parc .)
    offset          reduce using rule 327 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 327 (EXP -> id para LEXP parc .)
    mas             reduce using rule 327 (EXP -> id para LEXP parc .)
    menos           reduce using rule 327 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 327 (EXP -> id para LEXP parc .)
    division        reduce using rule 327 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 327 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 327 (EXP -> id para LEXP parc .)
    and             reduce using rule 327 (EXP -> id para LEXP parc .)
    or              reduce using rule 327 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 327 (EXP -> id para LEXP parc .)
    menor           reduce using rule 327 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 327 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 327 (EXP -> id para LEXP parc .)
    igual           reduce using rule 327 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 327 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 327 (EXP -> id para LEXP parc .)
    between         reduce using rule 327 (EXP -> id para LEXP parc .)
    is              reduce using rule 327 (EXP -> id para LEXP parc .)
    not             reduce using rule 327 (EXP -> id para LEXP parc .)
    as              reduce using rule 327 (EXP -> id para LEXP parc .)
    like            reduce using rule 327 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 327 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 327 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 327 (EXP -> id para LEXP parc .)
    id              reduce using rule 327 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 327 (EXP -> id para LEXP parc .)
    in              reduce using rule 327 (EXP -> id para LEXP parc .)
    then            reduce using rule 327 (EXP -> id para LEXP parc .)
    when            reduce using rule 327 (EXP -> id para LEXP parc .)
    parc            reduce using rule 327 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 327 (EXP -> id para LEXP parc .)
    primary         reduce using rule 327 (EXP -> id para LEXP parc .)
    null            reduce using rule 327 (EXP -> id para LEXP parc .)
    unique          reduce using rule 327 (EXP -> id para LEXP parc .)
    references      reduce using rule 327 (EXP -> id para LEXP parc .)
    check           reduce using rule 327 (EXP -> id para LEXP parc .)
    default         reduce using rule 327 (EXP -> id para LEXP parc .)
    asc             reduce using rule 327 (EXP -> id para LEXP parc .)
    desc            reduce using rule 327 (EXP -> id para LEXP parc .)


state 367

    (328) EXP -> any para LEXP parc .

    r_from          reduce using rule 328 (EXP -> any para LEXP parc .)
    coma            reduce using rule 328 (EXP -> any para LEXP parc .)
    where           reduce using rule 328 (EXP -> any para LEXP parc .)
    group           reduce using rule 328 (EXP -> any para LEXP parc .)
    having          reduce using rule 328 (EXP -> any para LEXP parc .)
    union           reduce using rule 328 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 328 (EXP -> any para LEXP parc .)
    except          reduce using rule 328 (EXP -> any para LEXP parc .)
    order           reduce using rule 328 (EXP -> any para LEXP parc .)
    limit           reduce using rule 328 (EXP -> any para LEXP parc .)
    offset          reduce using rule 328 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 328 (EXP -> any para LEXP parc .)
    mas             reduce using rule 328 (EXP -> any para LEXP parc .)
    menos           reduce using rule 328 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 328 (EXP -> any para LEXP parc .)
    division        reduce using rule 328 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 328 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 328 (EXP -> any para LEXP parc .)
    and             reduce using rule 328 (EXP -> any para LEXP parc .)
    or              reduce using rule 328 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 328 (EXP -> any para LEXP parc .)
    menor           reduce using rule 328 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 328 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 328 (EXP -> any para LEXP parc .)
    igual           reduce using rule 328 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 328 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 328 (EXP -> any para LEXP parc .)
    between         reduce using rule 328 (EXP -> any para LEXP parc .)
    is              reduce using rule 328 (EXP -> any para LEXP parc .)
    not             reduce using rule 328 (EXP -> any para LEXP parc .)
    as              reduce using rule 328 (EXP -> any para LEXP parc .)
    like            reduce using rule 328 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 328 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 328 (EXP -> any para LEXP parc .)
    cadenaString    reduce using rule 328 (EXP -> any para LEXP parc .)
    id              reduce using rule 328 (EXP -> any para LEXP parc .)
    cadena          reduce using rule 328 (EXP -> any para LEXP parc .)
    in              reduce using rule 328 (EXP -> any para LEXP parc .)
    then            reduce using rule 328 (EXP -> any para LEXP parc .)
    when            reduce using rule 328 (EXP -> any para LEXP parc .)
    parc            reduce using rule 328 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 328 (EXP -> any para LEXP parc .)
    primary         reduce using rule 328 (EXP -> any para LEXP parc .)
    null            reduce using rule 328 (EXP -> any para LEXP parc .)
    unique          reduce using rule 328 (EXP -> any para LEXP parc .)
    references      reduce using rule 328 (EXP -> any para LEXP parc .)
    check           reduce using rule 328 (EXP -> any para LEXP parc .)
    default         reduce using rule 328 (EXP -> any para LEXP parc .)
    asc             reduce using rule 328 (EXP -> any para LEXP parc .)
    desc            reduce using rule 328 (EXP -> any para LEXP parc .)


state 368

    (329) EXP -> all para LEXP parc .

    r_from          reduce using rule 329 (EXP -> all para LEXP parc .)
    coma            reduce using rule 329 (EXP -> all para LEXP parc .)
    where           reduce using rule 329 (EXP -> all para LEXP parc .)
    group           reduce using rule 329 (EXP -> all para LEXP parc .)
    having          reduce using rule 329 (EXP -> all para LEXP parc .)
    union           reduce using rule 329 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 329 (EXP -> all para LEXP parc .)
    except          reduce using rule 329 (EXP -> all para LEXP parc .)
    order           reduce using rule 329 (EXP -> all para LEXP parc .)
    limit           reduce using rule 329 (EXP -> all para LEXP parc .)
    offset          reduce using rule 329 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 329 (EXP -> all para LEXP parc .)
    mas             reduce using rule 329 (EXP -> all para LEXP parc .)
    menos           reduce using rule 329 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 329 (EXP -> all para LEXP parc .)
    division        reduce using rule 329 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 329 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 329 (EXP -> all para LEXP parc .)
    and             reduce using rule 329 (EXP -> all para LEXP parc .)
    or              reduce using rule 329 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 329 (EXP -> all para LEXP parc .)
    menor           reduce using rule 329 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 329 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 329 (EXP -> all para LEXP parc .)
    igual           reduce using rule 329 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 329 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 329 (EXP -> all para LEXP parc .)
    between         reduce using rule 329 (EXP -> all para LEXP parc .)
    is              reduce using rule 329 (EXP -> all para LEXP parc .)
    not             reduce using rule 329 (EXP -> all para LEXP parc .)
    as              reduce using rule 329 (EXP -> all para LEXP parc .)
    like            reduce using rule 329 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 329 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 329 (EXP -> all para LEXP parc .)
    cadenaString    reduce using rule 329 (EXP -> all para LEXP parc .)
    id              reduce using rule 329 (EXP -> all para LEXP parc .)
    cadena          reduce using rule 329 (EXP -> all para LEXP parc .)
    in              reduce using rule 329 (EXP -> all para LEXP parc .)
    then            reduce using rule 329 (EXP -> all para LEXP parc .)
    when            reduce using rule 329 (EXP -> all para LEXP parc .)
    parc            reduce using rule 329 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 329 (EXP -> all para LEXP parc .)
    primary         reduce using rule 329 (EXP -> all para LEXP parc .)
    null            reduce using rule 329 (EXP -> all para LEXP parc .)
    unique          reduce using rule 329 (EXP -> all para LEXP parc .)
    references      reduce using rule 329 (EXP -> all para LEXP parc .)
    check           reduce using rule 329 (EXP -> all para LEXP parc .)
    default         reduce using rule 329 (EXP -> all para LEXP parc .)
    asc             reduce using rule 329 (EXP -> all para LEXP parc .)
    desc            reduce using rule 329 (EXP -> all para LEXP parc .)


state 369

    (330) EXP -> some para LEXP parc .

    r_from          reduce using rule 330 (EXP -> some para LEXP parc .)
    coma            reduce using rule 330 (EXP -> some para LEXP parc .)
    where           reduce using rule 330 (EXP -> some para LEXP parc .)
    group           reduce using rule 330 (EXP -> some para LEXP parc .)
    having          reduce using rule 330 (EXP -> some para LEXP parc .)
    union           reduce using rule 330 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 330 (EXP -> some para LEXP parc .)
    except          reduce using rule 330 (EXP -> some para LEXP parc .)
    order           reduce using rule 330 (EXP -> some para LEXP parc .)
    limit           reduce using rule 330 (EXP -> some para LEXP parc .)
    offset          reduce using rule 330 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 330 (EXP -> some para LEXP parc .)
    mas             reduce using rule 330 (EXP -> some para LEXP parc .)
    menos           reduce using rule 330 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 330 (EXP -> some para LEXP parc .)
    division        reduce using rule 330 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 330 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 330 (EXP -> some para LEXP parc .)
    and             reduce using rule 330 (EXP -> some para LEXP parc .)
    or              reduce using rule 330 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 330 (EXP -> some para LEXP parc .)
    menor           reduce using rule 330 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 330 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 330 (EXP -> some para LEXP parc .)
    igual           reduce using rule 330 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 330 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 330 (EXP -> some para LEXP parc .)
    between         reduce using rule 330 (EXP -> some para LEXP parc .)
    is              reduce using rule 330 (EXP -> some para LEXP parc .)
    not             reduce using rule 330 (EXP -> some para LEXP parc .)
    as              reduce using rule 330 (EXP -> some para LEXP parc .)
    like            reduce using rule 330 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 330 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 330 (EXP -> some para LEXP parc .)
    cadenaString    reduce using rule 330 (EXP -> some para LEXP parc .)
    id              reduce using rule 330 (EXP -> some para LEXP parc .)
    cadena          reduce using rule 330 (EXP -> some para LEXP parc .)
    in              reduce using rule 330 (EXP -> some para LEXP parc .)
    then            reduce using rule 330 (EXP -> some para LEXP parc .)
    when            reduce using rule 330 (EXP -> some para LEXP parc .)
    parc            reduce using rule 330 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 330 (EXP -> some para LEXP parc .)
    primary         reduce using rule 330 (EXP -> some para LEXP parc .)
    null            reduce using rule 330 (EXP -> some para LEXP parc .)
    unique          reduce using rule 330 (EXP -> some para LEXP parc .)
    references      reduce using rule 330 (EXP -> some para LEXP parc .)
    check           reduce using rule 330 (EXP -> some para LEXP parc .)
    default         reduce using rule 330 (EXP -> some para LEXP parc .)
    asc             reduce using rule 330 (EXP -> some para LEXP parc .)
    desc            reduce using rule 330 (EXP -> some para LEXP parc .)


state 370

    (331) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 482


state 371

    (173) COLDEF -> id . TIPO
    (174) COLDEF -> id . TIPO LOPCOLUMN
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 483

state 372

    (167) CREATETABLE -> create table id para LDEF . parc ptcoma
    (168) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (169) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 484
    coma            shift and go to state 485


state 373

    (170) LDEF -> COLDEF .

    parc            reduce using rule 170 (LDEF -> COLDEF .)
    coma            reduce using rule 170 (LDEF -> COLDEF .)


state 374

    (171) COLDEF -> OPCONST .

    parc            reduce using rule 171 (COLDEF -> OPCONST .)
    coma            reduce using rule 171 (COLDEF -> OPCONST .)


state 375

    (172) COLDEF -> constraint . id OPCONST

    id              shift and go to state 486


state 376

    (186) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 487


state 377

    (187) OPCONST -> foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 488


state 378

    (188) OPCONST -> check . para CONDCHECK parc

    para            shift and go to state 489


state 379

    (189) OPCONST -> unique . para LEXP parc

    para            shift and go to state 490


state 380

    (198) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 491


state 381

    (150) CREATEDB -> create RD if not exist . id
    (151) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 492


state 382

    (156) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 156 (OPCCDB -> PROPIETARIO MODO .)


state 383

    (159) PROPIETARIO -> owner igual . id
    (161) PROPIETARIO -> owner igual . cadena
    (163) PROPIETARIO -> owner igual . cadenaString

    id              shift and go to state 493
    cadena          shift and go to state 494
    cadenaString    shift and go to state 495


state 384

    (160) PROPIETARIO -> owner id .

    mode            reduce using rule 160 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 160 (PROPIETARIO -> owner id .)


state 385

    (162) PROPIETARIO -> owner cadena .

    mode            reduce using rule 162 (PROPIETARIO -> owner cadena .)
    ptcoma          reduce using rule 162 (PROPIETARIO -> owner cadena .)


state 386

    (164) PROPIETARIO -> owner cadenaString .

    mode            reduce using rule 164 (PROPIETARIO -> owner cadenaString .)
    ptcoma          reduce using rule 164 (PROPIETARIO -> owner cadenaString .)


state 387

    (165) MODO -> mode igual . int

    int             shift and go to state 496


state 388

    (166) MODO -> mode int .

    ptcoma          reduce using rule 166 (MODO -> mode int .)


state 389

    (50) CREATEINDEX -> create index id on id . para LEXP parc
    (52) CREATEINDEX -> create index id on id . using hash para LEXP parc
    (53) CREATEINDEX -> create index id on id . para id ORDEN parc
    (54) CREATEINDEX -> create index id on id . para id id ORDEN parc
    (55) CREATEINDEX -> create index id on id . para id id parc

    para            shift and go to state 497
    using           shift and go to state 498


state 390

    (51) CREATEINDEX -> create unique index id on . id para LEXP parc

    id              shift and go to state 499


state 391

    (46) LPARAM -> id . TIPO
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 500

state 392

    (35) PROCEDIMIENTOS -> create procedure id para LPARAM . parc LENGUAJE LCONTENIDOP
    (36) PROCEDIMIENTOS -> create procedure id para LPARAM . parc LCONTENIDOP LENGUAJE
    (43) LPARAM -> LPARAM . coma inout id TIPO
    (44) LPARAM -> LPARAM . coma id TIPO

    parc            shift and go to state 501
    coma            shift and go to state 502


state 393

    (37) PROCEDIMIENTOS -> create procedure id para parc . LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create procedure id para parc . LCONTENIDOP LENGUAJE
    (47) LENGUAJE -> . language plpgsql
    (48) LENGUAJE -> . language plpgsql ptcoma
    (39) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (40) LCONTENIDOP -> . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 505
    as              shift and go to state 507
    do              shift and go to state 508

    LENGUAJE                       shift and go to state 503
    LCONTENIDOP                    shift and go to state 504
    CONTENIDOP                     shift and go to state 506

state 394

    (45) LPARAM -> inout . id TIPO

    id              shift and go to state 509


state 395

    (26) FUNCIONES -> create function id para LPARAM . parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM . parc RETURNP LCONTENIDOP LENGUAJE
    (43) LPARAM -> LPARAM . coma inout id TIPO
    (44) LPARAM -> LPARAM . coma id TIPO

    parc            shift and go to state 510
    coma            shift and go to state 502


state 396

    (28) FUNCIONES -> create function id para parc . RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id para parc . RETURNP LCONTENIDOP LENGUAJE
    (32) RETURNP -> . returns TIPO

    returns         shift and go to state 512

    RETURNP                        shift and go to state 511

state 397

    (229) LCAMPOS -> id igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 513
    SELECT                         shift and go to state 72

state 398

    (227) UPDATE -> update id set LCAMPOS where . LEXP
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 514
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 399

    (228) LCAMPOS -> LCAMPOS coma . id igual EXP

    id              shift and go to state 515


state 400

    (125) RO -> rename to . id

    id              shift and go to state 516


state 401

    (126) RO -> owner to . id

    id              shift and go to state 517


state 402

    (140) OP -> alter column . id set not null
    (141) OP -> alter column . id set null
    (146) OP -> alter column . id type TIPO

    id              shift and go to state 518


state 403

    (131) LOP -> LOP coma . OP
    (133) OP -> . add column id TIPO
    (134) OP -> . add check para CONDCHECK parc
    (135) OP -> . add constraint id check para CONDCHECK parc
    (136) OP -> . add constraint id unique para LEXP parc
    (137) OP -> . add unique para LEXP parc
    (138) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (139) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (140) OP -> . alter column id set not null
    (141) OP -> . alter column id set null
    (142) OP -> . drop constraint id
    (143) OP -> . drop column LEXP
    (144) OP -> . drop check id
    (145) OP -> . rename column id to id
    (146) OP -> . alter column id type TIPO

    add             shift and go to state 293
    alter           shift and go to state 290
    drop            shift and go to state 294
    rename          shift and go to state 295

    OP                             shift and go to state 519

state 404

    (133) OP -> add column . id TIPO

    id              shift and go to state 520


state 405

    (134) OP -> add check . para CONDCHECK parc

    para            shift and go to state 521


state 406

    (135) OP -> add constraint . id check para CONDCHECK parc
    (136) OP -> add constraint . id unique para LEXP parc
    (139) OP -> add constraint . id foreign key para LEXP parc references id para LEXP parc

    id              shift and go to state 522


state 407

    (137) OP -> add unique . para LEXP parc

    para            shift and go to state 523


state 408

    (138) OP -> add foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 524


state 409

    (142) OP -> drop constraint . id

    id              shift and go to state 525


state 410

    (143) OP -> drop column . LEXP
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 526
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 411

    (144) OP -> drop check . id

    id              shift and go to state 527


state 412

    (145) OP -> rename column . id to id

    id              shift and go to state 528


state 413

    (127) ALTER -> alter index id alter EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 127 (ALTER -> alter index id alter EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 414

    (129) ALTER -> alter index id alter column . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 529
    SELECT                         shift and go to state 72

state 415

    (128) ALTER -> alter index if exist id . alter EXP
    (130) ALTER -> alter index if exist id . alter column EXP

    alter           shift and go to state 530


state 416

    (76) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF . ELSEF end if
    (78) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF . end if
    (80) LELIF -> LELIF . elsif EXP then LISTACONTENIDO
    (82) ELSEF -> . else LISTACONTENIDO

    end             shift and go to state 532
    elsif           shift and go to state 533
    else            shift and go to state 192

    ELSEF                          shift and go to state 531

state 417

    (77) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF . end if

    end             shift and go to state 534


state 418

    (79) CONDICIONIF -> if EXP then LISTACONTENIDO end . if

    if              shift and go to state 535


state 419

    (87) LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .

    end             reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    elsif           reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    else            reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    declare         reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    id              reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    if              reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    raise           reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    begin           reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    execute         reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    return          reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    insert          reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    select          reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    update          reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    delete          reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    case            reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    when            reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    dolarn          reduce using rule 87 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)


state 420

    (81) LELIF -> elsif . EXP then LISTACONTENIDO
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 536
    SELECT                         shift and go to state 72

state 421

    (89) CONTENIDO -> ASIGNACION ptcoma .

    end             reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    elsif           reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    else            reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    declare         reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    id              reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    if              reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    raise           reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    begin           reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    execute         reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    return          reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    insert          reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    select          reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    update          reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    delete          reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    case            reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    when            reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)
    dolarn          reduce using rule 89 (CONTENIDO -> ASIGNACION ptcoma .)


state 422

    (90) CONTENIDO -> CONDICIONIF ptcoma .

    end             reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    elsif           reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    else            reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    declare         reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    id              reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    if              reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    raise           reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    begin           reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    execute         reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    return          reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    insert          reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    select          reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    update          reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    delete          reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    case            reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    when            reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)
    dolarn          reduce using rule 90 (CONTENIDO -> CONDICIONIF ptcoma .)


state 423

    (91) CONTENIDO -> RAISE ptcoma .

    end             reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    elsif           reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    else            reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    declare         reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    id              reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    if              reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    raise           reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    begin           reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    execute         reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    return          reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    insert          reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    select          reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    update          reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    delete          reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    case            reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    when            reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)
    dolarn          reduce using rule 91 (CONTENIDO -> RAISE ptcoma .)


state 424

    (92) CONTENIDO -> BEGINEND ptcoma .

    end             reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    elsif           reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    else            reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    declare         reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    id              reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    if              reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    raise           reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    begin           reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    execute         reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    return          reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    insert          reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    select          reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    update          reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    delete          reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    case            reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    when            reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)
    dolarn          reduce using rule 92 (CONTENIDO -> BEGINEND ptcoma .)


state 425

    (93) CONTENIDO -> CALLPROCEDURE ptcoma .

    end             reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    elsif           reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    else            reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    declare         reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    id              reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    if              reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    raise           reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    begin           reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    execute         reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    return          reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    insert          reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    select          reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    update          reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    delete          reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    case            reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    when            reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    dolarn          reduce using rule 93 (CONTENIDO -> CALLPROCEDURE ptcoma .)


state 426

    (94) CONTENIDO -> RETURN ptcoma .

    end             reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    elsif           reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    else            reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    declare         reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    id              reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    if              reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    raise           reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    begin           reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    execute         reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    return          reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    insert          reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    select          reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    update          reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    delete          reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    case            reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    when            reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)
    dolarn          reduce using rule 94 (CONTENIDO -> RETURN ptcoma .)


state 427

    (95) CONTENIDO -> INSERT ptcoma .

    end             reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    elsif           reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    else            reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    declare         reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    id              reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    if              reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    raise           reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    begin           reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    execute         reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    return          reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    insert          reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    select          reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    update          reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    delete          reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    case            reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    when            reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)
    dolarn          reduce using rule 95 (CONTENIDO -> INSERT ptcoma .)


state 428

    (96) CONTENIDO -> SELECT ptcoma .

    end             reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    elsif           reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    else            reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    declare         reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    id              reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    if              reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    raise           reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    begin           reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    execute         reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    return          reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    insert          reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    select          reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    update          reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    delete          reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    case            reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    when            reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)
    dolarn          reduce using rule 96 (CONTENIDO -> SELECT ptcoma .)


state 429

    (97) CONTENIDO -> UPDATE ptcoma .

    end             reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    elsif           reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    else            reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    declare         reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    id              reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    if              reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    raise           reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    begin           reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    execute         reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    return          reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    insert          reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    select          reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    update          reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    delete          reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    case            reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    when            reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)
    dolarn          reduce using rule 97 (CONTENIDO -> UPDATE ptcoma .)


state 430

    (98) CONTENIDO -> DELETE ptcoma .

    end             reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    elsif           reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    else            reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    declare         reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    id              reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    if              reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    raise           reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    begin           reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    execute         reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    return          reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    insert          reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    select          reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    update          reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    delete          reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    case            reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    when            reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)
    dolarn          reduce using rule 98 (CONTENIDO -> DELETE ptcoma .)


state 431

    (99) CONTENIDO -> CASE ptcoma .

    end             reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    elsif           reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    else            reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    declare         reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    id              reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    if              reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    raise           reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    begin           reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    execute         reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    return          reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    insert          reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    select          reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    update          reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    delete          reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    case            reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    when            reduce using rule 99 (CONTENIDO -> CASE ptcoma .)
    dolarn          reduce using rule 99 (CONTENIDO -> CASE ptcoma .)


state 432

    (100) CONTENIDO -> declare LDEC .
    (64) LDEC -> LDEC . DECLARACIONES
    (66) DECLARACIONES -> . id TIPO not null ASIG ptcoma
    (67) DECLARACIONES -> . id TIPO ASIG ptcoma
    (68) DECLARACIONES -> . id constant TIPO not null ASIG ptcoma
    (69) DECLARACIONES -> . id constant TIPO ASIG ptcoma

  ! shift/reduce conflict for id resolved as shift
    end             reduce using rule 100 (CONTENIDO -> declare LDEC .)
    elsif           reduce using rule 100 (CONTENIDO -> declare LDEC .)
    else            reduce using rule 100 (CONTENIDO -> declare LDEC .)
    declare         reduce using rule 100 (CONTENIDO -> declare LDEC .)
    if              reduce using rule 100 (CONTENIDO -> declare LDEC .)
    raise           reduce using rule 100 (CONTENIDO -> declare LDEC .)
    begin           reduce using rule 100 (CONTENIDO -> declare LDEC .)
    execute         reduce using rule 100 (CONTENIDO -> declare LDEC .)
    return          reduce using rule 100 (CONTENIDO -> declare LDEC .)
    insert          reduce using rule 100 (CONTENIDO -> declare LDEC .)
    select          reduce using rule 100 (CONTENIDO -> declare LDEC .)
    update          reduce using rule 100 (CONTENIDO -> declare LDEC .)
    delete          reduce using rule 100 (CONTENIDO -> declare LDEC .)
    case            reduce using rule 100 (CONTENIDO -> declare LDEC .)
    when            reduce using rule 100 (CONTENIDO -> declare LDEC .)
    dolarn          reduce using rule 100 (CONTENIDO -> declare LDEC .)
    id              shift and go to state 434

  ! id              [ reduce using rule 100 (CONTENIDO -> declare LDEC .) ]

    DECLARACIONES                  shift and go to state 537

state 433

    (65) LDEC -> DECLARACIONES .

    id              reduce using rule 65 (LDEC -> DECLARACIONES .)
    end             reduce using rule 65 (LDEC -> DECLARACIONES .)
    elsif           reduce using rule 65 (LDEC -> DECLARACIONES .)
    else            reduce using rule 65 (LDEC -> DECLARACIONES .)
    declare         reduce using rule 65 (LDEC -> DECLARACIONES .)
    if              reduce using rule 65 (LDEC -> DECLARACIONES .)
    raise           reduce using rule 65 (LDEC -> DECLARACIONES .)
    begin           reduce using rule 65 (LDEC -> DECLARACIONES .)
    execute         reduce using rule 65 (LDEC -> DECLARACIONES .)
    return          reduce using rule 65 (LDEC -> DECLARACIONES .)
    insert          reduce using rule 65 (LDEC -> DECLARACIONES .)
    select          reduce using rule 65 (LDEC -> DECLARACIONES .)
    update          reduce using rule 65 (LDEC -> DECLARACIONES .)
    delete          reduce using rule 65 (LDEC -> DECLARACIONES .)
    case            reduce using rule 65 (LDEC -> DECLARACIONES .)
    when            reduce using rule 65 (LDEC -> DECLARACIONES .)
    dolarn          reduce using rule 65 (LDEC -> DECLARACIONES .)


state 434

    (66) DECLARACIONES -> id . TIPO not null ASIG ptcoma
    (67) DECLARACIONES -> id . TIPO ASIG ptcoma
    (68) DECLARACIONES -> id . constant TIPO not null ASIG ptcoma
    (69) DECLARACIONES -> id . constant TIPO ASIG ptcoma
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    constant        shift and go to state 539
    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 538

state 435

    (101) RAISE -> raise LEVEL . FORMAT
    (102) RAISE -> raise LEVEL . EXP
    (103) RAISE -> raise LEVEL .
    (105) RAISE -> raise LEVEL . cadena coma id
    (111) FORMAT -> . format para EXP coma LEXP parc
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    ptcoma          reduce using rule 103 (RAISE -> raise LEVEL .)
    cadena          shift and go to state 542
    format          shift and go to state 543
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    FORMAT                         shift and go to state 540
    EXP                            shift and go to state 541
    SELECT                         shift and go to state 72

state 436

    (106) LEVEL -> info .

    cadena          reduce using rule 106 (LEVEL -> info .)
    format          reduce using rule 106 (LEVEL -> info .)
    mas             reduce using rule 106 (LEVEL -> info .)
    menos           reduce using rule 106 (LEVEL -> info .)
    not             reduce using rule 106 (LEVEL -> info .)
    para            reduce using rule 106 (LEVEL -> info .)
    id              reduce using rule 106 (LEVEL -> info .)
    any             reduce using rule 106 (LEVEL -> info .)
    all             reduce using rule 106 (LEVEL -> info .)
    some            reduce using rule 106 (LEVEL -> info .)
    extract         reduce using rule 106 (LEVEL -> info .)
    int             reduce using rule 106 (LEVEL -> info .)
    decimales       reduce using rule 106 (LEVEL -> info .)
    cadenaString    reduce using rule 106 (LEVEL -> info .)
    true            reduce using rule 106 (LEVEL -> info .)
    false           reduce using rule 106 (LEVEL -> info .)
    multiplicacion  reduce using rule 106 (LEVEL -> info .)
    null            reduce using rule 106 (LEVEL -> info .)
    idPunto         reduce using rule 106 (LEVEL -> info .)
    default         reduce using rule 106 (LEVEL -> info .)
    current_time    reduce using rule 106 (LEVEL -> info .)
    current_date    reduce using rule 106 (LEVEL -> info .)
    timestamp       reduce using rule 106 (LEVEL -> info .)
    interval        reduce using rule 106 (LEVEL -> info .)
    select          reduce using rule 106 (LEVEL -> info .)
    ptcoma          reduce using rule 106 (LEVEL -> info .)


state 437

    (107) LEVEL -> debug .

    cadena          reduce using rule 107 (LEVEL -> debug .)
    format          reduce using rule 107 (LEVEL -> debug .)
    mas             reduce using rule 107 (LEVEL -> debug .)
    menos           reduce using rule 107 (LEVEL -> debug .)
    not             reduce using rule 107 (LEVEL -> debug .)
    para            reduce using rule 107 (LEVEL -> debug .)
    id              reduce using rule 107 (LEVEL -> debug .)
    any             reduce using rule 107 (LEVEL -> debug .)
    all             reduce using rule 107 (LEVEL -> debug .)
    some            reduce using rule 107 (LEVEL -> debug .)
    extract         reduce using rule 107 (LEVEL -> debug .)
    int             reduce using rule 107 (LEVEL -> debug .)
    decimales       reduce using rule 107 (LEVEL -> debug .)
    cadenaString    reduce using rule 107 (LEVEL -> debug .)
    true            reduce using rule 107 (LEVEL -> debug .)
    false           reduce using rule 107 (LEVEL -> debug .)
    multiplicacion  reduce using rule 107 (LEVEL -> debug .)
    null            reduce using rule 107 (LEVEL -> debug .)
    idPunto         reduce using rule 107 (LEVEL -> debug .)
    default         reduce using rule 107 (LEVEL -> debug .)
    current_time    reduce using rule 107 (LEVEL -> debug .)
    current_date    reduce using rule 107 (LEVEL -> debug .)
    timestamp       reduce using rule 107 (LEVEL -> debug .)
    interval        reduce using rule 107 (LEVEL -> debug .)
    select          reduce using rule 107 (LEVEL -> debug .)
    ptcoma          reduce using rule 107 (LEVEL -> debug .)


state 438

    (108) LEVEL -> notice .

    cadena          reduce using rule 108 (LEVEL -> notice .)
    format          reduce using rule 108 (LEVEL -> notice .)
    mas             reduce using rule 108 (LEVEL -> notice .)
    menos           reduce using rule 108 (LEVEL -> notice .)
    not             reduce using rule 108 (LEVEL -> notice .)
    para            reduce using rule 108 (LEVEL -> notice .)
    id              reduce using rule 108 (LEVEL -> notice .)
    any             reduce using rule 108 (LEVEL -> notice .)
    all             reduce using rule 108 (LEVEL -> notice .)
    some            reduce using rule 108 (LEVEL -> notice .)
    extract         reduce using rule 108 (LEVEL -> notice .)
    int             reduce using rule 108 (LEVEL -> notice .)
    decimales       reduce using rule 108 (LEVEL -> notice .)
    cadenaString    reduce using rule 108 (LEVEL -> notice .)
    true            reduce using rule 108 (LEVEL -> notice .)
    false           reduce using rule 108 (LEVEL -> notice .)
    multiplicacion  reduce using rule 108 (LEVEL -> notice .)
    null            reduce using rule 108 (LEVEL -> notice .)
    idPunto         reduce using rule 108 (LEVEL -> notice .)
    default         reduce using rule 108 (LEVEL -> notice .)
    current_time    reduce using rule 108 (LEVEL -> notice .)
    current_date    reduce using rule 108 (LEVEL -> notice .)
    timestamp       reduce using rule 108 (LEVEL -> notice .)
    interval        reduce using rule 108 (LEVEL -> notice .)
    select          reduce using rule 108 (LEVEL -> notice .)
    ptcoma          reduce using rule 108 (LEVEL -> notice .)


state 439

    (109) LEVEL -> warning .

    cadena          reduce using rule 109 (LEVEL -> warning .)
    format          reduce using rule 109 (LEVEL -> warning .)
    mas             reduce using rule 109 (LEVEL -> warning .)
    menos           reduce using rule 109 (LEVEL -> warning .)
    not             reduce using rule 109 (LEVEL -> warning .)
    para            reduce using rule 109 (LEVEL -> warning .)
    id              reduce using rule 109 (LEVEL -> warning .)
    any             reduce using rule 109 (LEVEL -> warning .)
    all             reduce using rule 109 (LEVEL -> warning .)
    some            reduce using rule 109 (LEVEL -> warning .)
    extract         reduce using rule 109 (LEVEL -> warning .)
    int             reduce using rule 109 (LEVEL -> warning .)
    decimales       reduce using rule 109 (LEVEL -> warning .)
    cadenaString    reduce using rule 109 (LEVEL -> warning .)
    true            reduce using rule 109 (LEVEL -> warning .)
    false           reduce using rule 109 (LEVEL -> warning .)
    multiplicacion  reduce using rule 109 (LEVEL -> warning .)
    null            reduce using rule 109 (LEVEL -> warning .)
    idPunto         reduce using rule 109 (LEVEL -> warning .)
    default         reduce using rule 109 (LEVEL -> warning .)
    current_time    reduce using rule 109 (LEVEL -> warning .)
    current_date    reduce using rule 109 (LEVEL -> warning .)
    timestamp       reduce using rule 109 (LEVEL -> warning .)
    interval        reduce using rule 109 (LEVEL -> warning .)
    select          reduce using rule 109 (LEVEL -> warning .)
    ptcoma          reduce using rule 109 (LEVEL -> warning .)


state 440

    (110) LEVEL -> exception .

    cadena          reduce using rule 110 (LEVEL -> exception .)
    format          reduce using rule 110 (LEVEL -> exception .)
    mas             reduce using rule 110 (LEVEL -> exception .)
    menos           reduce using rule 110 (LEVEL -> exception .)
    not             reduce using rule 110 (LEVEL -> exception .)
    para            reduce using rule 110 (LEVEL -> exception .)
    id              reduce using rule 110 (LEVEL -> exception .)
    any             reduce using rule 110 (LEVEL -> exception .)
    all             reduce using rule 110 (LEVEL -> exception .)
    some            reduce using rule 110 (LEVEL -> exception .)
    extract         reduce using rule 110 (LEVEL -> exception .)
    int             reduce using rule 110 (LEVEL -> exception .)
    decimales       reduce using rule 110 (LEVEL -> exception .)
    cadenaString    reduce using rule 110 (LEVEL -> exception .)
    true            reduce using rule 110 (LEVEL -> exception .)
    false           reduce using rule 110 (LEVEL -> exception .)
    multiplicacion  reduce using rule 110 (LEVEL -> exception .)
    null            reduce using rule 110 (LEVEL -> exception .)
    idPunto         reduce using rule 110 (LEVEL -> exception .)
    default         reduce using rule 110 (LEVEL -> exception .)
    current_time    reduce using rule 110 (LEVEL -> exception .)
    current_date    reduce using rule 110 (LEVEL -> exception .)
    timestamp       reduce using rule 110 (LEVEL -> exception .)
    interval        reduce using rule 110 (LEVEL -> exception .)
    select          reduce using rule 110 (LEVEL -> exception .)
    ptcoma          reduce using rule 110 (LEVEL -> exception .)


state 441

    (49) BEGINEND -> begin LISTACONTENIDO . end
    (87) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    end             shift and go to state 544
    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    CONTENIDO                      shift and go to state 419
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 442

    (25) RETURN -> return EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 25 (RETURN -> return EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 443

    (122) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 122 (DROP -> drop databases if exist id .)


state 444

    (31) DROPFUNC -> drop function if exist id .

    ptcoma          reduce using rule 31 (DROPFUNC -> drop function if exist id .)


state 445

    (116) INSERT -> insert into id values para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 545
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 446

    (117) INSERT -> insert into id para LEXP . parc values para LEXP parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 546
    coma            shift and go to state 125


state 447

    (83) CASE -> case EXP LISTAWHEN ELSEF end . case

    case            shift and go to state 547


state 448

    (84) CASE -> case LISTAWHEN ELSEF end case .

    ptcoma          reduce using rule 84 (CASE -> case LISTAWHEN ELSEF end case .)


state 449

    (114) WHEN -> when EXP then LISTACONTENIDO .
    (87) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    end             reduce using rule 114 (WHEN -> when EXP then LISTACONTENIDO .)
    else            reduce using rule 114 (WHEN -> when EXP then LISTACONTENIDO .)
    when            reduce using rule 114 (WHEN -> when EXP then LISTACONTENIDO .)
    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    CONTENIDO                      shift and go to state 419
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 450

    (148) SHOW -> show tables para id parc .

    ptcoma          reduce using rule 148 (SHOW -> show tables para id parc .)


state 451

    (33) CALLPROCEDURE -> execute id para LEXP parc .

    ptcoma          reduce using rule 33 (CALLPROCEDURE -> execute id para LEXP parc .)


state 452

    (232) EXIST -> not exist para SELECT . parc

    parc            shift and go to state 548


state 453

    (231) EXIST -> exist para SELECT parc .

    ptcoma          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    r_from          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 231 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 231 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 231 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 231 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 231 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 231 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 231 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 231 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 231 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 231 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 231 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 231 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 231 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 231 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 231 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 231 (EXIST -> exist para SELECT parc .)
    like            reduce using rule 231 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 231 (EXIST -> exist para SELECT parc .)
    cadenaString    reduce using rule 231 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 231 (EXIST -> exist para SELECT parc .)
    cadena          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 231 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 231 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 231 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 231 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 231 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 231 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 231 (EXIST -> exist para SELECT parc .)
    unique          reduce using rule 231 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 231 (EXIST -> exist para SELECT parc .)
    check           reduce using rule 231 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 231 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 231 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 231 (EXIST -> exist para SELECT parc .)


state 454

    (199) SELECT -> select distinct LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (218) GROUP -> . group by LEXP
    (219) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 203
    r_from          reduce using rule 219 (GROUP -> .)
    coma            reduce using rule 219 (GROUP -> .)
    where           reduce using rule 219 (GROUP -> .)
    having          reduce using rule 219 (GROUP -> .)
    union           reduce using rule 219 (GROUP -> .)
    intersect       reduce using rule 219 (GROUP -> .)
    except          reduce using rule 219 (GROUP -> .)
    order           reduce using rule 219 (GROUP -> .)
    limit           reduce using rule 219 (GROUP -> .)
    offset          reduce using rule 219 (GROUP -> .)
    ptcoma          reduce using rule 219 (GROUP -> .)
    mas             reduce using rule 219 (GROUP -> .)
    menos           reduce using rule 219 (GROUP -> .)
    multiplicacion  reduce using rule 219 (GROUP -> .)
    division        reduce using rule 219 (GROUP -> .)
    modulo          reduce using rule 219 (GROUP -> .)
    elevado         reduce using rule 219 (GROUP -> .)
    and             reduce using rule 219 (GROUP -> .)
    or              reduce using rule 219 (GROUP -> .)
    mayor           reduce using rule 219 (GROUP -> .)
    menor           reduce using rule 219 (GROUP -> .)
    mayor_igual     reduce using rule 219 (GROUP -> .)
    menor_igual     reduce using rule 219 (GROUP -> .)
    igual           reduce using rule 219 (GROUP -> .)
    diferente1      reduce using rule 219 (GROUP -> .)
    diferente2      reduce using rule 219 (GROUP -> .)
    between         reduce using rule 219 (GROUP -> .)
    is              reduce using rule 219 (GROUP -> .)
    not             reduce using rule 219 (GROUP -> .)
    as              reduce using rule 219 (GROUP -> .)
    like            reduce using rule 219 (GROUP -> .)
    isnull          reduce using rule 219 (GROUP -> .)
    notnull         reduce using rule 219 (GROUP -> .)
    cadenaString    reduce using rule 219 (GROUP -> .)
    id              reduce using rule 219 (GROUP -> .)
    cadena          reduce using rule 219 (GROUP -> .)
    in              reduce using rule 219 (GROUP -> .)
    then            reduce using rule 219 (GROUP -> .)
    when            reduce using rule 219 (GROUP -> .)
    parc            reduce using rule 219 (GROUP -> .)
    constraint      reduce using rule 219 (GROUP -> .)
    primary         reduce using rule 219 (GROUP -> .)
    null            reduce using rule 219 (GROUP -> .)
    unique          reduce using rule 219 (GROUP -> .)
    references      reduce using rule 219 (GROUP -> .)
    check           reduce using rule 219 (GROUP -> .)
    default         reduce using rule 219 (GROUP -> .)
    asc             reduce using rule 219 (GROUP -> .)
    desc            reduce using rule 219 (GROUP -> .)

  ! group           [ reduce using rule 219 (GROUP -> .) ]

    GROUP                          shift and go to state 549

state 455

    (200) SELECT -> select LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (220) HAVING -> . having EXP
    (221) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 335
    r_from          reduce using rule 221 (HAVING -> .)
    coma            reduce using rule 221 (HAVING -> .)
    where           reduce using rule 221 (HAVING -> .)
    group           reduce using rule 221 (HAVING -> .)
    union           reduce using rule 221 (HAVING -> .)
    intersect       reduce using rule 221 (HAVING -> .)
    except          reduce using rule 221 (HAVING -> .)
    order           reduce using rule 221 (HAVING -> .)
    limit           reduce using rule 221 (HAVING -> .)
    offset          reduce using rule 221 (HAVING -> .)
    ptcoma          reduce using rule 221 (HAVING -> .)
    mas             reduce using rule 221 (HAVING -> .)
    menos           reduce using rule 221 (HAVING -> .)
    multiplicacion  reduce using rule 221 (HAVING -> .)
    division        reduce using rule 221 (HAVING -> .)
    modulo          reduce using rule 221 (HAVING -> .)
    elevado         reduce using rule 221 (HAVING -> .)
    and             reduce using rule 221 (HAVING -> .)
    or              reduce using rule 221 (HAVING -> .)
    mayor           reduce using rule 221 (HAVING -> .)
    menor           reduce using rule 221 (HAVING -> .)
    mayor_igual     reduce using rule 221 (HAVING -> .)
    menor_igual     reduce using rule 221 (HAVING -> .)
    igual           reduce using rule 221 (HAVING -> .)
    diferente1      reduce using rule 221 (HAVING -> .)
    diferente2      reduce using rule 221 (HAVING -> .)
    between         reduce using rule 221 (HAVING -> .)
    is              reduce using rule 221 (HAVING -> .)
    not             reduce using rule 221 (HAVING -> .)
    as              reduce using rule 221 (HAVING -> .)
    like            reduce using rule 221 (HAVING -> .)
    isnull          reduce using rule 221 (HAVING -> .)
    notnull         reduce using rule 221 (HAVING -> .)
    cadenaString    reduce using rule 221 (HAVING -> .)
    id              reduce using rule 221 (HAVING -> .)
    cadena          reduce using rule 221 (HAVING -> .)
    in              reduce using rule 221 (HAVING -> .)
    then            reduce using rule 221 (HAVING -> .)
    when            reduce using rule 221 (HAVING -> .)
    parc            reduce using rule 221 (HAVING -> .)
    constraint      reduce using rule 221 (HAVING -> .)
    primary         reduce using rule 221 (HAVING -> .)
    null            reduce using rule 221 (HAVING -> .)
    unique          reduce using rule 221 (HAVING -> .)
    references      reduce using rule 221 (HAVING -> .)
    check           reduce using rule 221 (HAVING -> .)
    default         reduce using rule 221 (HAVING -> .)
    asc             reduce using rule 221 (HAVING -> .)
    desc            reduce using rule 221 (HAVING -> .)

  ! having          [ reduce using rule 221 (HAVING -> .) ]

    HAVING                         shift and go to state 550

state 456

    (201) SELECT -> select LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (222) ORDER -> . order by LEXP ORD
    (223) ORDER -> . order by LEXP
    (224) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 552
    r_from          reduce using rule 224 (ORDER -> .)
    coma            reduce using rule 224 (ORDER -> .)
    where           reduce using rule 224 (ORDER -> .)
    group           reduce using rule 224 (ORDER -> .)
    having          reduce using rule 224 (ORDER -> .)
    union           reduce using rule 224 (ORDER -> .)
    intersect       reduce using rule 224 (ORDER -> .)
    except          reduce using rule 224 (ORDER -> .)
    limit           reduce using rule 224 (ORDER -> .)
    offset          reduce using rule 224 (ORDER -> .)
    ptcoma          reduce using rule 224 (ORDER -> .)
    mas             reduce using rule 224 (ORDER -> .)
    menos           reduce using rule 224 (ORDER -> .)
    multiplicacion  reduce using rule 224 (ORDER -> .)
    division        reduce using rule 224 (ORDER -> .)
    modulo          reduce using rule 224 (ORDER -> .)
    elevado         reduce using rule 224 (ORDER -> .)
    and             reduce using rule 224 (ORDER -> .)
    or              reduce using rule 224 (ORDER -> .)
    mayor           reduce using rule 224 (ORDER -> .)
    menor           reduce using rule 224 (ORDER -> .)
    mayor_igual     reduce using rule 224 (ORDER -> .)
    menor_igual     reduce using rule 224 (ORDER -> .)
    igual           reduce using rule 224 (ORDER -> .)
    diferente1      reduce using rule 224 (ORDER -> .)
    diferente2      reduce using rule 224 (ORDER -> .)
    between         reduce using rule 224 (ORDER -> .)
    is              reduce using rule 224 (ORDER -> .)
    not             reduce using rule 224 (ORDER -> .)
    as              reduce using rule 224 (ORDER -> .)
    like            reduce using rule 224 (ORDER -> .)
    isnull          reduce using rule 224 (ORDER -> .)
    notnull         reduce using rule 224 (ORDER -> .)
    cadenaString    reduce using rule 224 (ORDER -> .)
    id              reduce using rule 224 (ORDER -> .)
    cadena          reduce using rule 224 (ORDER -> .)
    in              reduce using rule 224 (ORDER -> .)
    then            reduce using rule 224 (ORDER -> .)
    when            reduce using rule 224 (ORDER -> .)
    parc            reduce using rule 224 (ORDER -> .)
    constraint      reduce using rule 224 (ORDER -> .)
    primary         reduce using rule 224 (ORDER -> .)
    null            reduce using rule 224 (ORDER -> .)
    unique          reduce using rule 224 (ORDER -> .)
    references      reduce using rule 224 (ORDER -> .)
    check           reduce using rule 224 (ORDER -> .)
    default         reduce using rule 224 (ORDER -> .)
    asc             reduce using rule 224 (ORDER -> .)
    desc            reduce using rule 224 (ORDER -> .)

  ! order           [ reduce using rule 224 (ORDER -> .) ]

    ORDER                          shift and go to state 551

state 457

    (213) COMBINING -> union . LEXP
    (214) COMBINING -> union . all LEXP
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    all             shift and go to state 554
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 553
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 458

    (215) COMBINING -> intersect . LEXP
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 555
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 459

    (216) COMBINING -> except . LEXP
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 556
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 460

    (220) HAVING -> having EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for like resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
    r_from          reduce using rule 220 (HAVING -> having EXP .)
    coma            reduce using rule 220 (HAVING -> having EXP .)
    where           reduce using rule 220 (HAVING -> having EXP .)
    group           reduce using rule 220 (HAVING -> having EXP .)
    having          reduce using rule 220 (HAVING -> having EXP .)
    union           reduce using rule 220 (HAVING -> having EXP .)
    intersect       reduce using rule 220 (HAVING -> having EXP .)
    except          reduce using rule 220 (HAVING -> having EXP .)
    order           reduce using rule 220 (HAVING -> having EXP .)
    limit           reduce using rule 220 (HAVING -> having EXP .)
    offset          reduce using rule 220 (HAVING -> having EXP .)
    ptcoma          reduce using rule 220 (HAVING -> having EXP .)
    then            reduce using rule 220 (HAVING -> having EXP .)
    when            reduce using rule 220 (HAVING -> having EXP .)
    parc            reduce using rule 220 (HAVING -> having EXP .)
    constraint      reduce using rule 220 (HAVING -> having EXP .)
    primary         reduce using rule 220 (HAVING -> having EXP .)
    null            reduce using rule 220 (HAVING -> having EXP .)
    unique          reduce using rule 220 (HAVING -> having EXP .)
    references      reduce using rule 220 (HAVING -> having EXP .)
    check           reduce using rule 220 (HAVING -> having EXP .)
    default         reduce using rule 220 (HAVING -> having EXP .)
    asc             reduce using rule 220 (HAVING -> having EXP .)
    desc            reduce using rule 220 (HAVING -> having EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151

  ! mas             [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! menos           [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! multiplicacion  [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! division        [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! modulo          [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! elevado         [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! and             [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! or              [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! mayor           [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! menor           [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! mayor_igual     [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! menor_igual     [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! igual           [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! diferente1      [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! diferente2      [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! between         [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! is              [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! not             [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! as              [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! like            [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! isnull          [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! notnull         [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! cadenaString    [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! id              [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! cadena          [ reduce using rule 220 (HAVING -> having EXP .) ]
  ! in              [ reduce using rule 220 (HAVING -> having EXP .) ]


state 461

    (218) GROUP -> group by LEXP .
    (233) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 218 (GROUP -> group by LEXP .)
    where           reduce using rule 218 (GROUP -> group by LEXP .)
    group           reduce using rule 218 (GROUP -> group by LEXP .)
    having          reduce using rule 218 (GROUP -> group by LEXP .)
    union           reduce using rule 218 (GROUP -> group by LEXP .)
    intersect       reduce using rule 218 (GROUP -> group by LEXP .)
    except          reduce using rule 218 (GROUP -> group by LEXP .)
    order           reduce using rule 218 (GROUP -> group by LEXP .)
    limit           reduce using rule 218 (GROUP -> group by LEXP .)
    offset          reduce using rule 218 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 218 (GROUP -> group by LEXP .)
    mas             reduce using rule 218 (GROUP -> group by LEXP .)
    menos           reduce using rule 218 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 218 (GROUP -> group by LEXP .)
    division        reduce using rule 218 (GROUP -> group by LEXP .)
    modulo          reduce using rule 218 (GROUP -> group by LEXP .)
    elevado         reduce using rule 218 (GROUP -> group by LEXP .)
    and             reduce using rule 218 (GROUP -> group by LEXP .)
    or              reduce using rule 218 (GROUP -> group by LEXP .)
    mayor           reduce using rule 218 (GROUP -> group by LEXP .)
    menor           reduce using rule 218 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 218 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 218 (GROUP -> group by LEXP .)
    igual           reduce using rule 218 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 218 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 218 (GROUP -> group by LEXP .)
    between         reduce using rule 218 (GROUP -> group by LEXP .)
    is              reduce using rule 218 (GROUP -> group by LEXP .)
    not             reduce using rule 218 (GROUP -> group by LEXP .)
    as              reduce using rule 218 (GROUP -> group by LEXP .)
    like            reduce using rule 218 (GROUP -> group by LEXP .)
    isnull          reduce using rule 218 (GROUP -> group by LEXP .)
    notnull         reduce using rule 218 (GROUP -> group by LEXP .)
    cadenaString    reduce using rule 218 (GROUP -> group by LEXP .)
    id              reduce using rule 218 (GROUP -> group by LEXP .)
    cadena          reduce using rule 218 (GROUP -> group by LEXP .)
    in              reduce using rule 218 (GROUP -> group by LEXP .)
    then            reduce using rule 218 (GROUP -> group by LEXP .)
    when            reduce using rule 218 (GROUP -> group by LEXP .)
    parc            reduce using rule 218 (GROUP -> group by LEXP .)
    constraint      reduce using rule 218 (GROUP -> group by LEXP .)
    primary         reduce using rule 218 (GROUP -> group by LEXP .)
    null            reduce using rule 218 (GROUP -> group by LEXP .)
    unique          reduce using rule 218 (GROUP -> group by LEXP .)
    references      reduce using rule 218 (GROUP -> group by LEXP .)
    check           reduce using rule 218 (GROUP -> group by LEXP .)
    default         reduce using rule 218 (GROUP -> group by LEXP .)
    asc             reduce using rule 218 (GROUP -> group by LEXP .)
    desc            reduce using rule 218 (GROUP -> group by LEXP .)
    coma            shift and go to state 125

  ! coma            [ reduce using rule 218 (GROUP -> group by LEXP .) ]


state 462

    (321) EXP -> EXP is not distinct r_from . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 557
    SELECT                         shift and go to state 72

state 463

    (322) EXP -> EXP is distinct r_from EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    coma            reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    where           reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    group           reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    having          reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    union           reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    except          reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    order           reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    limit           reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    offset          reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    and             reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    or              reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    between         reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    is              reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    not             reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    as              reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    like            reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    cadenaString    reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    id              reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    cadena          reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    in              reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    then            reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    when            reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    parc            reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    primary         reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    null            reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    unique          reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    references      reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    check           reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    default         reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    asc             reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    desc            reduce using rule 322 (EXP -> EXP is distinct r_from EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140

  ! mas             [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! menos           [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! division        [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor           [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! igual           [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 322 (EXP -> EXP is distinct r_from EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 464

    (323) EXP -> EXP not between symetric EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    coma            reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    where           reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    group           reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    having          reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    union           reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    intersect       reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    except          reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    order           reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    limit           reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    offset          reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    and             reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    or              reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    between         reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    is              reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    not             reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    as              reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    like            reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    isnull          reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    notnull         reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    cadenaString    reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    id              reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    cadena          reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    in              reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    then            reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    when            reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    parc            reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    constraint      reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    primary         reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    null            reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    unique          reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    references      reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    check           reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    default         reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    asc             reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    desc            reduce using rule 323 (EXP -> EXP not between symetric EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140

  ! mas             [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! menos           [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! division        [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! modulo          [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! elevado         [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! mayor           [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! menor           [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! igual           [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! diferente1      [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! diferente2      [ reduce using rule 323 (EXP -> EXP not between symetric EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 465

    (320) EXP -> EXP not in para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 558
    coma            shift and go to state 125


state 466

    (319) EXP -> EXP in para LEXP parc .

    r_from          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    coma            reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    where           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    group           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    having          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    union           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    intersect       reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    except          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    order           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    limit           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    offset          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    ptcoma          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    mas             reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    menos           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    multiplicacion  reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    division        reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    modulo          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    elevado         reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    and             reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    or              reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    mayor           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    menor           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    mayor_igual     reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    menor_igual     reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    igual           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    diferente1      reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    diferente2      reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    between         reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    is              reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    not             reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    as              reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    like            reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    isnull          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    notnull         reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    cadenaString    reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    id              reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    cadena          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    in              reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    then            reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    when            reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    parc            reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    constraint      reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    primary         reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    null            reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    unique          reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    references      reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    check           reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    default         reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    asc             reduce using rule 319 (EXP -> EXP in para LEXP parc .)
    desc            reduce using rule 319 (EXP -> EXP in para LEXP parc .)


state 467

    (235) TIPO -> decimal para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 559
    coma            shift and go to state 125


state 468

    (236) TIPO -> numeric para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 560
    coma            shift and go to state 125


state 469

    (237) TIPO -> varchar para int . parc

    parc            shift and go to state 561


state 470

    (238) TIPO -> timestamp para int . parc
    (247) TIPO -> timestamp para int . parc without time zone
    (248) TIPO -> timestamp para int . parc with time zone

    parc            shift and go to state 562


state 471

    (270) TIPO -> timestamp without time . zone

    zone            shift and go to state 563


state 472

    (271) TIPO -> timestamp with time . zone

    zone            shift and go to state 564


state 473

    (239) TIPO -> character para int . parc

    parc            shift and go to state 565


state 474

    (243) TIPO -> character varying para . int parc

    int             shift and go to state 566


state 475

    (240) TIPO -> interval para int . parc
    (251) TIPO -> interval para int . parc cadena

    parc            shift and go to state 567


state 476

    (241) TIPO -> char para int . parc

    parc            shift and go to state 568


state 477

    (242) TIPO -> time para int . parc
    (249) TIPO -> time para int . parc without time zone
    (250) TIPO -> time para int . parc with time zone

    parc            shift and go to state 569


state 478

    (272) TIPO -> time without time . zone

    zone            shift and go to state 570


state 479

    (273) TIPO -> time with time . zone

    zone            shift and go to state 571


state 480

    (245) TIPO -> id modulo rowtype .

    r_from          reduce using rule 245 (TIPO -> id modulo rowtype .)
    coma            reduce using rule 245 (TIPO -> id modulo rowtype .)
    where           reduce using rule 245 (TIPO -> id modulo rowtype .)
    group           reduce using rule 245 (TIPO -> id modulo rowtype .)
    having          reduce using rule 245 (TIPO -> id modulo rowtype .)
    union           reduce using rule 245 (TIPO -> id modulo rowtype .)
    intersect       reduce using rule 245 (TIPO -> id modulo rowtype .)
    except          reduce using rule 245 (TIPO -> id modulo rowtype .)
    order           reduce using rule 245 (TIPO -> id modulo rowtype .)
    limit           reduce using rule 245 (TIPO -> id modulo rowtype .)
    offset          reduce using rule 245 (TIPO -> id modulo rowtype .)
    ptcoma          reduce using rule 245 (TIPO -> id modulo rowtype .)
    mas             reduce using rule 245 (TIPO -> id modulo rowtype .)
    menos           reduce using rule 245 (TIPO -> id modulo rowtype .)
    multiplicacion  reduce using rule 245 (TIPO -> id modulo rowtype .)
    division        reduce using rule 245 (TIPO -> id modulo rowtype .)
    modulo          reduce using rule 245 (TIPO -> id modulo rowtype .)
    elevado         reduce using rule 245 (TIPO -> id modulo rowtype .)
    and             reduce using rule 245 (TIPO -> id modulo rowtype .)
    or              reduce using rule 245 (TIPO -> id modulo rowtype .)
    mayor           reduce using rule 245 (TIPO -> id modulo rowtype .)
    menor           reduce using rule 245 (TIPO -> id modulo rowtype .)
    mayor_igual     reduce using rule 245 (TIPO -> id modulo rowtype .)
    menor_igual     reduce using rule 245 (TIPO -> id modulo rowtype .)
    igual           reduce using rule 245 (TIPO -> id modulo rowtype .)
    diferente1      reduce using rule 245 (TIPO -> id modulo rowtype .)
    diferente2      reduce using rule 245 (TIPO -> id modulo rowtype .)
    between         reduce using rule 245 (TIPO -> id modulo rowtype .)
    is              reduce using rule 245 (TIPO -> id modulo rowtype .)
    not             reduce using rule 245 (TIPO -> id modulo rowtype .)
    as              reduce using rule 245 (TIPO -> id modulo rowtype .)
    like            reduce using rule 245 (TIPO -> id modulo rowtype .)
    isnull          reduce using rule 245 (TIPO -> id modulo rowtype .)
    notnull         reduce using rule 245 (TIPO -> id modulo rowtype .)
    cadenaString    reduce using rule 245 (TIPO -> id modulo rowtype .)
    id              reduce using rule 245 (TIPO -> id modulo rowtype .)
    cadena          reduce using rule 245 (TIPO -> id modulo rowtype .)
    in              reduce using rule 245 (TIPO -> id modulo rowtype .)
    then            reduce using rule 245 (TIPO -> id modulo rowtype .)
    when            reduce using rule 245 (TIPO -> id modulo rowtype .)
    parc            reduce using rule 245 (TIPO -> id modulo rowtype .)
    constraint      reduce using rule 245 (TIPO -> id modulo rowtype .)
    primary         reduce using rule 245 (TIPO -> id modulo rowtype .)
    null            reduce using rule 245 (TIPO -> id modulo rowtype .)
    unique          reduce using rule 245 (TIPO -> id modulo rowtype .)
    references      reduce using rule 245 (TIPO -> id modulo rowtype .)
    check           reduce using rule 245 (TIPO -> id modulo rowtype .)
    default         reduce using rule 245 (TIPO -> id modulo rowtype .)
    asc             reduce using rule 245 (TIPO -> id modulo rowtype .)
    desc            reduce using rule 245 (TIPO -> id modulo rowtype .)
    dospuntos       reduce using rule 245 (TIPO -> id modulo rowtype .)
    language        reduce using rule 245 (TIPO -> id modulo rowtype .)
    do              reduce using rule 245 (TIPO -> id modulo rowtype .)


state 481

    (246) TIPO -> idPunto modulo type .

    r_from          reduce using rule 246 (TIPO -> idPunto modulo type .)
    coma            reduce using rule 246 (TIPO -> idPunto modulo type .)
    where           reduce using rule 246 (TIPO -> idPunto modulo type .)
    group           reduce using rule 246 (TIPO -> idPunto modulo type .)
    having          reduce using rule 246 (TIPO -> idPunto modulo type .)
    union           reduce using rule 246 (TIPO -> idPunto modulo type .)
    intersect       reduce using rule 246 (TIPO -> idPunto modulo type .)
    except          reduce using rule 246 (TIPO -> idPunto modulo type .)
    order           reduce using rule 246 (TIPO -> idPunto modulo type .)
    limit           reduce using rule 246 (TIPO -> idPunto modulo type .)
    offset          reduce using rule 246 (TIPO -> idPunto modulo type .)
    ptcoma          reduce using rule 246 (TIPO -> idPunto modulo type .)
    mas             reduce using rule 246 (TIPO -> idPunto modulo type .)
    menos           reduce using rule 246 (TIPO -> idPunto modulo type .)
    multiplicacion  reduce using rule 246 (TIPO -> idPunto modulo type .)
    division        reduce using rule 246 (TIPO -> idPunto modulo type .)
    modulo          reduce using rule 246 (TIPO -> idPunto modulo type .)
    elevado         reduce using rule 246 (TIPO -> idPunto modulo type .)
    and             reduce using rule 246 (TIPO -> idPunto modulo type .)
    or              reduce using rule 246 (TIPO -> idPunto modulo type .)
    mayor           reduce using rule 246 (TIPO -> idPunto modulo type .)
    menor           reduce using rule 246 (TIPO -> idPunto modulo type .)
    mayor_igual     reduce using rule 246 (TIPO -> idPunto modulo type .)
    menor_igual     reduce using rule 246 (TIPO -> idPunto modulo type .)
    igual           reduce using rule 246 (TIPO -> idPunto modulo type .)
    diferente1      reduce using rule 246 (TIPO -> idPunto modulo type .)
    diferente2      reduce using rule 246 (TIPO -> idPunto modulo type .)
    between         reduce using rule 246 (TIPO -> idPunto modulo type .)
    is              reduce using rule 246 (TIPO -> idPunto modulo type .)
    not             reduce using rule 246 (TIPO -> idPunto modulo type .)
    as              reduce using rule 246 (TIPO -> idPunto modulo type .)
    like            reduce using rule 246 (TIPO -> idPunto modulo type .)
    isnull          reduce using rule 246 (TIPO -> idPunto modulo type .)
    notnull         reduce using rule 246 (TIPO -> idPunto modulo type .)
    cadenaString    reduce using rule 246 (TIPO -> idPunto modulo type .)
    id              reduce using rule 246 (TIPO -> idPunto modulo type .)
    cadena          reduce using rule 246 (TIPO -> idPunto modulo type .)
    in              reduce using rule 246 (TIPO -> idPunto modulo type .)
    then            reduce using rule 246 (TIPO -> idPunto modulo type .)
    when            reduce using rule 246 (TIPO -> idPunto modulo type .)
    parc            reduce using rule 246 (TIPO -> idPunto modulo type .)
    constraint      reduce using rule 246 (TIPO -> idPunto modulo type .)
    primary         reduce using rule 246 (TIPO -> idPunto modulo type .)
    null            reduce using rule 246 (TIPO -> idPunto modulo type .)
    unique          reduce using rule 246 (TIPO -> idPunto modulo type .)
    references      reduce using rule 246 (TIPO -> idPunto modulo type .)
    check           reduce using rule 246 (TIPO -> idPunto modulo type .)
    default         reduce using rule 246 (TIPO -> idPunto modulo type .)
    asc             reduce using rule 246 (TIPO -> idPunto modulo type .)
    desc            reduce using rule 246 (TIPO -> idPunto modulo type .)
    dospuntos       reduce using rule 246 (TIPO -> idPunto modulo type .)
    language        reduce using rule 246 (TIPO -> idPunto modulo type .)
    do              reduce using rule 246 (TIPO -> idPunto modulo type .)


state 482

    (331) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 572


state 483

    (173) COLDEF -> id TIPO .
    (174) COLDEF -> id TIPO . LOPCOLUMN
    (175) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (176) LOPCOLUMN -> . OPCOLUMN
    (177) OPCOLUMN -> . constraint id unique
    (178) OPCOLUMN -> . not null
    (179) OPCOLUMN -> . primary key
    (180) OPCOLUMN -> . null
    (181) OPCOLUMN -> . unique
    (182) OPCOLUMN -> . references id
    (183) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (184) OPCOLUMN -> . check para CONDCHECK parc
    (185) OPCOLUMN -> . default EXP

    parc            reduce using rule 173 (COLDEF -> id TIPO .)
    coma            reduce using rule 173 (COLDEF -> id TIPO .)
    constraint      shift and go to state 575
    not             shift and go to state 577
    primary         shift and go to state 579
    null            shift and go to state 578
    unique          shift and go to state 576
    references      shift and go to state 580
    check           shift and go to state 581
    default         shift and go to state 582

    LOPCOLUMN                      shift and go to state 573
    OPCOLUMN                       shift and go to state 574

state 484

    (167) CREATETABLE -> create table id para LDEF parc . ptcoma
    (168) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (197) HERENCIA -> . inherits para LEXP parc

    ptcoma          shift and go to state 583
    inherits        shift and go to state 585

    HERENCIA                       shift and go to state 584

state 485

    (169) LDEF -> LDEF coma . COLDEF
    (171) COLDEF -> . OPCONST
    (172) COLDEF -> . constraint id OPCONST
    (173) COLDEF -> . id TIPO
    (174) COLDEF -> . id TIPO LOPCOLUMN
    (186) OPCONST -> . primary key para LEXP parc
    (187) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (188) OPCONST -> . check para CONDCHECK parc
    (189) OPCONST -> . unique para LEXP parc

    constraint      shift and go to state 375
    id              shift and go to state 371
    primary         shift and go to state 376
    foreign         shift and go to state 377
    check           shift and go to state 378
    unique          shift and go to state 379

    COLDEF                         shift and go to state 586
    OPCONST                        shift and go to state 374

state 486

    (172) COLDEF -> constraint id . OPCONST
    (186) OPCONST -> . primary key para LEXP parc
    (187) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (188) OPCONST -> . check para CONDCHECK parc
    (189) OPCONST -> . unique para LEXP parc

    primary         shift and go to state 376
    foreign         shift and go to state 377
    check           shift and go to state 378
    unique          shift and go to state 379

    OPCONST                        shift and go to state 587

state 487

    (186) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 588


state 488

    (187) OPCONST -> foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 589


state 489

    (188) OPCONST -> check para . CONDCHECK parc
    (190) CONDCHECK -> . EXP mayor EXP
    (191) CONDCHECK -> . EXP menor EXP
    (192) CONDCHECK -> . EXP mayor_igual EXP
    (193) CONDCHECK -> . EXP menor_igual EXP
    (194) CONDCHECK -> . EXP igual EXP
    (195) CONDCHECK -> . EXP diferente1 EXP
    (196) CONDCHECK -> . EXP diferente2 EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    CONDCHECK                      shift and go to state 590
    EXP                            shift and go to state 591
    SELECT                         shift and go to state 72

state 490

    (189) OPCONST -> unique para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 592
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 491

    (198) CREATETYPE -> create type id as enum para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 593
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 492

    (150) CREATEDB -> create RD if not exist id .
    (151) CREATEDB -> create RD if not exist id . OPCCDB
    (154) OPCCDB -> . PROPIETARIO
    (155) OPCCDB -> . MODO
    (156) OPCCDB -> . PROPIETARIO MODO
    (159) PROPIETARIO -> . owner igual id
    (160) PROPIETARIO -> . owner id
    (161) PROPIETARIO -> . owner igual cadena
    (162) PROPIETARIO -> . owner cadena
    (163) PROPIETARIO -> . owner igual cadenaString
    (164) PROPIETARIO -> . owner cadenaString
    (165) MODO -> . mode igual int
    (166) MODO -> . mode int

    ptcoma          reduce using rule 150 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 277
    mode            shift and go to state 278

    OPCCDB                         shift and go to state 594
    PROPIETARIO                    shift and go to state 275
    MODO                           shift and go to state 276

state 493

    (159) PROPIETARIO -> owner igual id .

    mode            reduce using rule 159 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 159 (PROPIETARIO -> owner igual id .)


state 494

    (161) PROPIETARIO -> owner igual cadena .

    mode            reduce using rule 161 (PROPIETARIO -> owner igual cadena .)
    ptcoma          reduce using rule 161 (PROPIETARIO -> owner igual cadena .)


state 495

    (163) PROPIETARIO -> owner igual cadenaString .

    mode            reduce using rule 163 (PROPIETARIO -> owner igual cadenaString .)
    ptcoma          reduce using rule 163 (PROPIETARIO -> owner igual cadenaString .)


state 496

    (165) MODO -> mode igual int .

    ptcoma          reduce using rule 165 (MODO -> mode igual int .)


state 497

    (50) CREATEINDEX -> create index id on id para . LEXP parc
    (53) CREATEINDEX -> create index id on id para . id ORDEN parc
    (54) CREATEINDEX -> create index id on id para . id id ORDEN parc
    (55) CREATEINDEX -> create index id on id para . id id parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    id              shift and go to state 595
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 596
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 498

    (52) CREATEINDEX -> create index id on id using . hash para LEXP parc

    hash            shift and go to state 597


state 499

    (51) CREATEINDEX -> create unique index id on id . para LEXP parc

    para            shift and go to state 598


state 500

    (46) LPARAM -> id TIPO .

    parc            reduce using rule 46 (LPARAM -> id TIPO .)
    coma            reduce using rule 46 (LPARAM -> id TIPO .)


state 501

    (35) PROCEDIMIENTOS -> create procedure id para LPARAM parc . LENGUAJE LCONTENIDOP
    (36) PROCEDIMIENTOS -> create procedure id para LPARAM parc . LCONTENIDOP LENGUAJE
    (47) LENGUAJE -> . language plpgsql
    (48) LENGUAJE -> . language plpgsql ptcoma
    (39) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (40) LCONTENIDOP -> . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 505
    as              shift and go to state 507
    do              shift and go to state 508

    LENGUAJE                       shift and go to state 599
    LCONTENIDOP                    shift and go to state 600
    CONTENIDOP                     shift and go to state 506

state 502

    (43) LPARAM -> LPARAM coma . inout id TIPO
    (44) LPARAM -> LPARAM coma . id TIPO

    inout           shift and go to state 601
    id              shift and go to state 602


state 503

    (37) PROCEDIMIENTOS -> create procedure id para parc LENGUAJE . LCONTENIDOP
    (39) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (40) LCONTENIDOP -> . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    as              shift and go to state 507
    do              shift and go to state 508

    LCONTENIDOP                    shift and go to state 603
    CONTENIDOP                     shift and go to state 506

state 504

    (38) PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP . LENGUAJE
    (39) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (47) LENGUAJE -> . language plpgsql
    (48) LENGUAJE -> . language plpgsql ptcoma
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 505
    as              shift and go to state 507
    do              shift and go to state 508

    LENGUAJE                       shift and go to state 604
    CONTENIDOP                     shift and go to state 605

state 505

    (47) LENGUAJE -> language . plpgsql
    (48) LENGUAJE -> language . plpgsql ptcoma

    plpgsql         shift and go to state 606


state 506

    (40) LCONTENIDOP -> CONTENIDOP .

    language        reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    as              reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    do              reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    use             reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    select          reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    create          reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    update          reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    delete          reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    alter           reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    drop            reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    insert          reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    case            reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    show            reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    id              reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    if              reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    execute         reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)
    $end            reduce using rule 40 (LCONTENIDOP -> CONTENIDOP .)


state 507

    (41) CONTENIDOP -> as . dolarn LISTACONTENIDO dolarn

    dolarn          shift and go to state 607


state 508

    (42) CONTENIDOP -> do . dolarn LISTACONTENIDO dolarn

    dolarn          shift and go to state 608


state 509

    (45) LPARAM -> inout id . TIPO
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 609

state 510

    (26) FUNCIONES -> create function id para LPARAM parc . RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM parc . RETURNP LCONTENIDOP LENGUAJE
    (32) RETURNP -> . returns TIPO

    returns         shift and go to state 512

    RETURNP                        shift and go to state 610

state 511

    (28) FUNCIONES -> create function id para parc RETURNP . LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id para parc RETURNP . LCONTENIDOP LENGUAJE
    (47) LENGUAJE -> . language plpgsql
    (48) LENGUAJE -> . language plpgsql ptcoma
    (39) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (40) LCONTENIDOP -> . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 505
    as              shift and go to state 507
    do              shift and go to state 508

    LENGUAJE                       shift and go to state 611
    LCONTENIDOP                    shift and go to state 612
    CONTENIDOP                     shift and go to state 506

state 512

    (32) RETURNP -> returns . TIPO
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 613

state 513

    (229) LCAMPOS -> id igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    where           reduce using rule 229 (LCAMPOS -> id igual EXP .)
    coma            reduce using rule 229 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 514

    (227) UPDATE -> update id set LCAMPOS where LEXP .
    (233) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 227 (UPDATE -> update id set LCAMPOS where LEXP .)
    coma            shift and go to state 125


state 515

    (228) LCAMPOS -> LCAMPOS coma id . igual EXP

    igual           shift and go to state 614


state 516

    (125) RO -> rename to id .

    ptcoma          reduce using rule 125 (RO -> rename to id .)


state 517

    (126) RO -> owner to id .

    ptcoma          reduce using rule 126 (RO -> owner to id .)


state 518

    (140) OP -> alter column id . set not null
    (141) OP -> alter column id . set null
    (146) OP -> alter column id . type TIPO

    set             shift and go to state 615
    type            shift and go to state 616


state 519

    (131) LOP -> LOP coma OP .

    coma            reduce using rule 131 (LOP -> LOP coma OP .)
    ptcoma          reduce using rule 131 (LOP -> LOP coma OP .)


state 520

    (133) OP -> add column id . TIPO
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 617

state 521

    (134) OP -> add check para . CONDCHECK parc
    (190) CONDCHECK -> . EXP mayor EXP
    (191) CONDCHECK -> . EXP menor EXP
    (192) CONDCHECK -> . EXP mayor_igual EXP
    (193) CONDCHECK -> . EXP menor_igual EXP
    (194) CONDCHECK -> . EXP igual EXP
    (195) CONDCHECK -> . EXP diferente1 EXP
    (196) CONDCHECK -> . EXP diferente2 EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    CONDCHECK                      shift and go to state 618
    EXP                            shift and go to state 591
    SELECT                         shift and go to state 72

state 522

    (135) OP -> add constraint id . check para CONDCHECK parc
    (136) OP -> add constraint id . unique para LEXP parc
    (139) OP -> add constraint id . foreign key para LEXP parc references id para LEXP parc

    check           shift and go to state 619
    unique          shift and go to state 620
    foreign         shift and go to state 621


state 523

    (137) OP -> add unique para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 622
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 524

    (138) OP -> add foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 623


state 525

    (142) OP -> drop constraint id .

    coma            reduce using rule 142 (OP -> drop constraint id .)
    ptcoma          reduce using rule 142 (OP -> drop constraint id .)


state 526

    (143) OP -> drop column LEXP .
    (233) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    ptcoma          reduce using rule 143 (OP -> drop column LEXP .)
    coma            shift and go to state 125

  ! coma            [ reduce using rule 143 (OP -> drop column LEXP .) ]


state 527

    (144) OP -> drop check id .

    coma            reduce using rule 144 (OP -> drop check id .)
    ptcoma          reduce using rule 144 (OP -> drop check id .)


state 528

    (145) OP -> rename column id . to id

    to              shift and go to state 624


state 529

    (129) ALTER -> alter index id alter column EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 129 (ALTER -> alter index id alter column EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 530

    (128) ALTER -> alter index if exist id alter . EXP
    (130) ALTER -> alter index if exist id alter . column EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    column          shift and go to state 626
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 625
    SELECT                         shift and go to state 72

state 531

    (76) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF . end if

    end             shift and go to state 627


state 532

    (78) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end . if

    if              shift and go to state 628


state 533

    (80) LELIF -> LELIF elsif . EXP then LISTACONTENIDO
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 629
    SELECT                         shift and go to state 72

state 534

    (77) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end . if

    if              shift and go to state 630


state 535

    (79) CONDICIONIF -> if EXP then LISTACONTENIDO end if .

    ptcoma          reduce using rule 79 (CONDICIONIF -> if EXP then LISTACONTENIDO end if .)


state 536

    (81) LELIF -> elsif EXP . then LISTACONTENIDO
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    then            shift and go to state 631
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 537

    (64) LDEC -> LDEC DECLARACIONES .

    id              reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    end             reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    elsif           reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    else            reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    declare         reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    if              reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    raise           reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    begin           reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    execute         reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    return          reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    insert          reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    select          reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    update          reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    delete          reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    case            reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    when            reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)
    dolarn          reduce using rule 64 (LDEC -> LDEC DECLARACIONES .)


state 538

    (66) DECLARACIONES -> id TIPO . not null ASIG ptcoma
    (67) DECLARACIONES -> id TIPO . ASIG ptcoma
    (70) ASIG -> . default EXP
    (71) ASIG -> . igual EXP
    (72) ASIG -> . dospuntos igual EXP
    (73) ASIG -> .

    not             shift and go to state 632
    default         shift and go to state 634
    igual           shift and go to state 635
    dospuntos       shift and go to state 636
    ptcoma          reduce using rule 73 (ASIG -> .)

    ASIG                           shift and go to state 633

state 539

    (68) DECLARACIONES -> id constant . TIPO not null ASIG ptcoma
    (69) DECLARACIONES -> id constant . TIPO ASIG ptcoma
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 637

state 540

    (101) RAISE -> raise LEVEL FORMAT .

    ptcoma          reduce using rule 101 (RAISE -> raise LEVEL FORMAT .)


state 541

    (102) RAISE -> raise LEVEL EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 102 (RAISE -> raise LEVEL EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 542

    (105) RAISE -> raise LEVEL cadena . coma id
    (332) EXP -> cadena . as TIPO
    (335) EXP -> cadena .

  ! shift/reduce conflict for as resolved as shift
    coma            shift and go to state 638
    as              shift and go to state 155
    mas             reduce using rule 335 (EXP -> cadena .)
    menos           reduce using rule 335 (EXP -> cadena .)
    multiplicacion  reduce using rule 335 (EXP -> cadena .)
    division        reduce using rule 335 (EXP -> cadena .)
    modulo          reduce using rule 335 (EXP -> cadena .)
    elevado         reduce using rule 335 (EXP -> cadena .)
    and             reduce using rule 335 (EXP -> cadena .)
    or              reduce using rule 335 (EXP -> cadena .)
    mayor           reduce using rule 335 (EXP -> cadena .)
    menor           reduce using rule 335 (EXP -> cadena .)
    mayor_igual     reduce using rule 335 (EXP -> cadena .)
    menor_igual     reduce using rule 335 (EXP -> cadena .)
    igual           reduce using rule 335 (EXP -> cadena .)
    diferente1      reduce using rule 335 (EXP -> cadena .)
    diferente2      reduce using rule 335 (EXP -> cadena .)
    between         reduce using rule 335 (EXP -> cadena .)
    is              reduce using rule 335 (EXP -> cadena .)
    not             reduce using rule 335 (EXP -> cadena .)
    like            reduce using rule 335 (EXP -> cadena .)
    isnull          reduce using rule 335 (EXP -> cadena .)
    notnull         reduce using rule 335 (EXP -> cadena .)
    cadenaString    reduce using rule 335 (EXP -> cadena .)
    id              reduce using rule 335 (EXP -> cadena .)
    cadena          reduce using rule 335 (EXP -> cadena .)
    in              reduce using rule 335 (EXP -> cadena .)
    ptcoma          reduce using rule 335 (EXP -> cadena .)

  ! as              [ reduce using rule 335 (EXP -> cadena .) ]


state 543

    (111) FORMAT -> format . para EXP coma LEXP parc

    para            shift and go to state 639


state 544

    (49) BEGINEND -> begin LISTACONTENIDO end .

    ptcoma          reduce using rule 49 (BEGINEND -> begin LISTACONTENIDO end .)


state 545

    (116) INSERT -> insert into id values para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 640
    coma            shift and go to state 125


state 546

    (117) INSERT -> insert into id para LEXP parc . values para LEXP parc

    values          shift and go to state 641


state 547

    (83) CASE -> case EXP LISTAWHEN ELSEF end case .

    ptcoma          reduce using rule 83 (CASE -> case EXP LISTAWHEN ELSEF end case .)


state 548

    (232) EXIST -> not exist para SELECT parc .

    ptcoma          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    r_from          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    coma            reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    where           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    group           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    having          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    union           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    intersect       reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    except          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    order           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    limit           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    offset          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    mas             reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    menos           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    multiplicacion  reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    division        reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    modulo          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    elevado         reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    and             reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    or              reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    mayor           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    menor           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    mayor_igual     reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    menor_igual     reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    igual           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    diferente1      reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    diferente2      reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    between         reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    is              reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    not             reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    as              reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    like            reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    isnull          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    notnull         reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    cadenaString    reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    id              reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    cadena          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    in              reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    then            reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    when            reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    parc            reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    constraint      reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    primary         reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    null            reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    unique          reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    references      reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    check           reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    default         reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    asc             reduce using rule 232 (EXIST -> not exist para SELECT parc .)
    desc            reduce using rule 232 (EXIST -> not exist para SELECT parc .)


state 549

    (199) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (220) HAVING -> . having EXP
    (221) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 335
    r_from          reduce using rule 221 (HAVING -> .)
    coma            reduce using rule 221 (HAVING -> .)
    where           reduce using rule 221 (HAVING -> .)
    group           reduce using rule 221 (HAVING -> .)
    union           reduce using rule 221 (HAVING -> .)
    intersect       reduce using rule 221 (HAVING -> .)
    except          reduce using rule 221 (HAVING -> .)
    order           reduce using rule 221 (HAVING -> .)
    limit           reduce using rule 221 (HAVING -> .)
    offset          reduce using rule 221 (HAVING -> .)
    ptcoma          reduce using rule 221 (HAVING -> .)
    mas             reduce using rule 221 (HAVING -> .)
    menos           reduce using rule 221 (HAVING -> .)
    multiplicacion  reduce using rule 221 (HAVING -> .)
    division        reduce using rule 221 (HAVING -> .)
    modulo          reduce using rule 221 (HAVING -> .)
    elevado         reduce using rule 221 (HAVING -> .)
    and             reduce using rule 221 (HAVING -> .)
    or              reduce using rule 221 (HAVING -> .)
    mayor           reduce using rule 221 (HAVING -> .)
    menor           reduce using rule 221 (HAVING -> .)
    mayor_igual     reduce using rule 221 (HAVING -> .)
    menor_igual     reduce using rule 221 (HAVING -> .)
    igual           reduce using rule 221 (HAVING -> .)
    diferente1      reduce using rule 221 (HAVING -> .)
    diferente2      reduce using rule 221 (HAVING -> .)
    between         reduce using rule 221 (HAVING -> .)
    is              reduce using rule 221 (HAVING -> .)
    not             reduce using rule 221 (HAVING -> .)
    as              reduce using rule 221 (HAVING -> .)
    like            reduce using rule 221 (HAVING -> .)
    isnull          reduce using rule 221 (HAVING -> .)
    notnull         reduce using rule 221 (HAVING -> .)
    cadenaString    reduce using rule 221 (HAVING -> .)
    id              reduce using rule 221 (HAVING -> .)
    cadena          reduce using rule 221 (HAVING -> .)
    in              reduce using rule 221 (HAVING -> .)
    then            reduce using rule 221 (HAVING -> .)
    when            reduce using rule 221 (HAVING -> .)
    parc            reduce using rule 221 (HAVING -> .)
    constraint      reduce using rule 221 (HAVING -> .)
    primary         reduce using rule 221 (HAVING -> .)
    null            reduce using rule 221 (HAVING -> .)
    unique          reduce using rule 221 (HAVING -> .)
    references      reduce using rule 221 (HAVING -> .)
    check           reduce using rule 221 (HAVING -> .)
    default         reduce using rule 221 (HAVING -> .)
    asc             reduce using rule 221 (HAVING -> .)
    desc            reduce using rule 221 (HAVING -> .)

  ! having          [ reduce using rule 221 (HAVING -> .) ]

    HAVING                         shift and go to state 642

state 550

    (200) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (213) COMBINING -> . union LEXP
    (214) COMBINING -> . union all LEXP
    (215) COMBINING -> . intersect LEXP
    (216) COMBINING -> . except LEXP
    (217) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 457
    intersect       shift and go to state 458
    except          shift and go to state 459
    r_from          reduce using rule 217 (COMBINING -> .)
    coma            reduce using rule 217 (COMBINING -> .)
    where           reduce using rule 217 (COMBINING -> .)
    group           reduce using rule 217 (COMBINING -> .)
    having          reduce using rule 217 (COMBINING -> .)
    order           reduce using rule 217 (COMBINING -> .)
    limit           reduce using rule 217 (COMBINING -> .)
    offset          reduce using rule 217 (COMBINING -> .)
    ptcoma          reduce using rule 217 (COMBINING -> .)
    mas             reduce using rule 217 (COMBINING -> .)
    menos           reduce using rule 217 (COMBINING -> .)
    multiplicacion  reduce using rule 217 (COMBINING -> .)
    division        reduce using rule 217 (COMBINING -> .)
    modulo          reduce using rule 217 (COMBINING -> .)
    elevado         reduce using rule 217 (COMBINING -> .)
    and             reduce using rule 217 (COMBINING -> .)
    or              reduce using rule 217 (COMBINING -> .)
    mayor           reduce using rule 217 (COMBINING -> .)
    menor           reduce using rule 217 (COMBINING -> .)
    mayor_igual     reduce using rule 217 (COMBINING -> .)
    menor_igual     reduce using rule 217 (COMBINING -> .)
    igual           reduce using rule 217 (COMBINING -> .)
    diferente1      reduce using rule 217 (COMBINING -> .)
    diferente2      reduce using rule 217 (COMBINING -> .)
    between         reduce using rule 217 (COMBINING -> .)
    is              reduce using rule 217 (COMBINING -> .)
    not             reduce using rule 217 (COMBINING -> .)
    as              reduce using rule 217 (COMBINING -> .)
    like            reduce using rule 217 (COMBINING -> .)
    isnull          reduce using rule 217 (COMBINING -> .)
    notnull         reduce using rule 217 (COMBINING -> .)
    cadenaString    reduce using rule 217 (COMBINING -> .)
    id              reduce using rule 217 (COMBINING -> .)
    cadena          reduce using rule 217 (COMBINING -> .)
    in              reduce using rule 217 (COMBINING -> .)
    then            reduce using rule 217 (COMBINING -> .)
    when            reduce using rule 217 (COMBINING -> .)
    parc            reduce using rule 217 (COMBINING -> .)
    constraint      reduce using rule 217 (COMBINING -> .)
    primary         reduce using rule 217 (COMBINING -> .)
    null            reduce using rule 217 (COMBINING -> .)
    unique          reduce using rule 217 (COMBINING -> .)
    references      reduce using rule 217 (COMBINING -> .)
    check           reduce using rule 217 (COMBINING -> .)
    default         reduce using rule 217 (COMBINING -> .)
    asc             reduce using rule 217 (COMBINING -> .)
    desc            reduce using rule 217 (COMBINING -> .)

  ! union           [ reduce using rule 217 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 217 (COMBINING -> .) ]
  ! except          [ reduce using rule 217 (COMBINING -> .) ]

    COMBINING                      shift and go to state 643

state 551

    (201) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (202) LIMIT -> . limit int
    (203) LIMIT -> . limit all
    (204) LIMIT -> . offset int
    (205) LIMIT -> . limit int offset int
    (206) LIMIT -> . offset int limit int
    (207) LIMIT -> . limit all offset int
    (208) LIMIT -> . offset int limit all
    (209) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 645
    offset          shift and go to state 646
    ptcoma          reduce using rule 209 (LIMIT -> .)
    r_from          reduce using rule 209 (LIMIT -> .)
    coma            reduce using rule 209 (LIMIT -> .)
    where           reduce using rule 209 (LIMIT -> .)
    group           reduce using rule 209 (LIMIT -> .)
    having          reduce using rule 209 (LIMIT -> .)
    union           reduce using rule 209 (LIMIT -> .)
    intersect       reduce using rule 209 (LIMIT -> .)
    except          reduce using rule 209 (LIMIT -> .)
    order           reduce using rule 209 (LIMIT -> .)
    mas             reduce using rule 209 (LIMIT -> .)
    menos           reduce using rule 209 (LIMIT -> .)
    multiplicacion  reduce using rule 209 (LIMIT -> .)
    division        reduce using rule 209 (LIMIT -> .)
    modulo          reduce using rule 209 (LIMIT -> .)
    elevado         reduce using rule 209 (LIMIT -> .)
    and             reduce using rule 209 (LIMIT -> .)
    or              reduce using rule 209 (LIMIT -> .)
    mayor           reduce using rule 209 (LIMIT -> .)
    menor           reduce using rule 209 (LIMIT -> .)
    mayor_igual     reduce using rule 209 (LIMIT -> .)
    menor_igual     reduce using rule 209 (LIMIT -> .)
    igual           reduce using rule 209 (LIMIT -> .)
    diferente1      reduce using rule 209 (LIMIT -> .)
    diferente2      reduce using rule 209 (LIMIT -> .)
    between         reduce using rule 209 (LIMIT -> .)
    is              reduce using rule 209 (LIMIT -> .)
    not             reduce using rule 209 (LIMIT -> .)
    as              reduce using rule 209 (LIMIT -> .)
    like            reduce using rule 209 (LIMIT -> .)
    isnull          reduce using rule 209 (LIMIT -> .)
    notnull         reduce using rule 209 (LIMIT -> .)
    cadenaString    reduce using rule 209 (LIMIT -> .)
    id              reduce using rule 209 (LIMIT -> .)
    cadena          reduce using rule 209 (LIMIT -> .)
    in              reduce using rule 209 (LIMIT -> .)
    then            reduce using rule 209 (LIMIT -> .)
    when            reduce using rule 209 (LIMIT -> .)
    parc            reduce using rule 209 (LIMIT -> .)
    constraint      reduce using rule 209 (LIMIT -> .)
    primary         reduce using rule 209 (LIMIT -> .)
    null            reduce using rule 209 (LIMIT -> .)
    unique          reduce using rule 209 (LIMIT -> .)
    references      reduce using rule 209 (LIMIT -> .)
    check           reduce using rule 209 (LIMIT -> .)
    default         reduce using rule 209 (LIMIT -> .)
    asc             reduce using rule 209 (LIMIT -> .)
    desc            reduce using rule 209 (LIMIT -> .)

  ! limit           [ reduce using rule 209 (LIMIT -> .) ]
  ! offset          [ reduce using rule 209 (LIMIT -> .) ]

    LIMIT                          shift and go to state 644

state 552

    (222) ORDER -> order . by LEXP ORD
    (223) ORDER -> order . by LEXP

    by              shift and go to state 647


state 553

    (213) COMBINING -> union LEXP .
    (233) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 213 (COMBINING -> union LEXP .)
    where           reduce using rule 213 (COMBINING -> union LEXP .)
    group           reduce using rule 213 (COMBINING -> union LEXP .)
    having          reduce using rule 213 (COMBINING -> union LEXP .)
    union           reduce using rule 213 (COMBINING -> union LEXP .)
    intersect       reduce using rule 213 (COMBINING -> union LEXP .)
    except          reduce using rule 213 (COMBINING -> union LEXP .)
    order           reduce using rule 213 (COMBINING -> union LEXP .)
    limit           reduce using rule 213 (COMBINING -> union LEXP .)
    offset          reduce using rule 213 (COMBINING -> union LEXP .)
    ptcoma          reduce using rule 213 (COMBINING -> union LEXP .)
    mas             reduce using rule 213 (COMBINING -> union LEXP .)
    menos           reduce using rule 213 (COMBINING -> union LEXP .)
    multiplicacion  reduce using rule 213 (COMBINING -> union LEXP .)
    division        reduce using rule 213 (COMBINING -> union LEXP .)
    modulo          reduce using rule 213 (COMBINING -> union LEXP .)
    elevado         reduce using rule 213 (COMBINING -> union LEXP .)
    and             reduce using rule 213 (COMBINING -> union LEXP .)
    or              reduce using rule 213 (COMBINING -> union LEXP .)
    mayor           reduce using rule 213 (COMBINING -> union LEXP .)
    menor           reduce using rule 213 (COMBINING -> union LEXP .)
    mayor_igual     reduce using rule 213 (COMBINING -> union LEXP .)
    menor_igual     reduce using rule 213 (COMBINING -> union LEXP .)
    igual           reduce using rule 213 (COMBINING -> union LEXP .)
    diferente1      reduce using rule 213 (COMBINING -> union LEXP .)
    diferente2      reduce using rule 213 (COMBINING -> union LEXP .)
    between         reduce using rule 213 (COMBINING -> union LEXP .)
    is              reduce using rule 213 (COMBINING -> union LEXP .)
    not             reduce using rule 213 (COMBINING -> union LEXP .)
    as              reduce using rule 213 (COMBINING -> union LEXP .)
    like            reduce using rule 213 (COMBINING -> union LEXP .)
    isnull          reduce using rule 213 (COMBINING -> union LEXP .)
    notnull         reduce using rule 213 (COMBINING -> union LEXP .)
    cadenaString    reduce using rule 213 (COMBINING -> union LEXP .)
    id              reduce using rule 213 (COMBINING -> union LEXP .)
    cadena          reduce using rule 213 (COMBINING -> union LEXP .)
    in              reduce using rule 213 (COMBINING -> union LEXP .)
    then            reduce using rule 213 (COMBINING -> union LEXP .)
    when            reduce using rule 213 (COMBINING -> union LEXP .)
    parc            reduce using rule 213 (COMBINING -> union LEXP .)
    constraint      reduce using rule 213 (COMBINING -> union LEXP .)
    primary         reduce using rule 213 (COMBINING -> union LEXP .)
    null            reduce using rule 213 (COMBINING -> union LEXP .)
    unique          reduce using rule 213 (COMBINING -> union LEXP .)
    references      reduce using rule 213 (COMBINING -> union LEXP .)
    check           reduce using rule 213 (COMBINING -> union LEXP .)
    default         reduce using rule 213 (COMBINING -> union LEXP .)
    asc             reduce using rule 213 (COMBINING -> union LEXP .)
    desc            reduce using rule 213 (COMBINING -> union LEXP .)
    coma            shift and go to state 125

  ! coma            [ reduce using rule 213 (COMBINING -> union LEXP .) ]


state 554

    (214) COMBINING -> union all . LEXP
    (329) EXP -> all . para LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    para            shift and go to state 649
    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 648
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 555

    (215) COMBINING -> intersect LEXP .
    (233) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 215 (COMBINING -> intersect LEXP .)
    where           reduce using rule 215 (COMBINING -> intersect LEXP .)
    group           reduce using rule 215 (COMBINING -> intersect LEXP .)
    having          reduce using rule 215 (COMBINING -> intersect LEXP .)
    union           reduce using rule 215 (COMBINING -> intersect LEXP .)
    intersect       reduce using rule 215 (COMBINING -> intersect LEXP .)
    except          reduce using rule 215 (COMBINING -> intersect LEXP .)
    order           reduce using rule 215 (COMBINING -> intersect LEXP .)
    limit           reduce using rule 215 (COMBINING -> intersect LEXP .)
    offset          reduce using rule 215 (COMBINING -> intersect LEXP .)
    ptcoma          reduce using rule 215 (COMBINING -> intersect LEXP .)
    mas             reduce using rule 215 (COMBINING -> intersect LEXP .)
    menos           reduce using rule 215 (COMBINING -> intersect LEXP .)
    multiplicacion  reduce using rule 215 (COMBINING -> intersect LEXP .)
    division        reduce using rule 215 (COMBINING -> intersect LEXP .)
    modulo          reduce using rule 215 (COMBINING -> intersect LEXP .)
    elevado         reduce using rule 215 (COMBINING -> intersect LEXP .)
    and             reduce using rule 215 (COMBINING -> intersect LEXP .)
    or              reduce using rule 215 (COMBINING -> intersect LEXP .)
    mayor           reduce using rule 215 (COMBINING -> intersect LEXP .)
    menor           reduce using rule 215 (COMBINING -> intersect LEXP .)
    mayor_igual     reduce using rule 215 (COMBINING -> intersect LEXP .)
    menor_igual     reduce using rule 215 (COMBINING -> intersect LEXP .)
    igual           reduce using rule 215 (COMBINING -> intersect LEXP .)
    diferente1      reduce using rule 215 (COMBINING -> intersect LEXP .)
    diferente2      reduce using rule 215 (COMBINING -> intersect LEXP .)
    between         reduce using rule 215 (COMBINING -> intersect LEXP .)
    is              reduce using rule 215 (COMBINING -> intersect LEXP .)
    not             reduce using rule 215 (COMBINING -> intersect LEXP .)
    as              reduce using rule 215 (COMBINING -> intersect LEXP .)
    like            reduce using rule 215 (COMBINING -> intersect LEXP .)
    isnull          reduce using rule 215 (COMBINING -> intersect LEXP .)
    notnull         reduce using rule 215 (COMBINING -> intersect LEXP .)
    cadenaString    reduce using rule 215 (COMBINING -> intersect LEXP .)
    id              reduce using rule 215 (COMBINING -> intersect LEXP .)
    cadena          reduce using rule 215 (COMBINING -> intersect LEXP .)
    in              reduce using rule 215 (COMBINING -> intersect LEXP .)
    then            reduce using rule 215 (COMBINING -> intersect LEXP .)
    when            reduce using rule 215 (COMBINING -> intersect LEXP .)
    parc            reduce using rule 215 (COMBINING -> intersect LEXP .)
    constraint      reduce using rule 215 (COMBINING -> intersect LEXP .)
    primary         reduce using rule 215 (COMBINING -> intersect LEXP .)
    null            reduce using rule 215 (COMBINING -> intersect LEXP .)
    unique          reduce using rule 215 (COMBINING -> intersect LEXP .)
    references      reduce using rule 215 (COMBINING -> intersect LEXP .)
    check           reduce using rule 215 (COMBINING -> intersect LEXP .)
    default         reduce using rule 215 (COMBINING -> intersect LEXP .)
    asc             reduce using rule 215 (COMBINING -> intersect LEXP .)
    desc            reduce using rule 215 (COMBINING -> intersect LEXP .)
    coma            shift and go to state 125

  ! coma            [ reduce using rule 215 (COMBINING -> intersect LEXP .) ]


state 556

    (216) COMBINING -> except LEXP .
    (233) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 216 (COMBINING -> except LEXP .)
    where           reduce using rule 216 (COMBINING -> except LEXP .)
    group           reduce using rule 216 (COMBINING -> except LEXP .)
    having          reduce using rule 216 (COMBINING -> except LEXP .)
    union           reduce using rule 216 (COMBINING -> except LEXP .)
    intersect       reduce using rule 216 (COMBINING -> except LEXP .)
    except          reduce using rule 216 (COMBINING -> except LEXP .)
    order           reduce using rule 216 (COMBINING -> except LEXP .)
    limit           reduce using rule 216 (COMBINING -> except LEXP .)
    offset          reduce using rule 216 (COMBINING -> except LEXP .)
    ptcoma          reduce using rule 216 (COMBINING -> except LEXP .)
    mas             reduce using rule 216 (COMBINING -> except LEXP .)
    menos           reduce using rule 216 (COMBINING -> except LEXP .)
    multiplicacion  reduce using rule 216 (COMBINING -> except LEXP .)
    division        reduce using rule 216 (COMBINING -> except LEXP .)
    modulo          reduce using rule 216 (COMBINING -> except LEXP .)
    elevado         reduce using rule 216 (COMBINING -> except LEXP .)
    and             reduce using rule 216 (COMBINING -> except LEXP .)
    or              reduce using rule 216 (COMBINING -> except LEXP .)
    mayor           reduce using rule 216 (COMBINING -> except LEXP .)
    menor           reduce using rule 216 (COMBINING -> except LEXP .)
    mayor_igual     reduce using rule 216 (COMBINING -> except LEXP .)
    menor_igual     reduce using rule 216 (COMBINING -> except LEXP .)
    igual           reduce using rule 216 (COMBINING -> except LEXP .)
    diferente1      reduce using rule 216 (COMBINING -> except LEXP .)
    diferente2      reduce using rule 216 (COMBINING -> except LEXP .)
    between         reduce using rule 216 (COMBINING -> except LEXP .)
    is              reduce using rule 216 (COMBINING -> except LEXP .)
    not             reduce using rule 216 (COMBINING -> except LEXP .)
    as              reduce using rule 216 (COMBINING -> except LEXP .)
    like            reduce using rule 216 (COMBINING -> except LEXP .)
    isnull          reduce using rule 216 (COMBINING -> except LEXP .)
    notnull         reduce using rule 216 (COMBINING -> except LEXP .)
    cadenaString    reduce using rule 216 (COMBINING -> except LEXP .)
    id              reduce using rule 216 (COMBINING -> except LEXP .)
    cadena          reduce using rule 216 (COMBINING -> except LEXP .)
    in              reduce using rule 216 (COMBINING -> except LEXP .)
    then            reduce using rule 216 (COMBINING -> except LEXP .)
    when            reduce using rule 216 (COMBINING -> except LEXP .)
    parc            reduce using rule 216 (COMBINING -> except LEXP .)
    constraint      reduce using rule 216 (COMBINING -> except LEXP .)
    primary         reduce using rule 216 (COMBINING -> except LEXP .)
    null            reduce using rule 216 (COMBINING -> except LEXP .)
    unique          reduce using rule 216 (COMBINING -> except LEXP .)
    references      reduce using rule 216 (COMBINING -> except LEXP .)
    check           reduce using rule 216 (COMBINING -> except LEXP .)
    default         reduce using rule 216 (COMBINING -> except LEXP .)
    asc             reduce using rule 216 (COMBINING -> except LEXP .)
    desc            reduce using rule 216 (COMBINING -> except LEXP .)
    coma            shift and go to state 125

  ! coma            [ reduce using rule 216 (COMBINING -> except LEXP .) ]


state 557

    (321) EXP -> EXP is not distinct r_from EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    r_from          reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    where           reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    group           reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    having          reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    union           reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    except          reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    order           reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    and             reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    or              reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    between         reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    is              reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    not             reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    as              reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    like            reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    cadenaString    reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    id              reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    cadena          reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    in              reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    then            reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    when            reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    null            reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    unique          reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    references      reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    check           reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    default         reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140

  ! mas             [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menos           [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! division        [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor           [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! igual           [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 321 (EXP -> EXP is not distinct r_from EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 558

    (320) EXP -> EXP not in para LEXP parc .

    r_from          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    coma            reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    where           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    group           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    having          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    union           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    intersect       reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    except          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    order           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    limit           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    offset          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    ptcoma          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    mas             reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    menos           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    multiplicacion  reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    division        reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    modulo          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    elevado         reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    and             reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    or              reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    mayor           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    menor           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    mayor_igual     reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    menor_igual     reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    igual           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    diferente1      reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    diferente2      reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    between         reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    is              reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    not             reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    as              reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    like            reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    isnull          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    notnull         reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    cadenaString    reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    id              reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    cadena          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    in              reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    then            reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    when            reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    parc            reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    constraint      reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    primary         reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    null            reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    unique          reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    references      reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    check           reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    default         reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    asc             reduce using rule 320 (EXP -> EXP not in para LEXP parc .)
    desc            reduce using rule 320 (EXP -> EXP not in para LEXP parc .)


state 559

    (235) TIPO -> decimal para LEXP parc .

    r_from          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    coma            reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    where           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    group           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    having          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    union           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    intersect       reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    except          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    order           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    limit           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    offset          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    ptcoma          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    mas             reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    menos           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    multiplicacion  reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    division        reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    modulo          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    elevado         reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    and             reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    or              reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    mayor           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    menor           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    mayor_igual     reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    menor_igual     reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    igual           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    diferente1      reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    diferente2      reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    between         reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    is              reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    not             reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    as              reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    like            reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    isnull          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    notnull         reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    cadenaString    reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    id              reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    cadena          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    in              reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    then            reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    when            reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    parc            reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    constraint      reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    primary         reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    null            reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    unique          reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    references      reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    check           reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    default         reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    asc             reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    desc            reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    dospuntos       reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    language        reduce using rule 235 (TIPO -> decimal para LEXP parc .)
    do              reduce using rule 235 (TIPO -> decimal para LEXP parc .)


state 560

    (236) TIPO -> numeric para LEXP parc .

    r_from          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    coma            reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    where           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    group           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    having          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    union           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    intersect       reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    except          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    order           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    limit           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    offset          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    ptcoma          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    mas             reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    menos           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    multiplicacion  reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    division        reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    modulo          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    elevado         reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    and             reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    or              reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    mayor           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    menor           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    mayor_igual     reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    menor_igual     reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    igual           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    diferente1      reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    diferente2      reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    between         reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    is              reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    not             reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    as              reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    like            reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    isnull          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    notnull         reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    cadenaString    reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    id              reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    cadena          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    in              reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    then            reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    when            reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    parc            reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    constraint      reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    primary         reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    null            reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    unique          reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    references      reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    check           reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    default         reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    asc             reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    desc            reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    dospuntos       reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    language        reduce using rule 236 (TIPO -> numeric para LEXP parc .)
    do              reduce using rule 236 (TIPO -> numeric para LEXP parc .)


state 561

    (237) TIPO -> varchar para int parc .

    r_from          reduce using rule 237 (TIPO -> varchar para int parc .)
    coma            reduce using rule 237 (TIPO -> varchar para int parc .)
    where           reduce using rule 237 (TIPO -> varchar para int parc .)
    group           reduce using rule 237 (TIPO -> varchar para int parc .)
    having          reduce using rule 237 (TIPO -> varchar para int parc .)
    union           reduce using rule 237 (TIPO -> varchar para int parc .)
    intersect       reduce using rule 237 (TIPO -> varchar para int parc .)
    except          reduce using rule 237 (TIPO -> varchar para int parc .)
    order           reduce using rule 237 (TIPO -> varchar para int parc .)
    limit           reduce using rule 237 (TIPO -> varchar para int parc .)
    offset          reduce using rule 237 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 237 (TIPO -> varchar para int parc .)
    mas             reduce using rule 237 (TIPO -> varchar para int parc .)
    menos           reduce using rule 237 (TIPO -> varchar para int parc .)
    multiplicacion  reduce using rule 237 (TIPO -> varchar para int parc .)
    division        reduce using rule 237 (TIPO -> varchar para int parc .)
    modulo          reduce using rule 237 (TIPO -> varchar para int parc .)
    elevado         reduce using rule 237 (TIPO -> varchar para int parc .)
    and             reduce using rule 237 (TIPO -> varchar para int parc .)
    or              reduce using rule 237 (TIPO -> varchar para int parc .)
    mayor           reduce using rule 237 (TIPO -> varchar para int parc .)
    menor           reduce using rule 237 (TIPO -> varchar para int parc .)
    mayor_igual     reduce using rule 237 (TIPO -> varchar para int parc .)
    menor_igual     reduce using rule 237 (TIPO -> varchar para int parc .)
    igual           reduce using rule 237 (TIPO -> varchar para int parc .)
    diferente1      reduce using rule 237 (TIPO -> varchar para int parc .)
    diferente2      reduce using rule 237 (TIPO -> varchar para int parc .)
    between         reduce using rule 237 (TIPO -> varchar para int parc .)
    is              reduce using rule 237 (TIPO -> varchar para int parc .)
    not             reduce using rule 237 (TIPO -> varchar para int parc .)
    as              reduce using rule 237 (TIPO -> varchar para int parc .)
    like            reduce using rule 237 (TIPO -> varchar para int parc .)
    isnull          reduce using rule 237 (TIPO -> varchar para int parc .)
    notnull         reduce using rule 237 (TIPO -> varchar para int parc .)
    cadenaString    reduce using rule 237 (TIPO -> varchar para int parc .)
    id              reduce using rule 237 (TIPO -> varchar para int parc .)
    cadena          reduce using rule 237 (TIPO -> varchar para int parc .)
    in              reduce using rule 237 (TIPO -> varchar para int parc .)
    then            reduce using rule 237 (TIPO -> varchar para int parc .)
    when            reduce using rule 237 (TIPO -> varchar para int parc .)
    parc            reduce using rule 237 (TIPO -> varchar para int parc .)
    constraint      reduce using rule 237 (TIPO -> varchar para int parc .)
    primary         reduce using rule 237 (TIPO -> varchar para int parc .)
    null            reduce using rule 237 (TIPO -> varchar para int parc .)
    unique          reduce using rule 237 (TIPO -> varchar para int parc .)
    references      reduce using rule 237 (TIPO -> varchar para int parc .)
    check           reduce using rule 237 (TIPO -> varchar para int parc .)
    default         reduce using rule 237 (TIPO -> varchar para int parc .)
    asc             reduce using rule 237 (TIPO -> varchar para int parc .)
    desc            reduce using rule 237 (TIPO -> varchar para int parc .)
    dospuntos       reduce using rule 237 (TIPO -> varchar para int parc .)
    language        reduce using rule 237 (TIPO -> varchar para int parc .)
    do              reduce using rule 237 (TIPO -> varchar para int parc .)


state 562

    (238) TIPO -> timestamp para int parc .
    (247) TIPO -> timestamp para int parc . without time zone
    (248) TIPO -> timestamp para int parc . with time zone

    r_from          reduce using rule 238 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 238 (TIPO -> timestamp para int parc .)
    where           reduce using rule 238 (TIPO -> timestamp para int parc .)
    group           reduce using rule 238 (TIPO -> timestamp para int parc .)
    having          reduce using rule 238 (TIPO -> timestamp para int parc .)
    union           reduce using rule 238 (TIPO -> timestamp para int parc .)
    intersect       reduce using rule 238 (TIPO -> timestamp para int parc .)
    except          reduce using rule 238 (TIPO -> timestamp para int parc .)
    order           reduce using rule 238 (TIPO -> timestamp para int parc .)
    limit           reduce using rule 238 (TIPO -> timestamp para int parc .)
    offset          reduce using rule 238 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 238 (TIPO -> timestamp para int parc .)
    mas             reduce using rule 238 (TIPO -> timestamp para int parc .)
    menos           reduce using rule 238 (TIPO -> timestamp para int parc .)
    multiplicacion  reduce using rule 238 (TIPO -> timestamp para int parc .)
    division        reduce using rule 238 (TIPO -> timestamp para int parc .)
    modulo          reduce using rule 238 (TIPO -> timestamp para int parc .)
    elevado         reduce using rule 238 (TIPO -> timestamp para int parc .)
    and             reduce using rule 238 (TIPO -> timestamp para int parc .)
    or              reduce using rule 238 (TIPO -> timestamp para int parc .)
    mayor           reduce using rule 238 (TIPO -> timestamp para int parc .)
    menor           reduce using rule 238 (TIPO -> timestamp para int parc .)
    mayor_igual     reduce using rule 238 (TIPO -> timestamp para int parc .)
    menor_igual     reduce using rule 238 (TIPO -> timestamp para int parc .)
    igual           reduce using rule 238 (TIPO -> timestamp para int parc .)
    diferente1      reduce using rule 238 (TIPO -> timestamp para int parc .)
    diferente2      reduce using rule 238 (TIPO -> timestamp para int parc .)
    between         reduce using rule 238 (TIPO -> timestamp para int parc .)
    is              reduce using rule 238 (TIPO -> timestamp para int parc .)
    not             reduce using rule 238 (TIPO -> timestamp para int parc .)
    as              reduce using rule 238 (TIPO -> timestamp para int parc .)
    like            reduce using rule 238 (TIPO -> timestamp para int parc .)
    isnull          reduce using rule 238 (TIPO -> timestamp para int parc .)
    notnull         reduce using rule 238 (TIPO -> timestamp para int parc .)
    cadenaString    reduce using rule 238 (TIPO -> timestamp para int parc .)
    id              reduce using rule 238 (TIPO -> timestamp para int parc .)
    cadena          reduce using rule 238 (TIPO -> timestamp para int parc .)
    in              reduce using rule 238 (TIPO -> timestamp para int parc .)
    then            reduce using rule 238 (TIPO -> timestamp para int parc .)
    when            reduce using rule 238 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 238 (TIPO -> timestamp para int parc .)
    constraint      reduce using rule 238 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 238 (TIPO -> timestamp para int parc .)
    null            reduce using rule 238 (TIPO -> timestamp para int parc .)
    unique          reduce using rule 238 (TIPO -> timestamp para int parc .)
    references      reduce using rule 238 (TIPO -> timestamp para int parc .)
    check           reduce using rule 238 (TIPO -> timestamp para int parc .)
    default         reduce using rule 238 (TIPO -> timestamp para int parc .)
    asc             reduce using rule 238 (TIPO -> timestamp para int parc .)
    desc            reduce using rule 238 (TIPO -> timestamp para int parc .)
    dospuntos       reduce using rule 238 (TIPO -> timestamp para int parc .)
    language        reduce using rule 238 (TIPO -> timestamp para int parc .)
    do              reduce using rule 238 (TIPO -> timestamp para int parc .)
    without         shift and go to state 650
    with            shift and go to state 651


state 563

    (270) TIPO -> timestamp without time zone .

    r_from          reduce using rule 270 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 270 (TIPO -> timestamp without time zone .)
    where           reduce using rule 270 (TIPO -> timestamp without time zone .)
    group           reduce using rule 270 (TIPO -> timestamp without time zone .)
    having          reduce using rule 270 (TIPO -> timestamp without time zone .)
    union           reduce using rule 270 (TIPO -> timestamp without time zone .)
    intersect       reduce using rule 270 (TIPO -> timestamp without time zone .)
    except          reduce using rule 270 (TIPO -> timestamp without time zone .)
    order           reduce using rule 270 (TIPO -> timestamp without time zone .)
    limit           reduce using rule 270 (TIPO -> timestamp without time zone .)
    offset          reduce using rule 270 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 270 (TIPO -> timestamp without time zone .)
    mas             reduce using rule 270 (TIPO -> timestamp without time zone .)
    menos           reduce using rule 270 (TIPO -> timestamp without time zone .)
    multiplicacion  reduce using rule 270 (TIPO -> timestamp without time zone .)
    division        reduce using rule 270 (TIPO -> timestamp without time zone .)
    modulo          reduce using rule 270 (TIPO -> timestamp without time zone .)
    elevado         reduce using rule 270 (TIPO -> timestamp without time zone .)
    and             reduce using rule 270 (TIPO -> timestamp without time zone .)
    or              reduce using rule 270 (TIPO -> timestamp without time zone .)
    mayor           reduce using rule 270 (TIPO -> timestamp without time zone .)
    menor           reduce using rule 270 (TIPO -> timestamp without time zone .)
    mayor_igual     reduce using rule 270 (TIPO -> timestamp without time zone .)
    menor_igual     reduce using rule 270 (TIPO -> timestamp without time zone .)
    igual           reduce using rule 270 (TIPO -> timestamp without time zone .)
    diferente1      reduce using rule 270 (TIPO -> timestamp without time zone .)
    diferente2      reduce using rule 270 (TIPO -> timestamp without time zone .)
    between         reduce using rule 270 (TIPO -> timestamp without time zone .)
    is              reduce using rule 270 (TIPO -> timestamp without time zone .)
    not             reduce using rule 270 (TIPO -> timestamp without time zone .)
    as              reduce using rule 270 (TIPO -> timestamp without time zone .)
    like            reduce using rule 270 (TIPO -> timestamp without time zone .)
    isnull          reduce using rule 270 (TIPO -> timestamp without time zone .)
    notnull         reduce using rule 270 (TIPO -> timestamp without time zone .)
    cadenaString    reduce using rule 270 (TIPO -> timestamp without time zone .)
    id              reduce using rule 270 (TIPO -> timestamp without time zone .)
    cadena          reduce using rule 270 (TIPO -> timestamp without time zone .)
    in              reduce using rule 270 (TIPO -> timestamp without time zone .)
    then            reduce using rule 270 (TIPO -> timestamp without time zone .)
    when            reduce using rule 270 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 270 (TIPO -> timestamp without time zone .)
    constraint      reduce using rule 270 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 270 (TIPO -> timestamp without time zone .)
    null            reduce using rule 270 (TIPO -> timestamp without time zone .)
    unique          reduce using rule 270 (TIPO -> timestamp without time zone .)
    references      reduce using rule 270 (TIPO -> timestamp without time zone .)
    check           reduce using rule 270 (TIPO -> timestamp without time zone .)
    default         reduce using rule 270 (TIPO -> timestamp without time zone .)
    asc             reduce using rule 270 (TIPO -> timestamp without time zone .)
    desc            reduce using rule 270 (TIPO -> timestamp without time zone .)
    dospuntos       reduce using rule 270 (TIPO -> timestamp without time zone .)
    language        reduce using rule 270 (TIPO -> timestamp without time zone .)
    do              reduce using rule 270 (TIPO -> timestamp without time zone .)


state 564

    (271) TIPO -> timestamp with time zone .

    r_from          reduce using rule 271 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 271 (TIPO -> timestamp with time zone .)
    where           reduce using rule 271 (TIPO -> timestamp with time zone .)
    group           reduce using rule 271 (TIPO -> timestamp with time zone .)
    having          reduce using rule 271 (TIPO -> timestamp with time zone .)
    union           reduce using rule 271 (TIPO -> timestamp with time zone .)
    intersect       reduce using rule 271 (TIPO -> timestamp with time zone .)
    except          reduce using rule 271 (TIPO -> timestamp with time zone .)
    order           reduce using rule 271 (TIPO -> timestamp with time zone .)
    limit           reduce using rule 271 (TIPO -> timestamp with time zone .)
    offset          reduce using rule 271 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 271 (TIPO -> timestamp with time zone .)
    mas             reduce using rule 271 (TIPO -> timestamp with time zone .)
    menos           reduce using rule 271 (TIPO -> timestamp with time zone .)
    multiplicacion  reduce using rule 271 (TIPO -> timestamp with time zone .)
    division        reduce using rule 271 (TIPO -> timestamp with time zone .)
    modulo          reduce using rule 271 (TIPO -> timestamp with time zone .)
    elevado         reduce using rule 271 (TIPO -> timestamp with time zone .)
    and             reduce using rule 271 (TIPO -> timestamp with time zone .)
    or              reduce using rule 271 (TIPO -> timestamp with time zone .)
    mayor           reduce using rule 271 (TIPO -> timestamp with time zone .)
    menor           reduce using rule 271 (TIPO -> timestamp with time zone .)
    mayor_igual     reduce using rule 271 (TIPO -> timestamp with time zone .)
    menor_igual     reduce using rule 271 (TIPO -> timestamp with time zone .)
    igual           reduce using rule 271 (TIPO -> timestamp with time zone .)
    diferente1      reduce using rule 271 (TIPO -> timestamp with time zone .)
    diferente2      reduce using rule 271 (TIPO -> timestamp with time zone .)
    between         reduce using rule 271 (TIPO -> timestamp with time zone .)
    is              reduce using rule 271 (TIPO -> timestamp with time zone .)
    not             reduce using rule 271 (TIPO -> timestamp with time zone .)
    as              reduce using rule 271 (TIPO -> timestamp with time zone .)
    like            reduce using rule 271 (TIPO -> timestamp with time zone .)
    isnull          reduce using rule 271 (TIPO -> timestamp with time zone .)
    notnull         reduce using rule 271 (TIPO -> timestamp with time zone .)
    cadenaString    reduce using rule 271 (TIPO -> timestamp with time zone .)
    id              reduce using rule 271 (TIPO -> timestamp with time zone .)
    cadena          reduce using rule 271 (TIPO -> timestamp with time zone .)
    in              reduce using rule 271 (TIPO -> timestamp with time zone .)
    then            reduce using rule 271 (TIPO -> timestamp with time zone .)
    when            reduce using rule 271 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 271 (TIPO -> timestamp with time zone .)
    constraint      reduce using rule 271 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 271 (TIPO -> timestamp with time zone .)
    null            reduce using rule 271 (TIPO -> timestamp with time zone .)
    unique          reduce using rule 271 (TIPO -> timestamp with time zone .)
    references      reduce using rule 271 (TIPO -> timestamp with time zone .)
    check           reduce using rule 271 (TIPO -> timestamp with time zone .)
    default         reduce using rule 271 (TIPO -> timestamp with time zone .)
    asc             reduce using rule 271 (TIPO -> timestamp with time zone .)
    desc            reduce using rule 271 (TIPO -> timestamp with time zone .)
    dospuntos       reduce using rule 271 (TIPO -> timestamp with time zone .)
    language        reduce using rule 271 (TIPO -> timestamp with time zone .)
    do              reduce using rule 271 (TIPO -> timestamp with time zone .)


state 565

    (239) TIPO -> character para int parc .

    r_from          reduce using rule 239 (TIPO -> character para int parc .)
    coma            reduce using rule 239 (TIPO -> character para int parc .)
    where           reduce using rule 239 (TIPO -> character para int parc .)
    group           reduce using rule 239 (TIPO -> character para int parc .)
    having          reduce using rule 239 (TIPO -> character para int parc .)
    union           reduce using rule 239 (TIPO -> character para int parc .)
    intersect       reduce using rule 239 (TIPO -> character para int parc .)
    except          reduce using rule 239 (TIPO -> character para int parc .)
    order           reduce using rule 239 (TIPO -> character para int parc .)
    limit           reduce using rule 239 (TIPO -> character para int parc .)
    offset          reduce using rule 239 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 239 (TIPO -> character para int parc .)
    mas             reduce using rule 239 (TIPO -> character para int parc .)
    menos           reduce using rule 239 (TIPO -> character para int parc .)
    multiplicacion  reduce using rule 239 (TIPO -> character para int parc .)
    division        reduce using rule 239 (TIPO -> character para int parc .)
    modulo          reduce using rule 239 (TIPO -> character para int parc .)
    elevado         reduce using rule 239 (TIPO -> character para int parc .)
    and             reduce using rule 239 (TIPO -> character para int parc .)
    or              reduce using rule 239 (TIPO -> character para int parc .)
    mayor           reduce using rule 239 (TIPO -> character para int parc .)
    menor           reduce using rule 239 (TIPO -> character para int parc .)
    mayor_igual     reduce using rule 239 (TIPO -> character para int parc .)
    menor_igual     reduce using rule 239 (TIPO -> character para int parc .)
    igual           reduce using rule 239 (TIPO -> character para int parc .)
    diferente1      reduce using rule 239 (TIPO -> character para int parc .)
    diferente2      reduce using rule 239 (TIPO -> character para int parc .)
    between         reduce using rule 239 (TIPO -> character para int parc .)
    is              reduce using rule 239 (TIPO -> character para int parc .)
    not             reduce using rule 239 (TIPO -> character para int parc .)
    as              reduce using rule 239 (TIPO -> character para int parc .)
    like            reduce using rule 239 (TIPO -> character para int parc .)
    isnull          reduce using rule 239 (TIPO -> character para int parc .)
    notnull         reduce using rule 239 (TIPO -> character para int parc .)
    cadenaString    reduce using rule 239 (TIPO -> character para int parc .)
    id              reduce using rule 239 (TIPO -> character para int parc .)
    cadena          reduce using rule 239 (TIPO -> character para int parc .)
    in              reduce using rule 239 (TIPO -> character para int parc .)
    then            reduce using rule 239 (TIPO -> character para int parc .)
    when            reduce using rule 239 (TIPO -> character para int parc .)
    parc            reduce using rule 239 (TIPO -> character para int parc .)
    constraint      reduce using rule 239 (TIPO -> character para int parc .)
    primary         reduce using rule 239 (TIPO -> character para int parc .)
    null            reduce using rule 239 (TIPO -> character para int parc .)
    unique          reduce using rule 239 (TIPO -> character para int parc .)
    references      reduce using rule 239 (TIPO -> character para int parc .)
    check           reduce using rule 239 (TIPO -> character para int parc .)
    default         reduce using rule 239 (TIPO -> character para int parc .)
    asc             reduce using rule 239 (TIPO -> character para int parc .)
    desc            reduce using rule 239 (TIPO -> character para int parc .)
    dospuntos       reduce using rule 239 (TIPO -> character para int parc .)
    language        reduce using rule 239 (TIPO -> character para int parc .)
    do              reduce using rule 239 (TIPO -> character para int parc .)


state 566

    (243) TIPO -> character varying para int . parc

    parc            shift and go to state 652


state 567

    (240) TIPO -> interval para int parc .
    (251) TIPO -> interval para int parc . cadena

  ! shift/reduce conflict for cadena resolved as shift
    r_from          reduce using rule 240 (TIPO -> interval para int parc .)
    coma            reduce using rule 240 (TIPO -> interval para int parc .)
    where           reduce using rule 240 (TIPO -> interval para int parc .)
    group           reduce using rule 240 (TIPO -> interval para int parc .)
    having          reduce using rule 240 (TIPO -> interval para int parc .)
    union           reduce using rule 240 (TIPO -> interval para int parc .)
    intersect       reduce using rule 240 (TIPO -> interval para int parc .)
    except          reduce using rule 240 (TIPO -> interval para int parc .)
    order           reduce using rule 240 (TIPO -> interval para int parc .)
    limit           reduce using rule 240 (TIPO -> interval para int parc .)
    offset          reduce using rule 240 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 240 (TIPO -> interval para int parc .)
    mas             reduce using rule 240 (TIPO -> interval para int parc .)
    menos           reduce using rule 240 (TIPO -> interval para int parc .)
    multiplicacion  reduce using rule 240 (TIPO -> interval para int parc .)
    division        reduce using rule 240 (TIPO -> interval para int parc .)
    modulo          reduce using rule 240 (TIPO -> interval para int parc .)
    elevado         reduce using rule 240 (TIPO -> interval para int parc .)
    and             reduce using rule 240 (TIPO -> interval para int parc .)
    or              reduce using rule 240 (TIPO -> interval para int parc .)
    mayor           reduce using rule 240 (TIPO -> interval para int parc .)
    menor           reduce using rule 240 (TIPO -> interval para int parc .)
    mayor_igual     reduce using rule 240 (TIPO -> interval para int parc .)
    menor_igual     reduce using rule 240 (TIPO -> interval para int parc .)
    igual           reduce using rule 240 (TIPO -> interval para int parc .)
    diferente1      reduce using rule 240 (TIPO -> interval para int parc .)
    diferente2      reduce using rule 240 (TIPO -> interval para int parc .)
    between         reduce using rule 240 (TIPO -> interval para int parc .)
    is              reduce using rule 240 (TIPO -> interval para int parc .)
    not             reduce using rule 240 (TIPO -> interval para int parc .)
    as              reduce using rule 240 (TIPO -> interval para int parc .)
    like            reduce using rule 240 (TIPO -> interval para int parc .)
    isnull          reduce using rule 240 (TIPO -> interval para int parc .)
    notnull         reduce using rule 240 (TIPO -> interval para int parc .)
    cadenaString    reduce using rule 240 (TIPO -> interval para int parc .)
    id              reduce using rule 240 (TIPO -> interval para int parc .)
    in              reduce using rule 240 (TIPO -> interval para int parc .)
    then            reduce using rule 240 (TIPO -> interval para int parc .)
    when            reduce using rule 240 (TIPO -> interval para int parc .)
    parc            reduce using rule 240 (TIPO -> interval para int parc .)
    constraint      reduce using rule 240 (TIPO -> interval para int parc .)
    primary         reduce using rule 240 (TIPO -> interval para int parc .)
    null            reduce using rule 240 (TIPO -> interval para int parc .)
    unique          reduce using rule 240 (TIPO -> interval para int parc .)
    references      reduce using rule 240 (TIPO -> interval para int parc .)
    check           reduce using rule 240 (TIPO -> interval para int parc .)
    default         reduce using rule 240 (TIPO -> interval para int parc .)
    asc             reduce using rule 240 (TIPO -> interval para int parc .)
    desc            reduce using rule 240 (TIPO -> interval para int parc .)
    dospuntos       reduce using rule 240 (TIPO -> interval para int parc .)
    language        reduce using rule 240 (TIPO -> interval para int parc .)
    do              reduce using rule 240 (TIPO -> interval para int parc .)
    cadena          shift and go to state 653

  ! cadena          [ reduce using rule 240 (TIPO -> interval para int parc .) ]


state 568

    (241) TIPO -> char para int parc .

    r_from          reduce using rule 241 (TIPO -> char para int parc .)
    coma            reduce using rule 241 (TIPO -> char para int parc .)
    where           reduce using rule 241 (TIPO -> char para int parc .)
    group           reduce using rule 241 (TIPO -> char para int parc .)
    having          reduce using rule 241 (TIPO -> char para int parc .)
    union           reduce using rule 241 (TIPO -> char para int parc .)
    intersect       reduce using rule 241 (TIPO -> char para int parc .)
    except          reduce using rule 241 (TIPO -> char para int parc .)
    order           reduce using rule 241 (TIPO -> char para int parc .)
    limit           reduce using rule 241 (TIPO -> char para int parc .)
    offset          reduce using rule 241 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 241 (TIPO -> char para int parc .)
    mas             reduce using rule 241 (TIPO -> char para int parc .)
    menos           reduce using rule 241 (TIPO -> char para int parc .)
    multiplicacion  reduce using rule 241 (TIPO -> char para int parc .)
    division        reduce using rule 241 (TIPO -> char para int parc .)
    modulo          reduce using rule 241 (TIPO -> char para int parc .)
    elevado         reduce using rule 241 (TIPO -> char para int parc .)
    and             reduce using rule 241 (TIPO -> char para int parc .)
    or              reduce using rule 241 (TIPO -> char para int parc .)
    mayor           reduce using rule 241 (TIPO -> char para int parc .)
    menor           reduce using rule 241 (TIPO -> char para int parc .)
    mayor_igual     reduce using rule 241 (TIPO -> char para int parc .)
    menor_igual     reduce using rule 241 (TIPO -> char para int parc .)
    igual           reduce using rule 241 (TIPO -> char para int parc .)
    diferente1      reduce using rule 241 (TIPO -> char para int parc .)
    diferente2      reduce using rule 241 (TIPO -> char para int parc .)
    between         reduce using rule 241 (TIPO -> char para int parc .)
    is              reduce using rule 241 (TIPO -> char para int parc .)
    not             reduce using rule 241 (TIPO -> char para int parc .)
    as              reduce using rule 241 (TIPO -> char para int parc .)
    like            reduce using rule 241 (TIPO -> char para int parc .)
    isnull          reduce using rule 241 (TIPO -> char para int parc .)
    notnull         reduce using rule 241 (TIPO -> char para int parc .)
    cadenaString    reduce using rule 241 (TIPO -> char para int parc .)
    id              reduce using rule 241 (TIPO -> char para int parc .)
    cadena          reduce using rule 241 (TIPO -> char para int parc .)
    in              reduce using rule 241 (TIPO -> char para int parc .)
    then            reduce using rule 241 (TIPO -> char para int parc .)
    when            reduce using rule 241 (TIPO -> char para int parc .)
    parc            reduce using rule 241 (TIPO -> char para int parc .)
    constraint      reduce using rule 241 (TIPO -> char para int parc .)
    primary         reduce using rule 241 (TIPO -> char para int parc .)
    null            reduce using rule 241 (TIPO -> char para int parc .)
    unique          reduce using rule 241 (TIPO -> char para int parc .)
    references      reduce using rule 241 (TIPO -> char para int parc .)
    check           reduce using rule 241 (TIPO -> char para int parc .)
    default         reduce using rule 241 (TIPO -> char para int parc .)
    asc             reduce using rule 241 (TIPO -> char para int parc .)
    desc            reduce using rule 241 (TIPO -> char para int parc .)
    dospuntos       reduce using rule 241 (TIPO -> char para int parc .)
    language        reduce using rule 241 (TIPO -> char para int parc .)
    do              reduce using rule 241 (TIPO -> char para int parc .)


state 569

    (242) TIPO -> time para int parc .
    (249) TIPO -> time para int parc . without time zone
    (250) TIPO -> time para int parc . with time zone

    r_from          reduce using rule 242 (TIPO -> time para int parc .)
    coma            reduce using rule 242 (TIPO -> time para int parc .)
    where           reduce using rule 242 (TIPO -> time para int parc .)
    group           reduce using rule 242 (TIPO -> time para int parc .)
    having          reduce using rule 242 (TIPO -> time para int parc .)
    union           reduce using rule 242 (TIPO -> time para int parc .)
    intersect       reduce using rule 242 (TIPO -> time para int parc .)
    except          reduce using rule 242 (TIPO -> time para int parc .)
    order           reduce using rule 242 (TIPO -> time para int parc .)
    limit           reduce using rule 242 (TIPO -> time para int parc .)
    offset          reduce using rule 242 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 242 (TIPO -> time para int parc .)
    mas             reduce using rule 242 (TIPO -> time para int parc .)
    menos           reduce using rule 242 (TIPO -> time para int parc .)
    multiplicacion  reduce using rule 242 (TIPO -> time para int parc .)
    division        reduce using rule 242 (TIPO -> time para int parc .)
    modulo          reduce using rule 242 (TIPO -> time para int parc .)
    elevado         reduce using rule 242 (TIPO -> time para int parc .)
    and             reduce using rule 242 (TIPO -> time para int parc .)
    or              reduce using rule 242 (TIPO -> time para int parc .)
    mayor           reduce using rule 242 (TIPO -> time para int parc .)
    menor           reduce using rule 242 (TIPO -> time para int parc .)
    mayor_igual     reduce using rule 242 (TIPO -> time para int parc .)
    menor_igual     reduce using rule 242 (TIPO -> time para int parc .)
    igual           reduce using rule 242 (TIPO -> time para int parc .)
    diferente1      reduce using rule 242 (TIPO -> time para int parc .)
    diferente2      reduce using rule 242 (TIPO -> time para int parc .)
    between         reduce using rule 242 (TIPO -> time para int parc .)
    is              reduce using rule 242 (TIPO -> time para int parc .)
    not             reduce using rule 242 (TIPO -> time para int parc .)
    as              reduce using rule 242 (TIPO -> time para int parc .)
    like            reduce using rule 242 (TIPO -> time para int parc .)
    isnull          reduce using rule 242 (TIPO -> time para int parc .)
    notnull         reduce using rule 242 (TIPO -> time para int parc .)
    cadenaString    reduce using rule 242 (TIPO -> time para int parc .)
    id              reduce using rule 242 (TIPO -> time para int parc .)
    cadena          reduce using rule 242 (TIPO -> time para int parc .)
    in              reduce using rule 242 (TIPO -> time para int parc .)
    then            reduce using rule 242 (TIPO -> time para int parc .)
    when            reduce using rule 242 (TIPO -> time para int parc .)
    parc            reduce using rule 242 (TIPO -> time para int parc .)
    constraint      reduce using rule 242 (TIPO -> time para int parc .)
    primary         reduce using rule 242 (TIPO -> time para int parc .)
    null            reduce using rule 242 (TIPO -> time para int parc .)
    unique          reduce using rule 242 (TIPO -> time para int parc .)
    references      reduce using rule 242 (TIPO -> time para int parc .)
    check           reduce using rule 242 (TIPO -> time para int parc .)
    default         reduce using rule 242 (TIPO -> time para int parc .)
    asc             reduce using rule 242 (TIPO -> time para int parc .)
    desc            reduce using rule 242 (TIPO -> time para int parc .)
    dospuntos       reduce using rule 242 (TIPO -> time para int parc .)
    language        reduce using rule 242 (TIPO -> time para int parc .)
    do              reduce using rule 242 (TIPO -> time para int parc .)
    without         shift and go to state 654
    with            shift and go to state 655


state 570

    (272) TIPO -> time without time zone .

    r_from          reduce using rule 272 (TIPO -> time without time zone .)
    coma            reduce using rule 272 (TIPO -> time without time zone .)
    where           reduce using rule 272 (TIPO -> time without time zone .)
    group           reduce using rule 272 (TIPO -> time without time zone .)
    having          reduce using rule 272 (TIPO -> time without time zone .)
    union           reduce using rule 272 (TIPO -> time without time zone .)
    intersect       reduce using rule 272 (TIPO -> time without time zone .)
    except          reduce using rule 272 (TIPO -> time without time zone .)
    order           reduce using rule 272 (TIPO -> time without time zone .)
    limit           reduce using rule 272 (TIPO -> time without time zone .)
    offset          reduce using rule 272 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 272 (TIPO -> time without time zone .)
    mas             reduce using rule 272 (TIPO -> time without time zone .)
    menos           reduce using rule 272 (TIPO -> time without time zone .)
    multiplicacion  reduce using rule 272 (TIPO -> time without time zone .)
    division        reduce using rule 272 (TIPO -> time without time zone .)
    modulo          reduce using rule 272 (TIPO -> time without time zone .)
    elevado         reduce using rule 272 (TIPO -> time without time zone .)
    and             reduce using rule 272 (TIPO -> time without time zone .)
    or              reduce using rule 272 (TIPO -> time without time zone .)
    mayor           reduce using rule 272 (TIPO -> time without time zone .)
    menor           reduce using rule 272 (TIPO -> time without time zone .)
    mayor_igual     reduce using rule 272 (TIPO -> time without time zone .)
    menor_igual     reduce using rule 272 (TIPO -> time without time zone .)
    igual           reduce using rule 272 (TIPO -> time without time zone .)
    diferente1      reduce using rule 272 (TIPO -> time without time zone .)
    diferente2      reduce using rule 272 (TIPO -> time without time zone .)
    between         reduce using rule 272 (TIPO -> time without time zone .)
    is              reduce using rule 272 (TIPO -> time without time zone .)
    not             reduce using rule 272 (TIPO -> time without time zone .)
    as              reduce using rule 272 (TIPO -> time without time zone .)
    like            reduce using rule 272 (TIPO -> time without time zone .)
    isnull          reduce using rule 272 (TIPO -> time without time zone .)
    notnull         reduce using rule 272 (TIPO -> time without time zone .)
    cadenaString    reduce using rule 272 (TIPO -> time without time zone .)
    id              reduce using rule 272 (TIPO -> time without time zone .)
    cadena          reduce using rule 272 (TIPO -> time without time zone .)
    in              reduce using rule 272 (TIPO -> time without time zone .)
    then            reduce using rule 272 (TIPO -> time without time zone .)
    when            reduce using rule 272 (TIPO -> time without time zone .)
    parc            reduce using rule 272 (TIPO -> time without time zone .)
    constraint      reduce using rule 272 (TIPO -> time without time zone .)
    primary         reduce using rule 272 (TIPO -> time without time zone .)
    null            reduce using rule 272 (TIPO -> time without time zone .)
    unique          reduce using rule 272 (TIPO -> time without time zone .)
    references      reduce using rule 272 (TIPO -> time without time zone .)
    check           reduce using rule 272 (TIPO -> time without time zone .)
    default         reduce using rule 272 (TIPO -> time without time zone .)
    asc             reduce using rule 272 (TIPO -> time without time zone .)
    desc            reduce using rule 272 (TIPO -> time without time zone .)
    dospuntos       reduce using rule 272 (TIPO -> time without time zone .)
    language        reduce using rule 272 (TIPO -> time without time zone .)
    do              reduce using rule 272 (TIPO -> time without time zone .)


state 571

    (273) TIPO -> time with time zone .

    r_from          reduce using rule 273 (TIPO -> time with time zone .)
    coma            reduce using rule 273 (TIPO -> time with time zone .)
    where           reduce using rule 273 (TIPO -> time with time zone .)
    group           reduce using rule 273 (TIPO -> time with time zone .)
    having          reduce using rule 273 (TIPO -> time with time zone .)
    union           reduce using rule 273 (TIPO -> time with time zone .)
    intersect       reduce using rule 273 (TIPO -> time with time zone .)
    except          reduce using rule 273 (TIPO -> time with time zone .)
    order           reduce using rule 273 (TIPO -> time with time zone .)
    limit           reduce using rule 273 (TIPO -> time with time zone .)
    offset          reduce using rule 273 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 273 (TIPO -> time with time zone .)
    mas             reduce using rule 273 (TIPO -> time with time zone .)
    menos           reduce using rule 273 (TIPO -> time with time zone .)
    multiplicacion  reduce using rule 273 (TIPO -> time with time zone .)
    division        reduce using rule 273 (TIPO -> time with time zone .)
    modulo          reduce using rule 273 (TIPO -> time with time zone .)
    elevado         reduce using rule 273 (TIPO -> time with time zone .)
    and             reduce using rule 273 (TIPO -> time with time zone .)
    or              reduce using rule 273 (TIPO -> time with time zone .)
    mayor           reduce using rule 273 (TIPO -> time with time zone .)
    menor           reduce using rule 273 (TIPO -> time with time zone .)
    mayor_igual     reduce using rule 273 (TIPO -> time with time zone .)
    menor_igual     reduce using rule 273 (TIPO -> time with time zone .)
    igual           reduce using rule 273 (TIPO -> time with time zone .)
    diferente1      reduce using rule 273 (TIPO -> time with time zone .)
    diferente2      reduce using rule 273 (TIPO -> time with time zone .)
    between         reduce using rule 273 (TIPO -> time with time zone .)
    is              reduce using rule 273 (TIPO -> time with time zone .)
    not             reduce using rule 273 (TIPO -> time with time zone .)
    as              reduce using rule 273 (TIPO -> time with time zone .)
    like            reduce using rule 273 (TIPO -> time with time zone .)
    isnull          reduce using rule 273 (TIPO -> time with time zone .)
    notnull         reduce using rule 273 (TIPO -> time with time zone .)
    cadenaString    reduce using rule 273 (TIPO -> time with time zone .)
    id              reduce using rule 273 (TIPO -> time with time zone .)
    cadena          reduce using rule 273 (TIPO -> time with time zone .)
    in              reduce using rule 273 (TIPO -> time with time zone .)
    then            reduce using rule 273 (TIPO -> time with time zone .)
    when            reduce using rule 273 (TIPO -> time with time zone .)
    parc            reduce using rule 273 (TIPO -> time with time zone .)
    constraint      reduce using rule 273 (TIPO -> time with time zone .)
    primary         reduce using rule 273 (TIPO -> time with time zone .)
    null            reduce using rule 273 (TIPO -> time with time zone .)
    unique          reduce using rule 273 (TIPO -> time with time zone .)
    references      reduce using rule 273 (TIPO -> time with time zone .)
    check           reduce using rule 273 (TIPO -> time with time zone .)
    default         reduce using rule 273 (TIPO -> time with time zone .)
    asc             reduce using rule 273 (TIPO -> time with time zone .)
    desc            reduce using rule 273 (TIPO -> time with time zone .)
    dospuntos       reduce using rule 273 (TIPO -> time with time zone .)
    language        reduce using rule 273 (TIPO -> time with time zone .)
    do              reduce using rule 273 (TIPO -> time with time zone .)


state 572

    (331) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 656


state 573

    (174) COLDEF -> id TIPO LOPCOLUMN .
    (175) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (177) OPCOLUMN -> . constraint id unique
    (178) OPCOLUMN -> . not null
    (179) OPCOLUMN -> . primary key
    (180) OPCOLUMN -> . null
    (181) OPCOLUMN -> . unique
    (182) OPCOLUMN -> . references id
    (183) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (184) OPCOLUMN -> . check para CONDCHECK parc
    (185) OPCOLUMN -> . default EXP

    parc            reduce using rule 174 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 174 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 575
    not             shift and go to state 577
    primary         shift and go to state 579
    null            shift and go to state 578
    unique          shift and go to state 576
    references      shift and go to state 580
    check           shift and go to state 581
    default         shift and go to state 582

    OPCOLUMN                       shift and go to state 657

state 574

    (176) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    unique          reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    check           reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 176 (LOPCOLUMN -> OPCOLUMN .)


state 575

    (177) OPCOLUMN -> constraint . id unique
    (183) OPCOLUMN -> constraint . id check para CONDCHECK parc

    id              shift and go to state 658


state 576

    (181) OPCOLUMN -> unique .

    constraint      reduce using rule 181 (OPCOLUMN -> unique .)
    not             reduce using rule 181 (OPCOLUMN -> unique .)
    primary         reduce using rule 181 (OPCOLUMN -> unique .)
    null            reduce using rule 181 (OPCOLUMN -> unique .)
    unique          reduce using rule 181 (OPCOLUMN -> unique .)
    references      reduce using rule 181 (OPCOLUMN -> unique .)
    check           reduce using rule 181 (OPCOLUMN -> unique .)
    default         reduce using rule 181 (OPCOLUMN -> unique .)
    parc            reduce using rule 181 (OPCOLUMN -> unique .)
    coma            reduce using rule 181 (OPCOLUMN -> unique .)


state 577

    (178) OPCOLUMN -> not . null

    null            shift and go to state 659


state 578

    (180) OPCOLUMN -> null .

    constraint      reduce using rule 180 (OPCOLUMN -> null .)
    not             reduce using rule 180 (OPCOLUMN -> null .)
    primary         reduce using rule 180 (OPCOLUMN -> null .)
    null            reduce using rule 180 (OPCOLUMN -> null .)
    unique          reduce using rule 180 (OPCOLUMN -> null .)
    references      reduce using rule 180 (OPCOLUMN -> null .)
    check           reduce using rule 180 (OPCOLUMN -> null .)
    default         reduce using rule 180 (OPCOLUMN -> null .)
    parc            reduce using rule 180 (OPCOLUMN -> null .)
    coma            reduce using rule 180 (OPCOLUMN -> null .)


state 579

    (179) OPCOLUMN -> primary . key

    key             shift and go to state 660


state 580

    (182) OPCOLUMN -> references . id

    id              shift and go to state 661


state 581

    (184) OPCOLUMN -> check . para CONDCHECK parc

    para            shift and go to state 662


state 582

    (185) OPCOLUMN -> default . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 663
    SELECT                         shift and go to state 72

state 583

    (167) CREATETABLE -> create table id para LDEF parc ptcoma .

    use             reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    select          reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    id              reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    if              reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    execute         reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 167 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 584

    (168) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 664


state 585

    (197) HERENCIA -> inherits . para LEXP parc

    para            shift and go to state 665


state 586

    (169) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 169 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 169 (LDEF -> LDEF coma COLDEF .)


state 587

    (172) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 172 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 172 (COLDEF -> constraint id OPCONST .)


state 588

    (186) OPCONST -> primary key para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 666
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 589

    (187) OPCONST -> foreign key para . LEXP parc references id para LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 667
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 590

    (188) OPCONST -> check para CONDCHECK . parc

    parc            shift and go to state 668


state 591

    (190) CONDCHECK -> EXP . mayor EXP
    (191) CONDCHECK -> EXP . menor EXP
    (192) CONDCHECK -> EXP . mayor_igual EXP
    (193) CONDCHECK -> EXP . menor_igual EXP
    (194) CONDCHECK -> EXP . igual EXP
    (195) CONDCHECK -> EXP . diferente1 EXP
    (196) CONDCHECK -> EXP . diferente2 EXP
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    mayor           shift and go to state 669
    menor           shift and go to state 670
    mayor_igual     shift and go to state 671
    menor_igual     shift and go to state 672
    igual           shift and go to state 673
    diferente1      shift and go to state 674
    diferente2      shift and go to state 675
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 592

    (189) OPCONST -> unique para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 676
    coma            shift and go to state 125


state 593

    (198) CREATETYPE -> create type id as enum para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 677
    coma            shift and go to state 125


state 594

    (151) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 151 (CREATEDB -> create RD if not exist id OPCCDB .)


state 595

    (53) CREATEINDEX -> create index id on id para id . ORDEN parc
    (54) CREATEINDEX -> create index id on id para id . id ORDEN parc
    (55) CREATEINDEX -> create index id on id para id . id parc
    (326) EXP -> id . para parc
    (327) EXP -> id . para LEXP parc
    (339) EXP -> id .
    (56) ORDEN -> . asc
    (57) ORDEN -> . desc
    (58) ORDEN -> . nulls first
    (59) ORDEN -> . nulls last
    (60) ORDEN -> . asc nulls first
    (61) ORDEN -> . desc nulls last
    (62) ORDEN -> . desc nulls first
    (63) ORDEN -> . asc nulls last

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 678
    para            shift and go to state 156
    mas             reduce using rule 339 (EXP -> id .)
    menos           reduce using rule 339 (EXP -> id .)
    multiplicacion  reduce using rule 339 (EXP -> id .)
    division        reduce using rule 339 (EXP -> id .)
    modulo          reduce using rule 339 (EXP -> id .)
    elevado         reduce using rule 339 (EXP -> id .)
    and             reduce using rule 339 (EXP -> id .)
    or              reduce using rule 339 (EXP -> id .)
    mayor           reduce using rule 339 (EXP -> id .)
    menor           reduce using rule 339 (EXP -> id .)
    mayor_igual     reduce using rule 339 (EXP -> id .)
    menor_igual     reduce using rule 339 (EXP -> id .)
    igual           reduce using rule 339 (EXP -> id .)
    diferente1      reduce using rule 339 (EXP -> id .)
    diferente2      reduce using rule 339 (EXP -> id .)
    between         reduce using rule 339 (EXP -> id .)
    is              reduce using rule 339 (EXP -> id .)
    not             reduce using rule 339 (EXP -> id .)
    as              reduce using rule 339 (EXP -> id .)
    like            reduce using rule 339 (EXP -> id .)
    isnull          reduce using rule 339 (EXP -> id .)
    notnull         reduce using rule 339 (EXP -> id .)
    cadenaString    reduce using rule 339 (EXP -> id .)
    cadena          reduce using rule 339 (EXP -> id .)
    in              reduce using rule 339 (EXP -> id .)
    parc            reduce using rule 339 (EXP -> id .)
    coma            reduce using rule 339 (EXP -> id .)
    asc             shift and go to state 680
    desc            shift and go to state 681
    nulls           shift and go to state 682

  ! id              [ reduce using rule 339 (EXP -> id .) ]

    ORDEN                          shift and go to state 679

state 596

    (50) CREATEINDEX -> create index id on id para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 683
    coma            shift and go to state 125


state 597

    (52) CREATEINDEX -> create index id on id using hash . para LEXP parc

    para            shift and go to state 684


state 598

    (51) CREATEINDEX -> create unique index id on id para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 685
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 599

    (35) PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE . LCONTENIDOP
    (39) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (40) LCONTENIDOP -> . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    as              shift and go to state 507
    do              shift and go to state 508

    LCONTENIDOP                    shift and go to state 686
    CONTENIDOP                     shift and go to state 506

state 600

    (36) PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP . LENGUAJE
    (39) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (47) LENGUAJE -> . language plpgsql
    (48) LENGUAJE -> . language plpgsql ptcoma
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 505
    as              shift and go to state 507
    do              shift and go to state 508

    LENGUAJE                       shift and go to state 687
    CONTENIDOP                     shift and go to state 605

state 601

    (43) LPARAM -> LPARAM coma inout . id TIPO

    id              shift and go to state 688


state 602

    (44) LPARAM -> LPARAM coma id . TIPO
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 689

state 603

    (37) PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .
    (39) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    use             reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    select          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    create          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    update          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    case            reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    show            reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    id              reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    if              reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    execute         reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    as              shift and go to state 507
    do              shift and go to state 508

    CONTENIDOP                     shift and go to state 605

state 604

    (38) PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .

    use             reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    select          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    create          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    update          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    case            reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    show            reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    id              reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    if              reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)


state 605

    (39) LCONTENIDOP -> LCONTENIDOP CONTENIDOP .

    language        reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    as              reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    do              reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    use             reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    select          reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    create          reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    update          reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    delete          reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    alter           reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    drop            reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    insert          reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    case            reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    show            reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    id              reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    if              reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    execute         reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    $end            reduce using rule 39 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)


state 606

    (47) LENGUAJE -> language plpgsql .
    (48) LENGUAJE -> language plpgsql . ptcoma

    as              reduce using rule 47 (LENGUAJE -> language plpgsql .)
    do              reduce using rule 47 (LENGUAJE -> language plpgsql .)
    use             reduce using rule 47 (LENGUAJE -> language plpgsql .)
    select          reduce using rule 47 (LENGUAJE -> language plpgsql .)
    create          reduce using rule 47 (LENGUAJE -> language plpgsql .)
    update          reduce using rule 47 (LENGUAJE -> language plpgsql .)
    delete          reduce using rule 47 (LENGUAJE -> language plpgsql .)
    alter           reduce using rule 47 (LENGUAJE -> language plpgsql .)
    drop            reduce using rule 47 (LENGUAJE -> language plpgsql .)
    insert          reduce using rule 47 (LENGUAJE -> language plpgsql .)
    case            reduce using rule 47 (LENGUAJE -> language plpgsql .)
    show            reduce using rule 47 (LENGUAJE -> language plpgsql .)
    id              reduce using rule 47 (LENGUAJE -> language plpgsql .)
    if              reduce using rule 47 (LENGUAJE -> language plpgsql .)
    execute         reduce using rule 47 (LENGUAJE -> language plpgsql .)
    $end            reduce using rule 47 (LENGUAJE -> language plpgsql .)
    ptcoma          shift and go to state 690


state 607

    (41) CONTENIDOP -> as dolarn . LISTACONTENIDO dolarn
    (87) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (88) LISTACONTENIDO -> . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LISTACONTENIDO                 shift and go to state 691
    CONTENIDO                      shift and go to state 299
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 608

    (42) CONTENIDOP -> do dolarn . LISTACONTENIDO dolarn
    (87) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (88) LISTACONTENIDO -> . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LISTACONTENIDO                 shift and go to state 692
    CONTENIDO                      shift and go to state 299
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 609

    (45) LPARAM -> inout id TIPO .

    parc            reduce using rule 45 (LPARAM -> inout id TIPO .)
    coma            reduce using rule 45 (LPARAM -> inout id TIPO .)


state 610

    (26) FUNCIONES -> create function id para LPARAM parc RETURNP . LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM parc RETURNP . LCONTENIDOP LENGUAJE
    (47) LENGUAJE -> . language plpgsql
    (48) LENGUAJE -> . language plpgsql ptcoma
    (39) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (40) LCONTENIDOP -> . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 505
    as              shift and go to state 507
    do              shift and go to state 508

    LENGUAJE                       shift and go to state 693
    LCONTENIDOP                    shift and go to state 694
    CONTENIDOP                     shift and go to state 506

state 611

    (28) FUNCIONES -> create function id para parc RETURNP LENGUAJE . LCONTENIDOP
    (39) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (40) LCONTENIDOP -> . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    as              shift and go to state 507
    do              shift and go to state 508

    LCONTENIDOP                    shift and go to state 695
    CONTENIDOP                     shift and go to state 506

state 612

    (29) FUNCIONES -> create function id para parc RETURNP LCONTENIDOP . LENGUAJE
    (39) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (47) LENGUAJE -> . language plpgsql
    (48) LENGUAJE -> . language plpgsql ptcoma
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 505
    as              shift and go to state 507
    do              shift and go to state 508

    LENGUAJE                       shift and go to state 696
    CONTENIDOP                     shift and go to state 605

state 613

    (32) RETURNP -> returns TIPO .

    language        reduce using rule 32 (RETURNP -> returns TIPO .)
    as              reduce using rule 32 (RETURNP -> returns TIPO .)
    do              reduce using rule 32 (RETURNP -> returns TIPO .)


state 614

    (228) LCAMPOS -> LCAMPOS coma id igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 697
    SELECT                         shift and go to state 72

state 615

    (140) OP -> alter column id set . not null
    (141) OP -> alter column id set . null

    not             shift and go to state 698
    null            shift and go to state 699


state 616

    (146) OP -> alter column id type . TIPO
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 700

state 617

    (133) OP -> add column id TIPO .

    coma            reduce using rule 133 (OP -> add column id TIPO .)
    ptcoma          reduce using rule 133 (OP -> add column id TIPO .)


state 618

    (134) OP -> add check para CONDCHECK . parc

    parc            shift and go to state 701


state 619

    (135) OP -> add constraint id check . para CONDCHECK parc

    para            shift and go to state 702


state 620

    (136) OP -> add constraint id unique . para LEXP parc

    para            shift and go to state 703


state 621

    (139) OP -> add constraint id foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 704


state 622

    (137) OP -> add unique para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 705
    coma            shift and go to state 125


state 623

    (138) OP -> add foreign key para . LEXP parc references id para LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 706
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 624

    (145) OP -> rename column id to . id

    id              shift and go to state 707


state 625

    (128) ALTER -> alter index if exist id alter EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 128 (ALTER -> alter index if exist id alter EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 626

    (130) ALTER -> alter index if exist id alter column . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 708
    SELECT                         shift and go to state 72

state 627

    (76) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end . if

    if              shift and go to state 709


state 628

    (78) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if .

    ptcoma          reduce using rule 78 (CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if .)


state 629

    (80) LELIF -> LELIF elsif EXP . then LISTACONTENIDO
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    then            shift and go to state 710
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 630

    (77) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if .

    ptcoma          reduce using rule 77 (CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if .)


state 631

    (81) LELIF -> elsif EXP then . LISTACONTENIDO
    (87) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (88) LISTACONTENIDO -> . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LISTACONTENIDO                 shift and go to state 711
    CONTENIDO                      shift and go to state 299
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 632

    (66) DECLARACIONES -> id TIPO not . null ASIG ptcoma

    null            shift and go to state 712


state 633

    (67) DECLARACIONES -> id TIPO ASIG . ptcoma

    ptcoma          shift and go to state 713


state 634

    (70) ASIG -> default . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 714
    SELECT                         shift and go to state 72

state 635

    (71) ASIG -> igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 715
    SELECT                         shift and go to state 72

state 636

    (72) ASIG -> dospuntos . igual EXP

    igual           shift and go to state 716


state 637

    (68) DECLARACIONES -> id constant TIPO . not null ASIG ptcoma
    (69) DECLARACIONES -> id constant TIPO . ASIG ptcoma
    (70) ASIG -> . default EXP
    (71) ASIG -> . igual EXP
    (72) ASIG -> . dospuntos igual EXP
    (73) ASIG -> .

    not             shift and go to state 717
    default         shift and go to state 634
    igual           shift and go to state 635
    dospuntos       shift and go to state 636
    ptcoma          reduce using rule 73 (ASIG -> .)

    ASIG                           shift and go to state 718

state 638

    (105) RAISE -> raise LEVEL cadena coma . id

    id              shift and go to state 719


state 639

    (111) FORMAT -> format para . EXP coma LEXP parc
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 720
    SELECT                         shift and go to state 72

state 640

    (116) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 116 (INSERT -> insert into id values para LEXP parc .)


state 641

    (117) INSERT -> insert into id para LEXP parc values . para LEXP parc

    para            shift and go to state 721


state 642

    (199) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (213) COMBINING -> . union LEXP
    (214) COMBINING -> . union all LEXP
    (215) COMBINING -> . intersect LEXP
    (216) COMBINING -> . except LEXP
    (217) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 457
    intersect       shift and go to state 458
    except          shift and go to state 459
    r_from          reduce using rule 217 (COMBINING -> .)
    coma            reduce using rule 217 (COMBINING -> .)
    where           reduce using rule 217 (COMBINING -> .)
    group           reduce using rule 217 (COMBINING -> .)
    having          reduce using rule 217 (COMBINING -> .)
    order           reduce using rule 217 (COMBINING -> .)
    limit           reduce using rule 217 (COMBINING -> .)
    offset          reduce using rule 217 (COMBINING -> .)
    ptcoma          reduce using rule 217 (COMBINING -> .)
    mas             reduce using rule 217 (COMBINING -> .)
    menos           reduce using rule 217 (COMBINING -> .)
    multiplicacion  reduce using rule 217 (COMBINING -> .)
    division        reduce using rule 217 (COMBINING -> .)
    modulo          reduce using rule 217 (COMBINING -> .)
    elevado         reduce using rule 217 (COMBINING -> .)
    and             reduce using rule 217 (COMBINING -> .)
    or              reduce using rule 217 (COMBINING -> .)
    mayor           reduce using rule 217 (COMBINING -> .)
    menor           reduce using rule 217 (COMBINING -> .)
    mayor_igual     reduce using rule 217 (COMBINING -> .)
    menor_igual     reduce using rule 217 (COMBINING -> .)
    igual           reduce using rule 217 (COMBINING -> .)
    diferente1      reduce using rule 217 (COMBINING -> .)
    diferente2      reduce using rule 217 (COMBINING -> .)
    between         reduce using rule 217 (COMBINING -> .)
    is              reduce using rule 217 (COMBINING -> .)
    not             reduce using rule 217 (COMBINING -> .)
    as              reduce using rule 217 (COMBINING -> .)
    like            reduce using rule 217 (COMBINING -> .)
    isnull          reduce using rule 217 (COMBINING -> .)
    notnull         reduce using rule 217 (COMBINING -> .)
    cadenaString    reduce using rule 217 (COMBINING -> .)
    id              reduce using rule 217 (COMBINING -> .)
    cadena          reduce using rule 217 (COMBINING -> .)
    in              reduce using rule 217 (COMBINING -> .)
    then            reduce using rule 217 (COMBINING -> .)
    when            reduce using rule 217 (COMBINING -> .)
    parc            reduce using rule 217 (COMBINING -> .)
    constraint      reduce using rule 217 (COMBINING -> .)
    primary         reduce using rule 217 (COMBINING -> .)
    null            reduce using rule 217 (COMBINING -> .)
    unique          reduce using rule 217 (COMBINING -> .)
    references      reduce using rule 217 (COMBINING -> .)
    check           reduce using rule 217 (COMBINING -> .)
    default         reduce using rule 217 (COMBINING -> .)
    asc             reduce using rule 217 (COMBINING -> .)
    desc            reduce using rule 217 (COMBINING -> .)

  ! union           [ reduce using rule 217 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 217 (COMBINING -> .) ]
  ! except          [ reduce using rule 217 (COMBINING -> .) ]

    COMBINING                      shift and go to state 722

state 643

    (200) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (222) ORDER -> . order by LEXP ORD
    (223) ORDER -> . order by LEXP
    (224) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 552
    r_from          reduce using rule 224 (ORDER -> .)
    coma            reduce using rule 224 (ORDER -> .)
    where           reduce using rule 224 (ORDER -> .)
    group           reduce using rule 224 (ORDER -> .)
    having          reduce using rule 224 (ORDER -> .)
    union           reduce using rule 224 (ORDER -> .)
    intersect       reduce using rule 224 (ORDER -> .)
    except          reduce using rule 224 (ORDER -> .)
    limit           reduce using rule 224 (ORDER -> .)
    offset          reduce using rule 224 (ORDER -> .)
    ptcoma          reduce using rule 224 (ORDER -> .)
    mas             reduce using rule 224 (ORDER -> .)
    menos           reduce using rule 224 (ORDER -> .)
    multiplicacion  reduce using rule 224 (ORDER -> .)
    division        reduce using rule 224 (ORDER -> .)
    modulo          reduce using rule 224 (ORDER -> .)
    elevado         reduce using rule 224 (ORDER -> .)
    and             reduce using rule 224 (ORDER -> .)
    or              reduce using rule 224 (ORDER -> .)
    mayor           reduce using rule 224 (ORDER -> .)
    menor           reduce using rule 224 (ORDER -> .)
    mayor_igual     reduce using rule 224 (ORDER -> .)
    menor_igual     reduce using rule 224 (ORDER -> .)
    igual           reduce using rule 224 (ORDER -> .)
    diferente1      reduce using rule 224 (ORDER -> .)
    diferente2      reduce using rule 224 (ORDER -> .)
    between         reduce using rule 224 (ORDER -> .)
    is              reduce using rule 224 (ORDER -> .)
    not             reduce using rule 224 (ORDER -> .)
    as              reduce using rule 224 (ORDER -> .)
    like            reduce using rule 224 (ORDER -> .)
    isnull          reduce using rule 224 (ORDER -> .)
    notnull         reduce using rule 224 (ORDER -> .)
    cadenaString    reduce using rule 224 (ORDER -> .)
    id              reduce using rule 224 (ORDER -> .)
    cadena          reduce using rule 224 (ORDER -> .)
    in              reduce using rule 224 (ORDER -> .)
    then            reduce using rule 224 (ORDER -> .)
    when            reduce using rule 224 (ORDER -> .)
    parc            reduce using rule 224 (ORDER -> .)
    constraint      reduce using rule 224 (ORDER -> .)
    primary         reduce using rule 224 (ORDER -> .)
    null            reduce using rule 224 (ORDER -> .)
    unique          reduce using rule 224 (ORDER -> .)
    references      reduce using rule 224 (ORDER -> .)
    check           reduce using rule 224 (ORDER -> .)
    default         reduce using rule 224 (ORDER -> .)
    asc             reduce using rule 224 (ORDER -> .)
    desc            reduce using rule 224 (ORDER -> .)

  ! order           [ reduce using rule 224 (ORDER -> .) ]

    ORDER                          shift and go to state 723

state 644

    (201) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 201 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 645

    (202) LIMIT -> limit . int
    (203) LIMIT -> limit . all
    (205) LIMIT -> limit . int offset int
    (207) LIMIT -> limit . all offset int

    int             shift and go to state 724
    all             shift and go to state 725


state 646

    (204) LIMIT -> offset . int
    (206) LIMIT -> offset . int limit int
    (208) LIMIT -> offset . int limit all

    int             shift and go to state 726


state 647

    (222) ORDER -> order by . LEXP ORD
    (223) ORDER -> order by . LEXP
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 727
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 648

    (214) COMBINING -> union all LEXP .
    (233) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 214 (COMBINING -> union all LEXP .)
    where           reduce using rule 214 (COMBINING -> union all LEXP .)
    group           reduce using rule 214 (COMBINING -> union all LEXP .)
    having          reduce using rule 214 (COMBINING -> union all LEXP .)
    union           reduce using rule 214 (COMBINING -> union all LEXP .)
    intersect       reduce using rule 214 (COMBINING -> union all LEXP .)
    except          reduce using rule 214 (COMBINING -> union all LEXP .)
    order           reduce using rule 214 (COMBINING -> union all LEXP .)
    limit           reduce using rule 214 (COMBINING -> union all LEXP .)
    offset          reduce using rule 214 (COMBINING -> union all LEXP .)
    ptcoma          reduce using rule 214 (COMBINING -> union all LEXP .)
    mas             reduce using rule 214 (COMBINING -> union all LEXP .)
    menos           reduce using rule 214 (COMBINING -> union all LEXP .)
    multiplicacion  reduce using rule 214 (COMBINING -> union all LEXP .)
    division        reduce using rule 214 (COMBINING -> union all LEXP .)
    modulo          reduce using rule 214 (COMBINING -> union all LEXP .)
    elevado         reduce using rule 214 (COMBINING -> union all LEXP .)
    and             reduce using rule 214 (COMBINING -> union all LEXP .)
    or              reduce using rule 214 (COMBINING -> union all LEXP .)
    mayor           reduce using rule 214 (COMBINING -> union all LEXP .)
    menor           reduce using rule 214 (COMBINING -> union all LEXP .)
    mayor_igual     reduce using rule 214 (COMBINING -> union all LEXP .)
    menor_igual     reduce using rule 214 (COMBINING -> union all LEXP .)
    igual           reduce using rule 214 (COMBINING -> union all LEXP .)
    diferente1      reduce using rule 214 (COMBINING -> union all LEXP .)
    diferente2      reduce using rule 214 (COMBINING -> union all LEXP .)
    between         reduce using rule 214 (COMBINING -> union all LEXP .)
    is              reduce using rule 214 (COMBINING -> union all LEXP .)
    not             reduce using rule 214 (COMBINING -> union all LEXP .)
    as              reduce using rule 214 (COMBINING -> union all LEXP .)
    like            reduce using rule 214 (COMBINING -> union all LEXP .)
    isnull          reduce using rule 214 (COMBINING -> union all LEXP .)
    notnull         reduce using rule 214 (COMBINING -> union all LEXP .)
    cadenaString    reduce using rule 214 (COMBINING -> union all LEXP .)
    id              reduce using rule 214 (COMBINING -> union all LEXP .)
    cadena          reduce using rule 214 (COMBINING -> union all LEXP .)
    in              reduce using rule 214 (COMBINING -> union all LEXP .)
    then            reduce using rule 214 (COMBINING -> union all LEXP .)
    when            reduce using rule 214 (COMBINING -> union all LEXP .)
    parc            reduce using rule 214 (COMBINING -> union all LEXP .)
    constraint      reduce using rule 214 (COMBINING -> union all LEXP .)
    primary         reduce using rule 214 (COMBINING -> union all LEXP .)
    null            reduce using rule 214 (COMBINING -> union all LEXP .)
    unique          reduce using rule 214 (COMBINING -> union all LEXP .)
    references      reduce using rule 214 (COMBINING -> union all LEXP .)
    check           reduce using rule 214 (COMBINING -> union all LEXP .)
    default         reduce using rule 214 (COMBINING -> union all LEXP .)
    asc             reduce using rule 214 (COMBINING -> union all LEXP .)
    desc            reduce using rule 214 (COMBINING -> union all LEXP .)
    coma            shift and go to state 125

  ! coma            [ reduce using rule 214 (COMBINING -> union all LEXP .) ]


state 649

    (329) EXP -> all para . LEXP parc
    (325) EXP -> para . EXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 262
    EXP                            shift and go to state 728
    SELECT                         shift and go to state 72

state 650

    (247) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 729


state 651

    (248) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 730


state 652

    (243) TIPO -> character varying para int parc .

    r_from          reduce using rule 243 (TIPO -> character varying para int parc .)
    coma            reduce using rule 243 (TIPO -> character varying para int parc .)
    where           reduce using rule 243 (TIPO -> character varying para int parc .)
    group           reduce using rule 243 (TIPO -> character varying para int parc .)
    having          reduce using rule 243 (TIPO -> character varying para int parc .)
    union           reduce using rule 243 (TIPO -> character varying para int parc .)
    intersect       reduce using rule 243 (TIPO -> character varying para int parc .)
    except          reduce using rule 243 (TIPO -> character varying para int parc .)
    order           reduce using rule 243 (TIPO -> character varying para int parc .)
    limit           reduce using rule 243 (TIPO -> character varying para int parc .)
    offset          reduce using rule 243 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 243 (TIPO -> character varying para int parc .)
    mas             reduce using rule 243 (TIPO -> character varying para int parc .)
    menos           reduce using rule 243 (TIPO -> character varying para int parc .)
    multiplicacion  reduce using rule 243 (TIPO -> character varying para int parc .)
    division        reduce using rule 243 (TIPO -> character varying para int parc .)
    modulo          reduce using rule 243 (TIPO -> character varying para int parc .)
    elevado         reduce using rule 243 (TIPO -> character varying para int parc .)
    and             reduce using rule 243 (TIPO -> character varying para int parc .)
    or              reduce using rule 243 (TIPO -> character varying para int parc .)
    mayor           reduce using rule 243 (TIPO -> character varying para int parc .)
    menor           reduce using rule 243 (TIPO -> character varying para int parc .)
    mayor_igual     reduce using rule 243 (TIPO -> character varying para int parc .)
    menor_igual     reduce using rule 243 (TIPO -> character varying para int parc .)
    igual           reduce using rule 243 (TIPO -> character varying para int parc .)
    diferente1      reduce using rule 243 (TIPO -> character varying para int parc .)
    diferente2      reduce using rule 243 (TIPO -> character varying para int parc .)
    between         reduce using rule 243 (TIPO -> character varying para int parc .)
    is              reduce using rule 243 (TIPO -> character varying para int parc .)
    not             reduce using rule 243 (TIPO -> character varying para int parc .)
    as              reduce using rule 243 (TIPO -> character varying para int parc .)
    like            reduce using rule 243 (TIPO -> character varying para int parc .)
    isnull          reduce using rule 243 (TIPO -> character varying para int parc .)
    notnull         reduce using rule 243 (TIPO -> character varying para int parc .)
    cadenaString    reduce using rule 243 (TIPO -> character varying para int parc .)
    id              reduce using rule 243 (TIPO -> character varying para int parc .)
    cadena          reduce using rule 243 (TIPO -> character varying para int parc .)
    in              reduce using rule 243 (TIPO -> character varying para int parc .)
    then            reduce using rule 243 (TIPO -> character varying para int parc .)
    when            reduce using rule 243 (TIPO -> character varying para int parc .)
    parc            reduce using rule 243 (TIPO -> character varying para int parc .)
    constraint      reduce using rule 243 (TIPO -> character varying para int parc .)
    primary         reduce using rule 243 (TIPO -> character varying para int parc .)
    null            reduce using rule 243 (TIPO -> character varying para int parc .)
    unique          reduce using rule 243 (TIPO -> character varying para int parc .)
    references      reduce using rule 243 (TIPO -> character varying para int parc .)
    check           reduce using rule 243 (TIPO -> character varying para int parc .)
    default         reduce using rule 243 (TIPO -> character varying para int parc .)
    asc             reduce using rule 243 (TIPO -> character varying para int parc .)
    desc            reduce using rule 243 (TIPO -> character varying para int parc .)
    dospuntos       reduce using rule 243 (TIPO -> character varying para int parc .)
    language        reduce using rule 243 (TIPO -> character varying para int parc .)
    do              reduce using rule 243 (TIPO -> character varying para int parc .)


state 653

    (251) TIPO -> interval para int parc cadena .

    r_from          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 251 (TIPO -> interval para int parc cadena .)
    where           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    group           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    having          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    union           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    intersect       reduce using rule 251 (TIPO -> interval para int parc cadena .)
    except          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    order           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    limit           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    offset          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    mas             reduce using rule 251 (TIPO -> interval para int parc cadena .)
    menos           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    multiplicacion  reduce using rule 251 (TIPO -> interval para int parc cadena .)
    division        reduce using rule 251 (TIPO -> interval para int parc cadena .)
    modulo          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    elevado         reduce using rule 251 (TIPO -> interval para int parc cadena .)
    and             reduce using rule 251 (TIPO -> interval para int parc cadena .)
    or              reduce using rule 251 (TIPO -> interval para int parc cadena .)
    mayor           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    menor           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    mayor_igual     reduce using rule 251 (TIPO -> interval para int parc cadena .)
    menor_igual     reduce using rule 251 (TIPO -> interval para int parc cadena .)
    igual           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    diferente1      reduce using rule 251 (TIPO -> interval para int parc cadena .)
    diferente2      reduce using rule 251 (TIPO -> interval para int parc cadena .)
    between         reduce using rule 251 (TIPO -> interval para int parc cadena .)
    is              reduce using rule 251 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 251 (TIPO -> interval para int parc cadena .)
    as              reduce using rule 251 (TIPO -> interval para int parc cadena .)
    like            reduce using rule 251 (TIPO -> interval para int parc cadena .)
    isnull          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    notnull         reduce using rule 251 (TIPO -> interval para int parc cadena .)
    cadenaString    reduce using rule 251 (TIPO -> interval para int parc cadena .)
    id              reduce using rule 251 (TIPO -> interval para int parc cadena .)
    cadena          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    in              reduce using rule 251 (TIPO -> interval para int parc cadena .)
    then            reduce using rule 251 (TIPO -> interval para int parc cadena .)
    when            reduce using rule 251 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 251 (TIPO -> interval para int parc cadena .)
    constraint      reduce using rule 251 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 251 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 251 (TIPO -> interval para int parc cadena .)
    unique          reduce using rule 251 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 251 (TIPO -> interval para int parc cadena .)
    check           reduce using rule 251 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 251 (TIPO -> interval para int parc cadena .)
    asc             reduce using rule 251 (TIPO -> interval para int parc cadena .)
    desc            reduce using rule 251 (TIPO -> interval para int parc cadena .)
    dospuntos       reduce using rule 251 (TIPO -> interval para int parc cadena .)
    language        reduce using rule 251 (TIPO -> interval para int parc cadena .)
    do              reduce using rule 251 (TIPO -> interval para int parc cadena .)


state 654

    (249) TIPO -> time para int parc without . time zone

    time            shift and go to state 731


state 655

    (250) TIPO -> time para int parc with . time zone

    time            shift and go to state 732


state 656

    (331) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    like            reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadenaString    reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadena          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    unique          reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    check           reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 331 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 657

    (175) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    unique          reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    check           reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 175 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 658

    (177) OPCOLUMN -> constraint id . unique
    (183) OPCOLUMN -> constraint id . check para CONDCHECK parc

    unique          shift and go to state 733
    check           shift and go to state 734


state 659

    (178) OPCOLUMN -> not null .

    constraint      reduce using rule 178 (OPCOLUMN -> not null .)
    not             reduce using rule 178 (OPCOLUMN -> not null .)
    primary         reduce using rule 178 (OPCOLUMN -> not null .)
    null            reduce using rule 178 (OPCOLUMN -> not null .)
    unique          reduce using rule 178 (OPCOLUMN -> not null .)
    references      reduce using rule 178 (OPCOLUMN -> not null .)
    check           reduce using rule 178 (OPCOLUMN -> not null .)
    default         reduce using rule 178 (OPCOLUMN -> not null .)
    parc            reduce using rule 178 (OPCOLUMN -> not null .)
    coma            reduce using rule 178 (OPCOLUMN -> not null .)


state 660

    (179) OPCOLUMN -> primary key .

    constraint      reduce using rule 179 (OPCOLUMN -> primary key .)
    not             reduce using rule 179 (OPCOLUMN -> primary key .)
    primary         reduce using rule 179 (OPCOLUMN -> primary key .)
    null            reduce using rule 179 (OPCOLUMN -> primary key .)
    unique          reduce using rule 179 (OPCOLUMN -> primary key .)
    references      reduce using rule 179 (OPCOLUMN -> primary key .)
    check           reduce using rule 179 (OPCOLUMN -> primary key .)
    default         reduce using rule 179 (OPCOLUMN -> primary key .)
    parc            reduce using rule 179 (OPCOLUMN -> primary key .)
    coma            reduce using rule 179 (OPCOLUMN -> primary key .)


state 661

    (182) OPCOLUMN -> references id .

    constraint      reduce using rule 182 (OPCOLUMN -> references id .)
    not             reduce using rule 182 (OPCOLUMN -> references id .)
    primary         reduce using rule 182 (OPCOLUMN -> references id .)
    null            reduce using rule 182 (OPCOLUMN -> references id .)
    unique          reduce using rule 182 (OPCOLUMN -> references id .)
    references      reduce using rule 182 (OPCOLUMN -> references id .)
    check           reduce using rule 182 (OPCOLUMN -> references id .)
    default         reduce using rule 182 (OPCOLUMN -> references id .)
    parc            reduce using rule 182 (OPCOLUMN -> references id .)
    coma            reduce using rule 182 (OPCOLUMN -> references id .)


state 662

    (184) OPCOLUMN -> check para . CONDCHECK parc
    (190) CONDCHECK -> . EXP mayor EXP
    (191) CONDCHECK -> . EXP menor EXP
    (192) CONDCHECK -> . EXP mayor_igual EXP
    (193) CONDCHECK -> . EXP menor_igual EXP
    (194) CONDCHECK -> . EXP igual EXP
    (195) CONDCHECK -> . EXP diferente1 EXP
    (196) CONDCHECK -> . EXP diferente2 EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    CONDCHECK                      shift and go to state 735
    EXP                            shift and go to state 591
    SELECT                         shift and go to state 72

state 663

    (185) OPCOLUMN -> default EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 185 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 185 (OPCOLUMN -> default EXP .)
    null            reduce using rule 185 (OPCOLUMN -> default EXP .)
    unique          reduce using rule 185 (OPCOLUMN -> default EXP .)
    references      reduce using rule 185 (OPCOLUMN -> default EXP .)
    check           reduce using rule 185 (OPCOLUMN -> default EXP .)
    default         reduce using rule 185 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 185 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 185 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151

  ! not             [ reduce using rule 185 (OPCOLUMN -> default EXP .) ]


state 664

    (168) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    use             reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    select          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    id              reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    if              reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    execute         reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 168 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 665

    (197) HERENCIA -> inherits para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 736
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 666

    (186) OPCONST -> primary key para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 737
    coma            shift and go to state 125


state 667

    (187) OPCONST -> foreign key para LEXP . parc references id para LEXP parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 738
    coma            shift and go to state 125


state 668

    (188) OPCONST -> check para CONDCHECK parc .

    parc            reduce using rule 188 (OPCONST -> check para CONDCHECK parc .)
    coma            reduce using rule 188 (OPCONST -> check para CONDCHECK parc .)


state 669

    (190) CONDCHECK -> EXP mayor . EXP
    (288) EXP -> EXP mayor . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 739
    SELECT                         shift and go to state 72

state 670

    (191) CONDCHECK -> EXP menor . EXP
    (289) EXP -> EXP menor . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 740
    SELECT                         shift and go to state 72

state 671

    (192) CONDCHECK -> EXP mayor_igual . EXP
    (290) EXP -> EXP mayor_igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 741
    SELECT                         shift and go to state 72

state 672

    (193) CONDCHECK -> EXP menor_igual . EXP
    (291) EXP -> EXP menor_igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 742
    SELECT                         shift and go to state 72

state 673

    (194) CONDCHECK -> EXP igual . EXP
    (292) EXP -> EXP igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 743
    SELECT                         shift and go to state 72

state 674

    (195) CONDCHECK -> EXP diferente1 . EXP
    (293) EXP -> EXP diferente1 . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 744
    SELECT                         shift and go to state 72

state 675

    (196) CONDCHECK -> EXP diferente2 . EXP
    (294) EXP -> EXP diferente2 . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 745
    SELECT                         shift and go to state 72

state 676

    (189) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 189 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 189 (OPCONST -> unique para LEXP parc .)


state 677

    (198) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 198 (CREATETYPE -> create type id as enum para LEXP parc .)


state 678

    (54) CREATEINDEX -> create index id on id para id id . ORDEN parc
    (55) CREATEINDEX -> create index id on id para id id . parc
    (56) ORDEN -> . asc
    (57) ORDEN -> . desc
    (58) ORDEN -> . nulls first
    (59) ORDEN -> . nulls last
    (60) ORDEN -> . asc nulls first
    (61) ORDEN -> . desc nulls last
    (62) ORDEN -> . desc nulls first
    (63) ORDEN -> . asc nulls last

    parc            shift and go to state 747
    asc             shift and go to state 680
    desc            shift and go to state 681
    nulls           shift and go to state 682

    ORDEN                          shift and go to state 746

state 679

    (53) CREATEINDEX -> create index id on id para id ORDEN . parc

    parc            shift and go to state 748


state 680

    (56) ORDEN -> asc .
    (60) ORDEN -> asc . nulls first
    (63) ORDEN -> asc . nulls last

    parc            reduce using rule 56 (ORDEN -> asc .)
    nulls           shift and go to state 749


state 681

    (57) ORDEN -> desc .
    (61) ORDEN -> desc . nulls last
    (62) ORDEN -> desc . nulls first

    parc            reduce using rule 57 (ORDEN -> desc .)
    nulls           shift and go to state 750


state 682

    (58) ORDEN -> nulls . first
    (59) ORDEN -> nulls . last

    first           shift and go to state 751
    last            shift and go to state 752


state 683

    (50) CREATEINDEX -> create index id on id para LEXP parc .

    ptcoma          reduce using rule 50 (CREATEINDEX -> create index id on id para LEXP parc .)
    where           reduce using rule 50 (CREATEINDEX -> create index id on id para LEXP parc .)


state 684

    (52) CREATEINDEX -> create index id on id using hash para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 753
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 685

    (51) CREATEINDEX -> create unique index id on id para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 754
    coma            shift and go to state 125


state 686

    (35) PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .
    (39) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    use             reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    select          reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    create          reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    update          reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    case            reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    show            reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    id              reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    if              reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    execute         reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 35 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    as              shift and go to state 507
    do              shift and go to state 508

    CONTENIDOP                     shift and go to state 605

state 687

    (36) PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .

    use             reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    select          reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    create          reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    update          reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    case            reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    show            reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    id              reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    if              reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 36 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)


state 688

    (43) LPARAM -> LPARAM coma inout id . TIPO
    (235) TIPO -> . decimal para LEXP parc
    (236) TIPO -> . numeric para LEXP parc
    (237) TIPO -> . varchar para int parc
    (238) TIPO -> . timestamp para int parc
    (239) TIPO -> . character para int parc
    (240) TIPO -> . interval para int parc
    (241) TIPO -> . char para int parc
    (242) TIPO -> . time para int parc
    (243) TIPO -> . character varying para int parc
    (244) TIPO -> . interval cadena
    (245) TIPO -> . id modulo rowtype
    (246) TIPO -> . idPunto modulo type
    (247) TIPO -> . timestamp para int parc without time zone
    (248) TIPO -> . timestamp para int parc with time zone
    (249) TIPO -> . time para int parc without time zone
    (250) TIPO -> . time para int parc with time zone
    (251) TIPO -> . interval para int parc cadena
    (252) TIPO -> . smallint
    (253) TIPO -> . integer
    (254) TIPO -> . r_int
    (255) TIPO -> . bigint
    (256) TIPO -> . real
    (257) TIPO -> . double precision
    (258) TIPO -> . money
    (259) TIPO -> . text
    (260) TIPO -> . timestamp
    (261) TIPO -> . date
    (262) TIPO -> . time
    (263) TIPO -> . interval
    (264) TIPO -> . boolean
    (265) TIPO -> . record
    (266) TIPO -> . varchar
    (267) TIPO -> . decimal
    (268) TIPO -> . numeric
    (269) TIPO -> . id
    (270) TIPO -> . timestamp without time zone
    (271) TIPO -> . timestamp with time zone
    (272) TIPO -> . time without time zone
    (273) TIPO -> . time with time zone

    decimal         shift and go to state 237
    numeric         shift and go to state 238
    varchar         shift and go to state 239
    timestamp       shift and go to state 240
    character       shift and go to state 241
    interval        shift and go to state 242
    char            shift and go to state 243
    time            shift and go to state 244
    id              shift and go to state 245
    idPunto         shift and go to state 246
    smallint        shift and go to state 247
    integer         shift and go to state 248
    r_int           shift and go to state 249
    bigint          shift and go to state 250
    real            shift and go to state 251
    double          shift and go to state 252
    money           shift and go to state 253
    text            shift and go to state 254
    date            shift and go to state 255
    boolean         shift and go to state 256
    record          shift and go to state 257

    TIPO                           shift and go to state 755

state 689

    (44) LPARAM -> LPARAM coma id TIPO .

    parc            reduce using rule 44 (LPARAM -> LPARAM coma id TIPO .)
    coma            reduce using rule 44 (LPARAM -> LPARAM coma id TIPO .)


state 690

    (48) LENGUAJE -> language plpgsql ptcoma .

    as              reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    do              reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    use             reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    select          reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    create          reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    update          reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    delete          reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    alter           reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    drop            reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    insert          reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    case            reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    show            reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    id              reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    if              reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    execute         reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)
    $end            reduce using rule 48 (LENGUAJE -> language plpgsql ptcoma .)


state 691

    (41) CONTENIDOP -> as dolarn LISTACONTENIDO . dolarn
    (87) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    dolarn          shift and go to state 756
    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    CONTENIDO                      shift and go to state 419
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 692

    (42) CONTENIDOP -> do dolarn LISTACONTENIDO . dolarn
    (87) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    dolarn          shift and go to state 757
    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    CONTENIDO                      shift and go to state 419
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 693

    (26) FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE . LCONTENIDOP
    (39) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (40) LCONTENIDOP -> . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    as              shift and go to state 507
    do              shift and go to state 508

    LCONTENIDOP                    shift and go to state 758
    CONTENIDOP                     shift and go to state 506

state 694

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP . LENGUAJE
    (39) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (47) LENGUAJE -> . language plpgsql
    (48) LENGUAJE -> . language plpgsql ptcoma
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 505
    as              shift and go to state 507
    do              shift and go to state 508

    LENGUAJE                       shift and go to state 759
    CONTENIDOP                     shift and go to state 605

state 695

    (28) FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .
    (39) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    use             reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    select          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    create          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    update          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    case            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    show            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    id              reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    if              reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    execute         reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    as              shift and go to state 507
    do              shift and go to state 508

    CONTENIDOP                     shift and go to state 605

state 696

    (29) FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .

    use             reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    select          reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    create          reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    update          reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    case            reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    show            reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    id              reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    if              reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 29 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)


state 697

    (228) LCAMPOS -> LCAMPOS coma id igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    where           reduce using rule 228 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    coma            reduce using rule 228 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 698

    (140) OP -> alter column id set not . null

    null            shift and go to state 760


state 699

    (141) OP -> alter column id set null .

    coma            reduce using rule 141 (OP -> alter column id set null .)
    ptcoma          reduce using rule 141 (OP -> alter column id set null .)


state 700

    (146) OP -> alter column id type TIPO .

    coma            reduce using rule 146 (OP -> alter column id type TIPO .)
    ptcoma          reduce using rule 146 (OP -> alter column id type TIPO .)


state 701

    (134) OP -> add check para CONDCHECK parc .

    coma            reduce using rule 134 (OP -> add check para CONDCHECK parc .)
    ptcoma          reduce using rule 134 (OP -> add check para CONDCHECK parc .)


state 702

    (135) OP -> add constraint id check para . CONDCHECK parc
    (190) CONDCHECK -> . EXP mayor EXP
    (191) CONDCHECK -> . EXP menor EXP
    (192) CONDCHECK -> . EXP mayor_igual EXP
    (193) CONDCHECK -> . EXP menor_igual EXP
    (194) CONDCHECK -> . EXP igual EXP
    (195) CONDCHECK -> . EXP diferente1 EXP
    (196) CONDCHECK -> . EXP diferente2 EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    CONDCHECK                      shift and go to state 761
    EXP                            shift and go to state 591
    SELECT                         shift and go to state 72

state 703

    (136) OP -> add constraint id unique para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 762
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 704

    (139) OP -> add constraint id foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 763


state 705

    (137) OP -> add unique para LEXP parc .

    coma            reduce using rule 137 (OP -> add unique para LEXP parc .)
    ptcoma          reduce using rule 137 (OP -> add unique para LEXP parc .)


state 706

    (138) OP -> add foreign key para LEXP . parc references id para LEXP parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 764
    coma            shift and go to state 125


state 707

    (145) OP -> rename column id to id .

    coma            reduce using rule 145 (OP -> rename column id to id .)
    ptcoma          reduce using rule 145 (OP -> rename column id to id .)


state 708

    (130) ALTER -> alter index if exist id alter column EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 130 (ALTER -> alter index if exist id alter column EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 709

    (76) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if .

    ptcoma          reduce using rule 76 (CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if .)


state 710

    (80) LELIF -> LELIF elsif EXP then . LISTACONTENIDO
    (87) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (88) LISTACONTENIDO -> . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    LISTACONTENIDO                 shift and go to state 765
    CONTENIDO                      shift and go to state 299
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 711

    (81) LELIF -> elsif EXP then LISTACONTENIDO .
    (87) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    end             reduce using rule 81 (LELIF -> elsif EXP then LISTACONTENIDO .)
    elsif           reduce using rule 81 (LELIF -> elsif EXP then LISTACONTENIDO .)
    else            reduce using rule 81 (LELIF -> elsif EXP then LISTACONTENIDO .)
    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    CONTENIDO                      shift and go to state 419
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 712

    (66) DECLARACIONES -> id TIPO not null . ASIG ptcoma
    (70) ASIG -> . default EXP
    (71) ASIG -> . igual EXP
    (72) ASIG -> . dospuntos igual EXP
    (73) ASIG -> .

    default         shift and go to state 634
    igual           shift and go to state 635
    dospuntos       shift and go to state 636
    ptcoma          reduce using rule 73 (ASIG -> .)

    ASIG                           shift and go to state 766

state 713

    (67) DECLARACIONES -> id TIPO ASIG ptcoma .

    id              reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    end             reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    elsif           reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    else            reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    declare         reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    if              reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    raise           reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    begin           reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    execute         reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    return          reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    insert          reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    select          reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    update          reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    delete          reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    case            reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    when            reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    dolarn          reduce using rule 67 (DECLARACIONES -> id TIPO ASIG ptcoma .)


state 714

    (70) ASIG -> default EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 70 (ASIG -> default EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 715

    (71) ASIG -> igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 71 (ASIG -> igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 716

    (72) ASIG -> dospuntos igual . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 767
    SELECT                         shift and go to state 72

state 717

    (68) DECLARACIONES -> id constant TIPO not . null ASIG ptcoma

    null            shift and go to state 768


state 718

    (69) DECLARACIONES -> id constant TIPO ASIG . ptcoma

    ptcoma          shift and go to state 769


state 719

    (105) RAISE -> raise LEVEL cadena coma id .

    ptcoma          reduce using rule 105 (RAISE -> raise LEVEL cadena coma id .)


state 720

    (111) FORMAT -> format para EXP . coma LEXP parc
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    coma            shift and go to state 770
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 721

    (117) INSERT -> insert into id para LEXP parc values para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 771
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 722

    (199) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (222) ORDER -> . order by LEXP ORD
    (223) ORDER -> . order by LEXP
    (224) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 552
    r_from          reduce using rule 224 (ORDER -> .)
    coma            reduce using rule 224 (ORDER -> .)
    where           reduce using rule 224 (ORDER -> .)
    group           reduce using rule 224 (ORDER -> .)
    having          reduce using rule 224 (ORDER -> .)
    union           reduce using rule 224 (ORDER -> .)
    intersect       reduce using rule 224 (ORDER -> .)
    except          reduce using rule 224 (ORDER -> .)
    limit           reduce using rule 224 (ORDER -> .)
    offset          reduce using rule 224 (ORDER -> .)
    ptcoma          reduce using rule 224 (ORDER -> .)
    mas             reduce using rule 224 (ORDER -> .)
    menos           reduce using rule 224 (ORDER -> .)
    multiplicacion  reduce using rule 224 (ORDER -> .)
    division        reduce using rule 224 (ORDER -> .)
    modulo          reduce using rule 224 (ORDER -> .)
    elevado         reduce using rule 224 (ORDER -> .)
    and             reduce using rule 224 (ORDER -> .)
    or              reduce using rule 224 (ORDER -> .)
    mayor           reduce using rule 224 (ORDER -> .)
    menor           reduce using rule 224 (ORDER -> .)
    mayor_igual     reduce using rule 224 (ORDER -> .)
    menor_igual     reduce using rule 224 (ORDER -> .)
    igual           reduce using rule 224 (ORDER -> .)
    diferente1      reduce using rule 224 (ORDER -> .)
    diferente2      reduce using rule 224 (ORDER -> .)
    between         reduce using rule 224 (ORDER -> .)
    is              reduce using rule 224 (ORDER -> .)
    not             reduce using rule 224 (ORDER -> .)
    as              reduce using rule 224 (ORDER -> .)
    like            reduce using rule 224 (ORDER -> .)
    isnull          reduce using rule 224 (ORDER -> .)
    notnull         reduce using rule 224 (ORDER -> .)
    cadenaString    reduce using rule 224 (ORDER -> .)
    id              reduce using rule 224 (ORDER -> .)
    cadena          reduce using rule 224 (ORDER -> .)
    in              reduce using rule 224 (ORDER -> .)
    then            reduce using rule 224 (ORDER -> .)
    when            reduce using rule 224 (ORDER -> .)
    parc            reduce using rule 224 (ORDER -> .)
    constraint      reduce using rule 224 (ORDER -> .)
    primary         reduce using rule 224 (ORDER -> .)
    null            reduce using rule 224 (ORDER -> .)
    unique          reduce using rule 224 (ORDER -> .)
    references      reduce using rule 224 (ORDER -> .)
    check           reduce using rule 224 (ORDER -> .)
    default         reduce using rule 224 (ORDER -> .)
    asc             reduce using rule 224 (ORDER -> .)
    desc            reduce using rule 224 (ORDER -> .)

  ! order           [ reduce using rule 224 (ORDER -> .) ]

    ORDER                          shift and go to state 772

state 723

    (200) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (202) LIMIT -> . limit int
    (203) LIMIT -> . limit all
    (204) LIMIT -> . offset int
    (205) LIMIT -> . limit int offset int
    (206) LIMIT -> . offset int limit int
    (207) LIMIT -> . limit all offset int
    (208) LIMIT -> . offset int limit all
    (209) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 645
    offset          shift and go to state 646
    ptcoma          reduce using rule 209 (LIMIT -> .)
    r_from          reduce using rule 209 (LIMIT -> .)
    coma            reduce using rule 209 (LIMIT -> .)
    where           reduce using rule 209 (LIMIT -> .)
    group           reduce using rule 209 (LIMIT -> .)
    having          reduce using rule 209 (LIMIT -> .)
    union           reduce using rule 209 (LIMIT -> .)
    intersect       reduce using rule 209 (LIMIT -> .)
    except          reduce using rule 209 (LIMIT -> .)
    order           reduce using rule 209 (LIMIT -> .)
    mas             reduce using rule 209 (LIMIT -> .)
    menos           reduce using rule 209 (LIMIT -> .)
    multiplicacion  reduce using rule 209 (LIMIT -> .)
    division        reduce using rule 209 (LIMIT -> .)
    modulo          reduce using rule 209 (LIMIT -> .)
    elevado         reduce using rule 209 (LIMIT -> .)
    and             reduce using rule 209 (LIMIT -> .)
    or              reduce using rule 209 (LIMIT -> .)
    mayor           reduce using rule 209 (LIMIT -> .)
    menor           reduce using rule 209 (LIMIT -> .)
    mayor_igual     reduce using rule 209 (LIMIT -> .)
    menor_igual     reduce using rule 209 (LIMIT -> .)
    igual           reduce using rule 209 (LIMIT -> .)
    diferente1      reduce using rule 209 (LIMIT -> .)
    diferente2      reduce using rule 209 (LIMIT -> .)
    between         reduce using rule 209 (LIMIT -> .)
    is              reduce using rule 209 (LIMIT -> .)
    not             reduce using rule 209 (LIMIT -> .)
    as              reduce using rule 209 (LIMIT -> .)
    like            reduce using rule 209 (LIMIT -> .)
    isnull          reduce using rule 209 (LIMIT -> .)
    notnull         reduce using rule 209 (LIMIT -> .)
    cadenaString    reduce using rule 209 (LIMIT -> .)
    id              reduce using rule 209 (LIMIT -> .)
    cadena          reduce using rule 209 (LIMIT -> .)
    in              reduce using rule 209 (LIMIT -> .)
    then            reduce using rule 209 (LIMIT -> .)
    when            reduce using rule 209 (LIMIT -> .)
    parc            reduce using rule 209 (LIMIT -> .)
    constraint      reduce using rule 209 (LIMIT -> .)
    primary         reduce using rule 209 (LIMIT -> .)
    null            reduce using rule 209 (LIMIT -> .)
    unique          reduce using rule 209 (LIMIT -> .)
    references      reduce using rule 209 (LIMIT -> .)
    check           reduce using rule 209 (LIMIT -> .)
    default         reduce using rule 209 (LIMIT -> .)
    asc             reduce using rule 209 (LIMIT -> .)
    desc            reduce using rule 209 (LIMIT -> .)

  ! limit           [ reduce using rule 209 (LIMIT -> .) ]
  ! offset          [ reduce using rule 209 (LIMIT -> .) ]

    LIMIT                          shift and go to state 773

state 724

    (202) LIMIT -> limit int .
    (205) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 202 (LIMIT -> limit int .)
    r_from          reduce using rule 202 (LIMIT -> limit int .)
    coma            reduce using rule 202 (LIMIT -> limit int .)
    where           reduce using rule 202 (LIMIT -> limit int .)
    group           reduce using rule 202 (LIMIT -> limit int .)
    having          reduce using rule 202 (LIMIT -> limit int .)
    union           reduce using rule 202 (LIMIT -> limit int .)
    intersect       reduce using rule 202 (LIMIT -> limit int .)
    except          reduce using rule 202 (LIMIT -> limit int .)
    order           reduce using rule 202 (LIMIT -> limit int .)
    limit           reduce using rule 202 (LIMIT -> limit int .)
    mas             reduce using rule 202 (LIMIT -> limit int .)
    menos           reduce using rule 202 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 202 (LIMIT -> limit int .)
    division        reduce using rule 202 (LIMIT -> limit int .)
    modulo          reduce using rule 202 (LIMIT -> limit int .)
    elevado         reduce using rule 202 (LIMIT -> limit int .)
    and             reduce using rule 202 (LIMIT -> limit int .)
    or              reduce using rule 202 (LIMIT -> limit int .)
    mayor           reduce using rule 202 (LIMIT -> limit int .)
    menor           reduce using rule 202 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 202 (LIMIT -> limit int .)
    menor_igual     reduce using rule 202 (LIMIT -> limit int .)
    igual           reduce using rule 202 (LIMIT -> limit int .)
    diferente1      reduce using rule 202 (LIMIT -> limit int .)
    diferente2      reduce using rule 202 (LIMIT -> limit int .)
    between         reduce using rule 202 (LIMIT -> limit int .)
    is              reduce using rule 202 (LIMIT -> limit int .)
    not             reduce using rule 202 (LIMIT -> limit int .)
    as              reduce using rule 202 (LIMIT -> limit int .)
    like            reduce using rule 202 (LIMIT -> limit int .)
    isnull          reduce using rule 202 (LIMIT -> limit int .)
    notnull         reduce using rule 202 (LIMIT -> limit int .)
    cadenaString    reduce using rule 202 (LIMIT -> limit int .)
    id              reduce using rule 202 (LIMIT -> limit int .)
    cadena          reduce using rule 202 (LIMIT -> limit int .)
    in              reduce using rule 202 (LIMIT -> limit int .)
    then            reduce using rule 202 (LIMIT -> limit int .)
    when            reduce using rule 202 (LIMIT -> limit int .)
    parc            reduce using rule 202 (LIMIT -> limit int .)
    constraint      reduce using rule 202 (LIMIT -> limit int .)
    primary         reduce using rule 202 (LIMIT -> limit int .)
    null            reduce using rule 202 (LIMIT -> limit int .)
    unique          reduce using rule 202 (LIMIT -> limit int .)
    references      reduce using rule 202 (LIMIT -> limit int .)
    check           reduce using rule 202 (LIMIT -> limit int .)
    default         reduce using rule 202 (LIMIT -> limit int .)
    asc             reduce using rule 202 (LIMIT -> limit int .)
    desc            reduce using rule 202 (LIMIT -> limit int .)
    offset          shift and go to state 774

  ! offset          [ reduce using rule 202 (LIMIT -> limit int .) ]


state 725

    (203) LIMIT -> limit all .
    (207) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 203 (LIMIT -> limit all .)
    r_from          reduce using rule 203 (LIMIT -> limit all .)
    coma            reduce using rule 203 (LIMIT -> limit all .)
    where           reduce using rule 203 (LIMIT -> limit all .)
    group           reduce using rule 203 (LIMIT -> limit all .)
    having          reduce using rule 203 (LIMIT -> limit all .)
    union           reduce using rule 203 (LIMIT -> limit all .)
    intersect       reduce using rule 203 (LIMIT -> limit all .)
    except          reduce using rule 203 (LIMIT -> limit all .)
    order           reduce using rule 203 (LIMIT -> limit all .)
    limit           reduce using rule 203 (LIMIT -> limit all .)
    mas             reduce using rule 203 (LIMIT -> limit all .)
    menos           reduce using rule 203 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 203 (LIMIT -> limit all .)
    division        reduce using rule 203 (LIMIT -> limit all .)
    modulo          reduce using rule 203 (LIMIT -> limit all .)
    elevado         reduce using rule 203 (LIMIT -> limit all .)
    and             reduce using rule 203 (LIMIT -> limit all .)
    or              reduce using rule 203 (LIMIT -> limit all .)
    mayor           reduce using rule 203 (LIMIT -> limit all .)
    menor           reduce using rule 203 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 203 (LIMIT -> limit all .)
    menor_igual     reduce using rule 203 (LIMIT -> limit all .)
    igual           reduce using rule 203 (LIMIT -> limit all .)
    diferente1      reduce using rule 203 (LIMIT -> limit all .)
    diferente2      reduce using rule 203 (LIMIT -> limit all .)
    between         reduce using rule 203 (LIMIT -> limit all .)
    is              reduce using rule 203 (LIMIT -> limit all .)
    not             reduce using rule 203 (LIMIT -> limit all .)
    as              reduce using rule 203 (LIMIT -> limit all .)
    like            reduce using rule 203 (LIMIT -> limit all .)
    isnull          reduce using rule 203 (LIMIT -> limit all .)
    notnull         reduce using rule 203 (LIMIT -> limit all .)
    cadenaString    reduce using rule 203 (LIMIT -> limit all .)
    id              reduce using rule 203 (LIMIT -> limit all .)
    cadena          reduce using rule 203 (LIMIT -> limit all .)
    in              reduce using rule 203 (LIMIT -> limit all .)
    then            reduce using rule 203 (LIMIT -> limit all .)
    when            reduce using rule 203 (LIMIT -> limit all .)
    parc            reduce using rule 203 (LIMIT -> limit all .)
    constraint      reduce using rule 203 (LIMIT -> limit all .)
    primary         reduce using rule 203 (LIMIT -> limit all .)
    null            reduce using rule 203 (LIMIT -> limit all .)
    unique          reduce using rule 203 (LIMIT -> limit all .)
    references      reduce using rule 203 (LIMIT -> limit all .)
    check           reduce using rule 203 (LIMIT -> limit all .)
    default         reduce using rule 203 (LIMIT -> limit all .)
    asc             reduce using rule 203 (LIMIT -> limit all .)
    desc            reduce using rule 203 (LIMIT -> limit all .)
    offset          shift and go to state 775

  ! offset          [ reduce using rule 203 (LIMIT -> limit all .) ]


state 726

    (204) LIMIT -> offset int .
    (206) LIMIT -> offset int . limit int
    (208) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    ptcoma          reduce using rule 204 (LIMIT -> offset int .)
    r_from          reduce using rule 204 (LIMIT -> offset int .)
    coma            reduce using rule 204 (LIMIT -> offset int .)
    where           reduce using rule 204 (LIMIT -> offset int .)
    group           reduce using rule 204 (LIMIT -> offset int .)
    having          reduce using rule 204 (LIMIT -> offset int .)
    union           reduce using rule 204 (LIMIT -> offset int .)
    intersect       reduce using rule 204 (LIMIT -> offset int .)
    except          reduce using rule 204 (LIMIT -> offset int .)
    order           reduce using rule 204 (LIMIT -> offset int .)
    offset          reduce using rule 204 (LIMIT -> offset int .)
    mas             reduce using rule 204 (LIMIT -> offset int .)
    menos           reduce using rule 204 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 204 (LIMIT -> offset int .)
    division        reduce using rule 204 (LIMIT -> offset int .)
    modulo          reduce using rule 204 (LIMIT -> offset int .)
    elevado         reduce using rule 204 (LIMIT -> offset int .)
    and             reduce using rule 204 (LIMIT -> offset int .)
    or              reduce using rule 204 (LIMIT -> offset int .)
    mayor           reduce using rule 204 (LIMIT -> offset int .)
    menor           reduce using rule 204 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 204 (LIMIT -> offset int .)
    menor_igual     reduce using rule 204 (LIMIT -> offset int .)
    igual           reduce using rule 204 (LIMIT -> offset int .)
    diferente1      reduce using rule 204 (LIMIT -> offset int .)
    diferente2      reduce using rule 204 (LIMIT -> offset int .)
    between         reduce using rule 204 (LIMIT -> offset int .)
    is              reduce using rule 204 (LIMIT -> offset int .)
    not             reduce using rule 204 (LIMIT -> offset int .)
    as              reduce using rule 204 (LIMIT -> offset int .)
    like            reduce using rule 204 (LIMIT -> offset int .)
    isnull          reduce using rule 204 (LIMIT -> offset int .)
    notnull         reduce using rule 204 (LIMIT -> offset int .)
    cadenaString    reduce using rule 204 (LIMIT -> offset int .)
    id              reduce using rule 204 (LIMIT -> offset int .)
    cadena          reduce using rule 204 (LIMIT -> offset int .)
    in              reduce using rule 204 (LIMIT -> offset int .)
    then            reduce using rule 204 (LIMIT -> offset int .)
    when            reduce using rule 204 (LIMIT -> offset int .)
    parc            reduce using rule 204 (LIMIT -> offset int .)
    constraint      reduce using rule 204 (LIMIT -> offset int .)
    primary         reduce using rule 204 (LIMIT -> offset int .)
    null            reduce using rule 204 (LIMIT -> offset int .)
    unique          reduce using rule 204 (LIMIT -> offset int .)
    references      reduce using rule 204 (LIMIT -> offset int .)
    check           reduce using rule 204 (LIMIT -> offset int .)
    default         reduce using rule 204 (LIMIT -> offset int .)
    asc             reduce using rule 204 (LIMIT -> offset int .)
    desc            reduce using rule 204 (LIMIT -> offset int .)
    limit           shift and go to state 776

  ! limit           [ reduce using rule 204 (LIMIT -> offset int .) ]


state 727

    (222) ORDER -> order by LEXP . ORD
    (223) ORDER -> order by LEXP .
    (233) LEXP -> LEXP . coma EXP
    (225) ORD -> . asc
    (226) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 223 (ORDER -> order by LEXP .)
    where           reduce using rule 223 (ORDER -> order by LEXP .)
    group           reduce using rule 223 (ORDER -> order by LEXP .)
    having          reduce using rule 223 (ORDER -> order by LEXP .)
    union           reduce using rule 223 (ORDER -> order by LEXP .)
    intersect       reduce using rule 223 (ORDER -> order by LEXP .)
    except          reduce using rule 223 (ORDER -> order by LEXP .)
    order           reduce using rule 223 (ORDER -> order by LEXP .)
    limit           reduce using rule 223 (ORDER -> order by LEXP .)
    offset          reduce using rule 223 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 223 (ORDER -> order by LEXP .)
    mas             reduce using rule 223 (ORDER -> order by LEXP .)
    menos           reduce using rule 223 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 223 (ORDER -> order by LEXP .)
    division        reduce using rule 223 (ORDER -> order by LEXP .)
    modulo          reduce using rule 223 (ORDER -> order by LEXP .)
    elevado         reduce using rule 223 (ORDER -> order by LEXP .)
    and             reduce using rule 223 (ORDER -> order by LEXP .)
    or              reduce using rule 223 (ORDER -> order by LEXP .)
    mayor           reduce using rule 223 (ORDER -> order by LEXP .)
    menor           reduce using rule 223 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 223 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 223 (ORDER -> order by LEXP .)
    igual           reduce using rule 223 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 223 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 223 (ORDER -> order by LEXP .)
    between         reduce using rule 223 (ORDER -> order by LEXP .)
    is              reduce using rule 223 (ORDER -> order by LEXP .)
    not             reduce using rule 223 (ORDER -> order by LEXP .)
    as              reduce using rule 223 (ORDER -> order by LEXP .)
    like            reduce using rule 223 (ORDER -> order by LEXP .)
    isnull          reduce using rule 223 (ORDER -> order by LEXP .)
    notnull         reduce using rule 223 (ORDER -> order by LEXP .)
    cadenaString    reduce using rule 223 (ORDER -> order by LEXP .)
    id              reduce using rule 223 (ORDER -> order by LEXP .)
    cadena          reduce using rule 223 (ORDER -> order by LEXP .)
    in              reduce using rule 223 (ORDER -> order by LEXP .)
    then            reduce using rule 223 (ORDER -> order by LEXP .)
    when            reduce using rule 223 (ORDER -> order by LEXP .)
    parc            reduce using rule 223 (ORDER -> order by LEXP .)
    constraint      reduce using rule 223 (ORDER -> order by LEXP .)
    primary         reduce using rule 223 (ORDER -> order by LEXP .)
    null            reduce using rule 223 (ORDER -> order by LEXP .)
    unique          reduce using rule 223 (ORDER -> order by LEXP .)
    references      reduce using rule 223 (ORDER -> order by LEXP .)
    check           reduce using rule 223 (ORDER -> order by LEXP .)
    default         reduce using rule 223 (ORDER -> order by LEXP .)
    coma            shift and go to state 125
    asc             shift and go to state 778
    desc            shift and go to state 779

  ! coma            [ reduce using rule 223 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 223 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 223 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 777

state 728

    (325) EXP -> para EXP . parc
    (234) LEXP -> EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 260
    coma            reduce using rule 234 (LEXP -> EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151

  ! parc            [ reduce using rule 234 (LEXP -> EXP .) ]


state 729

    (247) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 780


state 730

    (248) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 781


state 731

    (249) TIPO -> time para int parc without time . zone

    zone            shift and go to state 782


state 732

    (250) TIPO -> time para int parc with time . zone

    zone            shift and go to state 783


state 733

    (177) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    unique          reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    check           reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 177 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 177 (OPCOLUMN -> constraint id unique .)


state 734

    (183) OPCOLUMN -> constraint id check . para CONDCHECK parc

    para            shift and go to state 784


state 735

    (184) OPCOLUMN -> check para CONDCHECK . parc

    parc            shift and go to state 785


state 736

    (197) HERENCIA -> inherits para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 786
    coma            shift and go to state 125


state 737

    (186) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 186 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 186 (OPCONST -> primary key para LEXP parc .)


state 738

    (187) OPCONST -> foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 787


state 739

    (190) CONDCHECK -> EXP mayor EXP .
    (288) EXP -> EXP mayor EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 190 (CONDCHECK -> EXP mayor EXP .)
    mayor           reduce using rule 288 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 288 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 288 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 288 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 288 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 288 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 288 (EXP -> EXP mayor EXP .)
    and             reduce using rule 288 (EXP -> EXP mayor EXP .)
    or              reduce using rule 288 (EXP -> EXP mayor EXP .)
    between         reduce using rule 288 (EXP -> EXP mayor EXP .)
    is              reduce using rule 288 (EXP -> EXP mayor EXP .)
    not             reduce using rule 288 (EXP -> EXP mayor EXP .)
    as              reduce using rule 288 (EXP -> EXP mayor EXP .)
    like            reduce using rule 288 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 288 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 288 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 288 (EXP -> EXP mayor EXP .)
    id              reduce using rule 288 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 288 (EXP -> EXP mayor EXP .)
    in              reduce using rule 288 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 288 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 740

    (191) CONDCHECK -> EXP menor EXP .
    (289) EXP -> EXP menor EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 191 (CONDCHECK -> EXP menor EXP .)
    mayor           reduce using rule 289 (EXP -> EXP menor EXP .)
    menor           reduce using rule 289 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 289 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 289 (EXP -> EXP menor EXP .)
    igual           reduce using rule 289 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 289 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 289 (EXP -> EXP menor EXP .)
    and             reduce using rule 289 (EXP -> EXP menor EXP .)
    or              reduce using rule 289 (EXP -> EXP menor EXP .)
    between         reduce using rule 289 (EXP -> EXP menor EXP .)
    is              reduce using rule 289 (EXP -> EXP menor EXP .)
    not             reduce using rule 289 (EXP -> EXP menor EXP .)
    as              reduce using rule 289 (EXP -> EXP menor EXP .)
    like            reduce using rule 289 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 289 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 289 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 289 (EXP -> EXP menor EXP .)
    id              reduce using rule 289 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 289 (EXP -> EXP menor EXP .)
    in              reduce using rule 289 (EXP -> EXP menor EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 289 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 741

    (192) CONDCHECK -> EXP mayor_igual EXP .
    (290) EXP -> EXP mayor_igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 192 (CONDCHECK -> EXP mayor_igual EXP .)
    mayor           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 290 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 290 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 742

    (193) CONDCHECK -> EXP menor_igual EXP .
    (291) EXP -> EXP menor_igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 193 (CONDCHECK -> EXP menor_igual EXP .)
    mayor           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 291 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 291 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 743

    (194) CONDCHECK -> EXP igual EXP .
    (292) EXP -> EXP igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 194 (CONDCHECK -> EXP igual EXP .)
    mayor           reduce using rule 292 (EXP -> EXP igual EXP .)
    menor           reduce using rule 292 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 292 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 292 (EXP -> EXP igual EXP .)
    igual           reduce using rule 292 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 292 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 292 (EXP -> EXP igual EXP .)
    and             reduce using rule 292 (EXP -> EXP igual EXP .)
    or              reduce using rule 292 (EXP -> EXP igual EXP .)
    between         reduce using rule 292 (EXP -> EXP igual EXP .)
    is              reduce using rule 292 (EXP -> EXP igual EXP .)
    not             reduce using rule 292 (EXP -> EXP igual EXP .)
    as              reduce using rule 292 (EXP -> EXP igual EXP .)
    like            reduce using rule 292 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 292 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 292 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 292 (EXP -> EXP igual EXP .)
    id              reduce using rule 292 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 292 (EXP -> EXP igual EXP .)
    in              reduce using rule 292 (EXP -> EXP igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 292 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 744

    (195) CONDCHECK -> EXP diferente1 EXP .
    (293) EXP -> EXP diferente1 EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 195 (CONDCHECK -> EXP diferente1 EXP .)
    mayor           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 293 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 293 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 745

    (196) CONDCHECK -> EXP diferente2 EXP .
    (294) EXP -> EXP diferente2 EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    parc            reduce using rule 196 (CONDCHECK -> EXP diferente2 EXP .)
    mayor           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 294 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131

  ! mas             [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 294 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 132 ]
  ! or              [ shift and go to state 133 ]
  ! mayor           [ shift and go to state 134 ]
  ! menor           [ shift and go to state 135 ]
  ! mayor_igual     [ shift and go to state 136 ]
  ! menor_igual     [ shift and go to state 137 ]
  ! igual           [ shift and go to state 138 ]
  ! diferente1      [ shift and go to state 139 ]
  ! diferente2      [ shift and go to state 140 ]
  ! between         [ shift and go to state 141 ]
  ! is              [ shift and go to state 142 ]
  ! not             [ shift and go to state 143 ]
  ! as              [ shift and go to state 146 ]
  ! like            [ shift and go to state 144 ]
  ! isnull          [ shift and go to state 149 ]
  ! notnull         [ shift and go to state 150 ]
  ! cadenaString    [ shift and go to state 148 ]
  ! id              [ shift and go to state 147 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 151 ]


state 746

    (54) CREATEINDEX -> create index id on id para id id ORDEN . parc

    parc            shift and go to state 788


state 747

    (55) CREATEINDEX -> create index id on id para id id parc .

    ptcoma          reduce using rule 55 (CREATEINDEX -> create index id on id para id id parc .)
    where           reduce using rule 55 (CREATEINDEX -> create index id on id para id id parc .)


state 748

    (53) CREATEINDEX -> create index id on id para id ORDEN parc .

    ptcoma          reduce using rule 53 (CREATEINDEX -> create index id on id para id ORDEN parc .)
    where           reduce using rule 53 (CREATEINDEX -> create index id on id para id ORDEN parc .)


state 749

    (60) ORDEN -> asc nulls . first
    (63) ORDEN -> asc nulls . last

    first           shift and go to state 789
    last            shift and go to state 790


state 750

    (61) ORDEN -> desc nulls . last
    (62) ORDEN -> desc nulls . first

    last            shift and go to state 791
    first           shift and go to state 792


state 751

    (58) ORDEN -> nulls first .

    parc            reduce using rule 58 (ORDEN -> nulls first .)


state 752

    (59) ORDEN -> nulls last .

    parc            reduce using rule 59 (ORDEN -> nulls last .)


state 753

    (52) CREATEINDEX -> create index id on id using hash para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 793
    coma            shift and go to state 125


state 754

    (51) CREATEINDEX -> create unique index id on id para LEXP parc .

    ptcoma          reduce using rule 51 (CREATEINDEX -> create unique index id on id para LEXP parc .)
    where           reduce using rule 51 (CREATEINDEX -> create unique index id on id para LEXP parc .)


state 755

    (43) LPARAM -> LPARAM coma inout id TIPO .

    parc            reduce using rule 43 (LPARAM -> LPARAM coma inout id TIPO .)
    coma            reduce using rule 43 (LPARAM -> LPARAM coma inout id TIPO .)


state 756

    (41) CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .

    language        reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    as              reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    do              reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    use             reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    select          reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    create          reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    update          reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    delete          reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    alter           reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    drop            reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    insert          reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    case            reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    show            reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    id              reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    if              reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    execute         reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    $end            reduce using rule 41 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)


state 757

    (42) CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .

    language        reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    as              reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    do              reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    use             reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    select          reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    create          reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    update          reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    delete          reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    alter           reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    drop            reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    insert          reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    case            reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    show            reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    id              reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    if              reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    execute         reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    $end            reduce using rule 42 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)


state 758

    (26) FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .
    (39) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (41) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (42) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    use             reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    select          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    create          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    update          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    case            reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    show            reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    id              reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    if              reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    execute         reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    as              shift and go to state 507
    do              shift and go to state 508

    CONTENIDOP                     shift and go to state 605

state 759

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .

    use             reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    select          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    create          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    update          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    case            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    show            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    id              reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    if              reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)


state 760

    (140) OP -> alter column id set not null .

    coma            reduce using rule 140 (OP -> alter column id set not null .)
    ptcoma          reduce using rule 140 (OP -> alter column id set not null .)


state 761

    (135) OP -> add constraint id check para CONDCHECK . parc

    parc            shift and go to state 794


state 762

    (136) OP -> add constraint id unique para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 795
    coma            shift and go to state 125


state 763

    (139) OP -> add constraint id foreign key para . LEXP parc references id para LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 796
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 764

    (138) OP -> add foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 797


state 765

    (80) LELIF -> LELIF elsif EXP then LISTACONTENIDO .
    (87) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (89) CONTENIDO -> . ASIGNACION ptcoma
    (90) CONTENIDO -> . CONDICIONIF ptcoma
    (91) CONTENIDO -> . RAISE ptcoma
    (92) CONTENIDO -> . BEGINEND ptcoma
    (93) CONTENIDO -> . CALLPROCEDURE ptcoma
    (94) CONTENIDO -> . RETURN ptcoma
    (95) CONTENIDO -> . INSERT ptcoma
    (96) CONTENIDO -> . SELECT ptcoma
    (97) CONTENIDO -> . UPDATE ptcoma
    (98) CONTENIDO -> . DELETE ptcoma
    (99) CONTENIDO -> . CASE ptcoma
    (100) CONTENIDO -> . declare LDEC
    (74) ASIGNACION -> . id dospuntos igual EXP
    (75) ASIGNACION -> . id igual EXP
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (77) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (101) RAISE -> . raise LEVEL FORMAT
    (102) RAISE -> . raise LEVEL EXP
    (103) RAISE -> . raise LEVEL
    (104) RAISE -> . raise
    (105) RAISE -> . raise LEVEL cadena coma id
    (49) BEGINEND -> . begin LISTACONTENIDO end
    (33) CALLPROCEDURE -> . execute id para LEXP parc
    (34) CALLPROCEDURE -> . execute id para parc
    (25) RETURN -> . return EXP
    (116) INSERT -> . insert into id values para LEXP parc
    (117) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (227) UPDATE -> . update id set LCAMPOS where LEXP
    (230) DELETE -> . delete r_from id WHERE
    (83) CASE -> . case EXP LISTAWHEN ELSEF end case
    (84) CASE -> . case LISTAWHEN ELSEF end case
    (85) CASE -> . case EXP LISTAWHEN end
    (86) CASE -> . case LISTAWHEN end case

    end             reduce using rule 80 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    elsif           reduce using rule 80 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    else            reduce using rule 80 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    declare         shift and go to state 311
    id              shift and go to state 24
    if              shift and go to state 30
    raise           shift and go to state 312
    begin           shift and go to state 313
    execute         shift and go to state 35
    return          shift and go to state 314
    insert          shift and go to state 32
    select          shift and go to state 25
    update          shift and go to state 27
    delete          shift and go to state 28
    case            shift and go to state 33

    CONTENIDO                      shift and go to state 419
    ASIGNACION                     shift and go to state 300
    CONDICIONIF                    shift and go to state 301
    RAISE                          shift and go to state 302
    BEGINEND                       shift and go to state 303
    CALLPROCEDURE                  shift and go to state 304
    RETURN                         shift and go to state 305
    INSERT                         shift and go to state 306
    SELECT                         shift and go to state 307
    UPDATE                         shift and go to state 308
    DELETE                         shift and go to state 309
    CASE                           shift and go to state 310

state 766

    (66) DECLARACIONES -> id TIPO not null ASIG . ptcoma

    ptcoma          shift and go to state 798


state 767

    (72) ASIG -> dospuntos igual EXP .
    (280) EXP -> EXP . mas EXP
    (281) EXP -> EXP . menos EXP
    (282) EXP -> EXP . multiplicacion EXP
    (283) EXP -> EXP . division EXP
    (284) EXP -> EXP . modulo EXP
    (285) EXP -> EXP . elevado EXP
    (286) EXP -> EXP . and EXP
    (287) EXP -> EXP . or EXP
    (288) EXP -> EXP . mayor EXP
    (289) EXP -> EXP . menor EXP
    (290) EXP -> EXP . mayor_igual EXP
    (291) EXP -> EXP . menor_igual EXP
    (292) EXP -> EXP . igual EXP
    (293) EXP -> EXP . diferente1 EXP
    (294) EXP -> EXP . diferente2 EXP
    (295) EXP -> EXP . between EXP
    (296) EXP -> EXP . is not null
    (297) EXP -> EXP . is not true
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is not unknown
    (300) EXP -> EXP . not like cadena
    (301) EXP -> EXP . is null
    (302) EXP -> EXP . is true
    (303) EXP -> EXP . is unknown
    (304) EXP -> EXP . as cadena
    (305) EXP -> EXP . as id
    (306) EXP -> EXP . as cadenaString
    (307) EXP -> EXP . like cadena
    (308) EXP -> EXP . is false
    (309) EXP -> EXP . isnull
    (310) EXP -> EXP . notnull
    (311) EXP -> EXP . cadenaString
    (312) EXP -> EXP . id
    (313) EXP -> EXP . cadena
    (317) EXP -> EXP . not between EXP
    (318) EXP -> EXP . between symetric EXP
    (319) EXP -> EXP . in para LEXP parc
    (320) EXP -> EXP . not in para LEXP parc
    (321) EXP -> EXP . is not distinct r_from EXP
    (322) EXP -> EXP . is distinct r_from EXP
    (323) EXP -> EXP . not between symetric EXP

    ptcoma          reduce using rule 72 (ASIG -> dospuntos igual EXP .)
    mas             shift and go to state 126
    menos           shift and go to state 127
    multiplicacion  shift and go to state 128
    division        shift and go to state 129
    modulo          shift and go to state 130
    elevado         shift and go to state 131
    and             shift and go to state 132
    or              shift and go to state 133
    mayor           shift and go to state 134
    menor           shift and go to state 135
    mayor_igual     shift and go to state 136
    menor_igual     shift and go to state 137
    igual           shift and go to state 138
    diferente1      shift and go to state 139
    diferente2      shift and go to state 140
    between         shift and go to state 141
    is              shift and go to state 142
    not             shift and go to state 143
    as              shift and go to state 146
    like            shift and go to state 144
    isnull          shift and go to state 149
    notnull         shift and go to state 150
    cadenaString    shift and go to state 148
    id              shift and go to state 147
    cadena          shift and go to state 145
    in              shift and go to state 151


state 768

    (68) DECLARACIONES -> id constant TIPO not null . ASIG ptcoma
    (70) ASIG -> . default EXP
    (71) ASIG -> . igual EXP
    (72) ASIG -> . dospuntos igual EXP
    (73) ASIG -> .

    default         shift and go to state 634
    igual           shift and go to state 635
    dospuntos       shift and go to state 636
    ptcoma          reduce using rule 73 (ASIG -> .)

    ASIG                           shift and go to state 799

state 769

    (69) DECLARACIONES -> id constant TIPO ASIG ptcoma .

    id              reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    end             reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    elsif           reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    else            reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    declare         reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    if              reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    raise           reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    begin           reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    execute         reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    return          reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    insert          reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    select          reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    update          reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    delete          reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    case            reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    when            reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    dolarn          reduce using rule 69 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)


state 770

    (111) FORMAT -> format para EXP coma . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    EXP                            shift and go to state 60
    LEXP                           shift and go to state 800
    SELECT                         shift and go to state 72

state 771

    (117) INSERT -> insert into id para LEXP parc values para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 801
    coma            shift and go to state 125


state 772

    (199) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (202) LIMIT -> . limit int
    (203) LIMIT -> . limit all
    (204) LIMIT -> . offset int
    (205) LIMIT -> . limit int offset int
    (206) LIMIT -> . offset int limit int
    (207) LIMIT -> . limit all offset int
    (208) LIMIT -> . offset int limit all
    (209) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 645
    offset          shift and go to state 646
    ptcoma          reduce using rule 209 (LIMIT -> .)
    r_from          reduce using rule 209 (LIMIT -> .)
    coma            reduce using rule 209 (LIMIT -> .)
    where           reduce using rule 209 (LIMIT -> .)
    group           reduce using rule 209 (LIMIT -> .)
    having          reduce using rule 209 (LIMIT -> .)
    union           reduce using rule 209 (LIMIT -> .)
    intersect       reduce using rule 209 (LIMIT -> .)
    except          reduce using rule 209 (LIMIT -> .)
    order           reduce using rule 209 (LIMIT -> .)
    mas             reduce using rule 209 (LIMIT -> .)
    menos           reduce using rule 209 (LIMIT -> .)
    multiplicacion  reduce using rule 209 (LIMIT -> .)
    division        reduce using rule 209 (LIMIT -> .)
    modulo          reduce using rule 209 (LIMIT -> .)
    elevado         reduce using rule 209 (LIMIT -> .)
    and             reduce using rule 209 (LIMIT -> .)
    or              reduce using rule 209 (LIMIT -> .)
    mayor           reduce using rule 209 (LIMIT -> .)
    menor           reduce using rule 209 (LIMIT -> .)
    mayor_igual     reduce using rule 209 (LIMIT -> .)
    menor_igual     reduce using rule 209 (LIMIT -> .)
    igual           reduce using rule 209 (LIMIT -> .)
    diferente1      reduce using rule 209 (LIMIT -> .)
    diferente2      reduce using rule 209 (LIMIT -> .)
    between         reduce using rule 209 (LIMIT -> .)
    is              reduce using rule 209 (LIMIT -> .)
    not             reduce using rule 209 (LIMIT -> .)
    as              reduce using rule 209 (LIMIT -> .)
    like            reduce using rule 209 (LIMIT -> .)
    isnull          reduce using rule 209 (LIMIT -> .)
    notnull         reduce using rule 209 (LIMIT -> .)
    cadenaString    reduce using rule 209 (LIMIT -> .)
    id              reduce using rule 209 (LIMIT -> .)
    cadena          reduce using rule 209 (LIMIT -> .)
    in              reduce using rule 209 (LIMIT -> .)
    then            reduce using rule 209 (LIMIT -> .)
    when            reduce using rule 209 (LIMIT -> .)
    parc            reduce using rule 209 (LIMIT -> .)
    constraint      reduce using rule 209 (LIMIT -> .)
    primary         reduce using rule 209 (LIMIT -> .)
    null            reduce using rule 209 (LIMIT -> .)
    unique          reduce using rule 209 (LIMIT -> .)
    references      reduce using rule 209 (LIMIT -> .)
    check           reduce using rule 209 (LIMIT -> .)
    default         reduce using rule 209 (LIMIT -> .)
    asc             reduce using rule 209 (LIMIT -> .)
    desc            reduce using rule 209 (LIMIT -> .)

  ! limit           [ reduce using rule 209 (LIMIT -> .) ]
  ! offset          [ reduce using rule 209 (LIMIT -> .) ]

    LIMIT                          shift and go to state 802

state 773

    (200) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 200 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 774

    (205) LIMIT -> limit int offset . int

    int             shift and go to state 803


state 775

    (207) LIMIT -> limit all offset . int

    int             shift and go to state 804


state 776

    (206) LIMIT -> offset int limit . int
    (208) LIMIT -> offset int limit . all

    int             shift and go to state 805
    all             shift and go to state 806


state 777

    (222) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 222 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 222 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 222 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 222 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 222 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 222 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 222 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 222 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 222 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 222 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 222 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 222 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 222 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 222 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 222 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 222 (ORDER -> order by LEXP ORD .)
    like            reduce using rule 222 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 222 (ORDER -> order by LEXP ORD .)
    cadenaString    reduce using rule 222 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 222 (ORDER -> order by LEXP ORD .)
    cadena          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 222 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 222 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 222 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 222 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 222 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 222 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 222 (ORDER -> order by LEXP ORD .)
    unique          reduce using rule 222 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 222 (ORDER -> order by LEXP ORD .)
    check           reduce using rule 222 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 222 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 222 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 222 (ORDER -> order by LEXP ORD .)


state 778

    (225) ORD -> asc .

    r_from          reduce using rule 225 (ORD -> asc .)
    coma            reduce using rule 225 (ORD -> asc .)
    where           reduce using rule 225 (ORD -> asc .)
    group           reduce using rule 225 (ORD -> asc .)
    having          reduce using rule 225 (ORD -> asc .)
    union           reduce using rule 225 (ORD -> asc .)
    intersect       reduce using rule 225 (ORD -> asc .)
    except          reduce using rule 225 (ORD -> asc .)
    order           reduce using rule 225 (ORD -> asc .)
    limit           reduce using rule 225 (ORD -> asc .)
    offset          reduce using rule 225 (ORD -> asc .)
    ptcoma          reduce using rule 225 (ORD -> asc .)
    mas             reduce using rule 225 (ORD -> asc .)
    menos           reduce using rule 225 (ORD -> asc .)
    multiplicacion  reduce using rule 225 (ORD -> asc .)
    division        reduce using rule 225 (ORD -> asc .)
    modulo          reduce using rule 225 (ORD -> asc .)
    elevado         reduce using rule 225 (ORD -> asc .)
    and             reduce using rule 225 (ORD -> asc .)
    or              reduce using rule 225 (ORD -> asc .)
    mayor           reduce using rule 225 (ORD -> asc .)
    menor           reduce using rule 225 (ORD -> asc .)
    mayor_igual     reduce using rule 225 (ORD -> asc .)
    menor_igual     reduce using rule 225 (ORD -> asc .)
    igual           reduce using rule 225 (ORD -> asc .)
    diferente1      reduce using rule 225 (ORD -> asc .)
    diferente2      reduce using rule 225 (ORD -> asc .)
    between         reduce using rule 225 (ORD -> asc .)
    is              reduce using rule 225 (ORD -> asc .)
    not             reduce using rule 225 (ORD -> asc .)
    as              reduce using rule 225 (ORD -> asc .)
    like            reduce using rule 225 (ORD -> asc .)
    isnull          reduce using rule 225 (ORD -> asc .)
    notnull         reduce using rule 225 (ORD -> asc .)
    cadenaString    reduce using rule 225 (ORD -> asc .)
    id              reduce using rule 225 (ORD -> asc .)
    cadena          reduce using rule 225 (ORD -> asc .)
    in              reduce using rule 225 (ORD -> asc .)
    then            reduce using rule 225 (ORD -> asc .)
    when            reduce using rule 225 (ORD -> asc .)
    parc            reduce using rule 225 (ORD -> asc .)
    constraint      reduce using rule 225 (ORD -> asc .)
    primary         reduce using rule 225 (ORD -> asc .)
    null            reduce using rule 225 (ORD -> asc .)
    unique          reduce using rule 225 (ORD -> asc .)
    references      reduce using rule 225 (ORD -> asc .)
    check           reduce using rule 225 (ORD -> asc .)
    default         reduce using rule 225 (ORD -> asc .)
    asc             reduce using rule 225 (ORD -> asc .)
    desc            reduce using rule 225 (ORD -> asc .)


state 779

    (226) ORD -> desc .

    r_from          reduce using rule 226 (ORD -> desc .)
    coma            reduce using rule 226 (ORD -> desc .)
    where           reduce using rule 226 (ORD -> desc .)
    group           reduce using rule 226 (ORD -> desc .)
    having          reduce using rule 226 (ORD -> desc .)
    union           reduce using rule 226 (ORD -> desc .)
    intersect       reduce using rule 226 (ORD -> desc .)
    except          reduce using rule 226 (ORD -> desc .)
    order           reduce using rule 226 (ORD -> desc .)
    limit           reduce using rule 226 (ORD -> desc .)
    offset          reduce using rule 226 (ORD -> desc .)
    ptcoma          reduce using rule 226 (ORD -> desc .)
    mas             reduce using rule 226 (ORD -> desc .)
    menos           reduce using rule 226 (ORD -> desc .)
    multiplicacion  reduce using rule 226 (ORD -> desc .)
    division        reduce using rule 226 (ORD -> desc .)
    modulo          reduce using rule 226 (ORD -> desc .)
    elevado         reduce using rule 226 (ORD -> desc .)
    and             reduce using rule 226 (ORD -> desc .)
    or              reduce using rule 226 (ORD -> desc .)
    mayor           reduce using rule 226 (ORD -> desc .)
    menor           reduce using rule 226 (ORD -> desc .)
    mayor_igual     reduce using rule 226 (ORD -> desc .)
    menor_igual     reduce using rule 226 (ORD -> desc .)
    igual           reduce using rule 226 (ORD -> desc .)
    diferente1      reduce using rule 226 (ORD -> desc .)
    diferente2      reduce using rule 226 (ORD -> desc .)
    between         reduce using rule 226 (ORD -> desc .)
    is              reduce using rule 226 (ORD -> desc .)
    not             reduce using rule 226 (ORD -> desc .)
    as              reduce using rule 226 (ORD -> desc .)
    like            reduce using rule 226 (ORD -> desc .)
    isnull          reduce using rule 226 (ORD -> desc .)
    notnull         reduce using rule 226 (ORD -> desc .)
    cadenaString    reduce using rule 226 (ORD -> desc .)
    id              reduce using rule 226 (ORD -> desc .)
    cadena          reduce using rule 226 (ORD -> desc .)
    in              reduce using rule 226 (ORD -> desc .)
    then            reduce using rule 226 (ORD -> desc .)
    when            reduce using rule 226 (ORD -> desc .)
    parc            reduce using rule 226 (ORD -> desc .)
    constraint      reduce using rule 226 (ORD -> desc .)
    primary         reduce using rule 226 (ORD -> desc .)
    null            reduce using rule 226 (ORD -> desc .)
    unique          reduce using rule 226 (ORD -> desc .)
    references      reduce using rule 226 (ORD -> desc .)
    check           reduce using rule 226 (ORD -> desc .)
    default         reduce using rule 226 (ORD -> desc .)
    asc             reduce using rule 226 (ORD -> desc .)
    desc            reduce using rule 226 (ORD -> desc .)


state 780

    (247) TIPO -> timestamp para int parc without time zone .

    r_from          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    where           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    group           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    having          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    union           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    intersect       reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    except          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    order           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    limit           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    offset          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    mas             reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    menos           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    multiplicacion  reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    division        reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    modulo          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    elevado         reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    and             reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    or              reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    mayor           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    menor           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    mayor_igual     reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    menor_igual     reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    igual           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    diferente1      reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    diferente2      reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    between         reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    is              reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    not             reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    as              reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    like            reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    isnull          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    notnull         reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    cadenaString    reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    id              reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    cadena          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    in              reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    then            reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    when            reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    constraint      reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    unique          reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    check           reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    asc             reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    desc            reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    dospuntos       reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    language        reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)
    do              reduce using rule 247 (TIPO -> timestamp para int parc without time zone .)


state 781

    (248) TIPO -> timestamp para int parc with time zone .

    r_from          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    where           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    group           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    having          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    union           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    intersect       reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    except          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    order           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    limit           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    offset          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    mas             reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    menos           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    multiplicacion  reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    division        reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    modulo          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    elevado         reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    and             reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    or              reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    mayor           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    menor           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    mayor_igual     reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    menor_igual     reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    igual           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    diferente1      reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    diferente2      reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    between         reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    is              reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    not             reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    as              reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    like            reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    isnull          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    notnull         reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    cadenaString    reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    id              reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    cadena          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    in              reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    then            reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    when            reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    constraint      reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    unique          reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    check           reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    asc             reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    desc            reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    dospuntos       reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    language        reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)
    do              reduce using rule 248 (TIPO -> timestamp para int parc with time zone .)


state 782

    (249) TIPO -> time para int parc without time zone .

    r_from          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 249 (TIPO -> time para int parc without time zone .)
    where           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    group           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    having          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    union           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    intersect       reduce using rule 249 (TIPO -> time para int parc without time zone .)
    except          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    order           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    limit           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    offset          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    mas             reduce using rule 249 (TIPO -> time para int parc without time zone .)
    menos           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    multiplicacion  reduce using rule 249 (TIPO -> time para int parc without time zone .)
    division        reduce using rule 249 (TIPO -> time para int parc without time zone .)
    modulo          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    elevado         reduce using rule 249 (TIPO -> time para int parc without time zone .)
    and             reduce using rule 249 (TIPO -> time para int parc without time zone .)
    or              reduce using rule 249 (TIPO -> time para int parc without time zone .)
    mayor           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    menor           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    mayor_igual     reduce using rule 249 (TIPO -> time para int parc without time zone .)
    menor_igual     reduce using rule 249 (TIPO -> time para int parc without time zone .)
    igual           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    diferente1      reduce using rule 249 (TIPO -> time para int parc without time zone .)
    diferente2      reduce using rule 249 (TIPO -> time para int parc without time zone .)
    between         reduce using rule 249 (TIPO -> time para int parc without time zone .)
    is              reduce using rule 249 (TIPO -> time para int parc without time zone .)
    not             reduce using rule 249 (TIPO -> time para int parc without time zone .)
    as              reduce using rule 249 (TIPO -> time para int parc without time zone .)
    like            reduce using rule 249 (TIPO -> time para int parc without time zone .)
    isnull          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    notnull         reduce using rule 249 (TIPO -> time para int parc without time zone .)
    cadenaString    reduce using rule 249 (TIPO -> time para int parc without time zone .)
    id              reduce using rule 249 (TIPO -> time para int parc without time zone .)
    cadena          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    in              reduce using rule 249 (TIPO -> time para int parc without time zone .)
    then            reduce using rule 249 (TIPO -> time para int parc without time zone .)
    when            reduce using rule 249 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 249 (TIPO -> time para int parc without time zone .)
    constraint      reduce using rule 249 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 249 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 249 (TIPO -> time para int parc without time zone .)
    unique          reduce using rule 249 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 249 (TIPO -> time para int parc without time zone .)
    check           reduce using rule 249 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 249 (TIPO -> time para int parc without time zone .)
    asc             reduce using rule 249 (TIPO -> time para int parc without time zone .)
    desc            reduce using rule 249 (TIPO -> time para int parc without time zone .)
    dospuntos       reduce using rule 249 (TIPO -> time para int parc without time zone .)
    language        reduce using rule 249 (TIPO -> time para int parc without time zone .)
    do              reduce using rule 249 (TIPO -> time para int parc without time zone .)


state 783

    (250) TIPO -> time para int parc with time zone .

    r_from          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 250 (TIPO -> time para int parc with time zone .)
    where           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    group           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    having          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    union           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    intersect       reduce using rule 250 (TIPO -> time para int parc with time zone .)
    except          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    order           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    limit           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    offset          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    mas             reduce using rule 250 (TIPO -> time para int parc with time zone .)
    menos           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    multiplicacion  reduce using rule 250 (TIPO -> time para int parc with time zone .)
    division        reduce using rule 250 (TIPO -> time para int parc with time zone .)
    modulo          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    elevado         reduce using rule 250 (TIPO -> time para int parc with time zone .)
    and             reduce using rule 250 (TIPO -> time para int parc with time zone .)
    or              reduce using rule 250 (TIPO -> time para int parc with time zone .)
    mayor           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    menor           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    mayor_igual     reduce using rule 250 (TIPO -> time para int parc with time zone .)
    menor_igual     reduce using rule 250 (TIPO -> time para int parc with time zone .)
    igual           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    diferente1      reduce using rule 250 (TIPO -> time para int parc with time zone .)
    diferente2      reduce using rule 250 (TIPO -> time para int parc with time zone .)
    between         reduce using rule 250 (TIPO -> time para int parc with time zone .)
    is              reduce using rule 250 (TIPO -> time para int parc with time zone .)
    not             reduce using rule 250 (TIPO -> time para int parc with time zone .)
    as              reduce using rule 250 (TIPO -> time para int parc with time zone .)
    like            reduce using rule 250 (TIPO -> time para int parc with time zone .)
    isnull          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    notnull         reduce using rule 250 (TIPO -> time para int parc with time zone .)
    cadenaString    reduce using rule 250 (TIPO -> time para int parc with time zone .)
    id              reduce using rule 250 (TIPO -> time para int parc with time zone .)
    cadena          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    in              reduce using rule 250 (TIPO -> time para int parc with time zone .)
    then            reduce using rule 250 (TIPO -> time para int parc with time zone .)
    when            reduce using rule 250 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 250 (TIPO -> time para int parc with time zone .)
    constraint      reduce using rule 250 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 250 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 250 (TIPO -> time para int parc with time zone .)
    unique          reduce using rule 250 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 250 (TIPO -> time para int parc with time zone .)
    check           reduce using rule 250 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 250 (TIPO -> time para int parc with time zone .)
    asc             reduce using rule 250 (TIPO -> time para int parc with time zone .)
    desc            reduce using rule 250 (TIPO -> time para int parc with time zone .)
    dospuntos       reduce using rule 250 (TIPO -> time para int parc with time zone .)
    language        reduce using rule 250 (TIPO -> time para int parc with time zone .)
    do              reduce using rule 250 (TIPO -> time para int parc with time zone .)


state 784

    (183) OPCOLUMN -> constraint id check para . CONDCHECK parc
    (190) CONDCHECK -> . EXP mayor EXP
    (191) CONDCHECK -> . EXP menor EXP
    (192) CONDCHECK -> . EXP mayor_igual EXP
    (193) CONDCHECK -> . EXP menor_igual EXP
    (194) CONDCHECK -> . EXP igual EXP
    (195) CONDCHECK -> . EXP diferente1 EXP
    (196) CONDCHECK -> . EXP diferente2 EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    CONDCHECK                      shift and go to state 807
    EXP                            shift and go to state 591
    SELECT                         shift and go to state 72

state 785

    (184) OPCOLUMN -> check para CONDCHECK parc .

    constraint      reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    not             reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    primary         reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    null            reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    unique          reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    references      reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    check           reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    default         reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    parc            reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)
    coma            reduce using rule 184 (OPCOLUMN -> check para CONDCHECK parc .)


state 786

    (197) HERENCIA -> inherits para LEXP parc .

    ptcoma          reduce using rule 197 (HERENCIA -> inherits para LEXP parc .)


state 787

    (187) OPCONST -> foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 808


state 788

    (54) CREATEINDEX -> create index id on id para id id ORDEN parc .

    ptcoma          reduce using rule 54 (CREATEINDEX -> create index id on id para id id ORDEN parc .)
    where           reduce using rule 54 (CREATEINDEX -> create index id on id para id id ORDEN parc .)


state 789

    (60) ORDEN -> asc nulls first .

    parc            reduce using rule 60 (ORDEN -> asc nulls first .)


state 790

    (63) ORDEN -> asc nulls last .

    parc            reduce using rule 63 (ORDEN -> asc nulls last .)


state 791

    (61) ORDEN -> desc nulls last .

    parc            reduce using rule 61 (ORDEN -> desc nulls last .)


state 792

    (62) ORDEN -> desc nulls first .

    parc            reduce using rule 62 (ORDEN -> desc nulls first .)


state 793

    (52) CREATEINDEX -> create index id on id using hash para LEXP parc .

    ptcoma          reduce using rule 52 (CREATEINDEX -> create index id on id using hash para LEXP parc .)
    where           reduce using rule 52 (CREATEINDEX -> create index id on id using hash para LEXP parc .)


state 794

    (135) OP -> add constraint id check para CONDCHECK parc .

    coma            reduce using rule 135 (OP -> add constraint id check para CONDCHECK parc .)
    ptcoma          reduce using rule 135 (OP -> add constraint id check para CONDCHECK parc .)


state 795

    (136) OP -> add constraint id unique para LEXP parc .

    coma            reduce using rule 136 (OP -> add constraint id unique para LEXP parc .)
    ptcoma          reduce using rule 136 (OP -> add constraint id unique para LEXP parc .)


state 796

    (139) OP -> add constraint id foreign key para LEXP . parc references id para LEXP parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 809
    coma            shift and go to state 125


state 797

    (138) OP -> add foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 810


state 798

    (66) DECLARACIONES -> id TIPO not null ASIG ptcoma .

    id              reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    end             reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    elsif           reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    else            reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    declare         reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    if              reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    raise           reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    begin           reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    execute         reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    return          reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    insert          reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    select          reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    update          reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    delete          reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    case            reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    when            reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    dolarn          reduce using rule 66 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)


state 799

    (68) DECLARACIONES -> id constant TIPO not null ASIG . ptcoma

    ptcoma          shift and go to state 811


state 800

    (111) FORMAT -> format para EXP coma LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 812
    coma            shift and go to state 125


state 801

    (117) INSERT -> insert into id para LEXP parc values para LEXP parc .

    ptcoma          reduce using rule 117 (INSERT -> insert into id para LEXP parc values para LEXP parc .)


state 802

    (199) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 199 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 803

    (205) LIMIT -> limit int offset int .

    ptcoma          reduce using rule 205 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 205 (LIMIT -> limit int offset int .)
    coma            reduce using rule 205 (LIMIT -> limit int offset int .)
    where           reduce using rule 205 (LIMIT -> limit int offset int .)
    group           reduce using rule 205 (LIMIT -> limit int offset int .)
    having          reduce using rule 205 (LIMIT -> limit int offset int .)
    union           reduce using rule 205 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 205 (LIMIT -> limit int offset int .)
    except          reduce using rule 205 (LIMIT -> limit int offset int .)
    order           reduce using rule 205 (LIMIT -> limit int offset int .)
    limit           reduce using rule 205 (LIMIT -> limit int offset int .)
    offset          reduce using rule 205 (LIMIT -> limit int offset int .)
    mas             reduce using rule 205 (LIMIT -> limit int offset int .)
    menos           reduce using rule 205 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 205 (LIMIT -> limit int offset int .)
    division        reduce using rule 205 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 205 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 205 (LIMIT -> limit int offset int .)
    and             reduce using rule 205 (LIMIT -> limit int offset int .)
    or              reduce using rule 205 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 205 (LIMIT -> limit int offset int .)
    menor           reduce using rule 205 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 205 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 205 (LIMIT -> limit int offset int .)
    igual           reduce using rule 205 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 205 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 205 (LIMIT -> limit int offset int .)
    between         reduce using rule 205 (LIMIT -> limit int offset int .)
    is              reduce using rule 205 (LIMIT -> limit int offset int .)
    not             reduce using rule 205 (LIMIT -> limit int offset int .)
    as              reduce using rule 205 (LIMIT -> limit int offset int .)
    like            reduce using rule 205 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 205 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 205 (LIMIT -> limit int offset int .)
    cadenaString    reduce using rule 205 (LIMIT -> limit int offset int .)
    id              reduce using rule 205 (LIMIT -> limit int offset int .)
    cadena          reduce using rule 205 (LIMIT -> limit int offset int .)
    in              reduce using rule 205 (LIMIT -> limit int offset int .)
    then            reduce using rule 205 (LIMIT -> limit int offset int .)
    when            reduce using rule 205 (LIMIT -> limit int offset int .)
    parc            reduce using rule 205 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 205 (LIMIT -> limit int offset int .)
    primary         reduce using rule 205 (LIMIT -> limit int offset int .)
    null            reduce using rule 205 (LIMIT -> limit int offset int .)
    unique          reduce using rule 205 (LIMIT -> limit int offset int .)
    references      reduce using rule 205 (LIMIT -> limit int offset int .)
    check           reduce using rule 205 (LIMIT -> limit int offset int .)
    default         reduce using rule 205 (LIMIT -> limit int offset int .)
    asc             reduce using rule 205 (LIMIT -> limit int offset int .)
    desc            reduce using rule 205 (LIMIT -> limit int offset int .)


state 804

    (207) LIMIT -> limit all offset int .

    ptcoma          reduce using rule 207 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 207 (LIMIT -> limit all offset int .)
    coma            reduce using rule 207 (LIMIT -> limit all offset int .)
    where           reduce using rule 207 (LIMIT -> limit all offset int .)
    group           reduce using rule 207 (LIMIT -> limit all offset int .)
    having          reduce using rule 207 (LIMIT -> limit all offset int .)
    union           reduce using rule 207 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 207 (LIMIT -> limit all offset int .)
    except          reduce using rule 207 (LIMIT -> limit all offset int .)
    order           reduce using rule 207 (LIMIT -> limit all offset int .)
    limit           reduce using rule 207 (LIMIT -> limit all offset int .)
    offset          reduce using rule 207 (LIMIT -> limit all offset int .)
    mas             reduce using rule 207 (LIMIT -> limit all offset int .)
    menos           reduce using rule 207 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 207 (LIMIT -> limit all offset int .)
    division        reduce using rule 207 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 207 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 207 (LIMIT -> limit all offset int .)
    and             reduce using rule 207 (LIMIT -> limit all offset int .)
    or              reduce using rule 207 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 207 (LIMIT -> limit all offset int .)
    menor           reduce using rule 207 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 207 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 207 (LIMIT -> limit all offset int .)
    igual           reduce using rule 207 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 207 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 207 (LIMIT -> limit all offset int .)
    between         reduce using rule 207 (LIMIT -> limit all offset int .)
    is              reduce using rule 207 (LIMIT -> limit all offset int .)
    not             reduce using rule 207 (LIMIT -> limit all offset int .)
    as              reduce using rule 207 (LIMIT -> limit all offset int .)
    like            reduce using rule 207 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 207 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 207 (LIMIT -> limit all offset int .)
    cadenaString    reduce using rule 207 (LIMIT -> limit all offset int .)
    id              reduce using rule 207 (LIMIT -> limit all offset int .)
    cadena          reduce using rule 207 (LIMIT -> limit all offset int .)
    in              reduce using rule 207 (LIMIT -> limit all offset int .)
    then            reduce using rule 207 (LIMIT -> limit all offset int .)
    when            reduce using rule 207 (LIMIT -> limit all offset int .)
    parc            reduce using rule 207 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 207 (LIMIT -> limit all offset int .)
    primary         reduce using rule 207 (LIMIT -> limit all offset int .)
    null            reduce using rule 207 (LIMIT -> limit all offset int .)
    unique          reduce using rule 207 (LIMIT -> limit all offset int .)
    references      reduce using rule 207 (LIMIT -> limit all offset int .)
    check           reduce using rule 207 (LIMIT -> limit all offset int .)
    default         reduce using rule 207 (LIMIT -> limit all offset int .)
    asc             reduce using rule 207 (LIMIT -> limit all offset int .)
    desc            reduce using rule 207 (LIMIT -> limit all offset int .)


state 805

    (206) LIMIT -> offset int limit int .

    ptcoma          reduce using rule 206 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 206 (LIMIT -> offset int limit int .)
    coma            reduce using rule 206 (LIMIT -> offset int limit int .)
    where           reduce using rule 206 (LIMIT -> offset int limit int .)
    group           reduce using rule 206 (LIMIT -> offset int limit int .)
    having          reduce using rule 206 (LIMIT -> offset int limit int .)
    union           reduce using rule 206 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 206 (LIMIT -> offset int limit int .)
    except          reduce using rule 206 (LIMIT -> offset int limit int .)
    order           reduce using rule 206 (LIMIT -> offset int limit int .)
    limit           reduce using rule 206 (LIMIT -> offset int limit int .)
    offset          reduce using rule 206 (LIMIT -> offset int limit int .)
    mas             reduce using rule 206 (LIMIT -> offset int limit int .)
    menos           reduce using rule 206 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 206 (LIMIT -> offset int limit int .)
    division        reduce using rule 206 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 206 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 206 (LIMIT -> offset int limit int .)
    and             reduce using rule 206 (LIMIT -> offset int limit int .)
    or              reduce using rule 206 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 206 (LIMIT -> offset int limit int .)
    menor           reduce using rule 206 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 206 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 206 (LIMIT -> offset int limit int .)
    igual           reduce using rule 206 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 206 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 206 (LIMIT -> offset int limit int .)
    between         reduce using rule 206 (LIMIT -> offset int limit int .)
    is              reduce using rule 206 (LIMIT -> offset int limit int .)
    not             reduce using rule 206 (LIMIT -> offset int limit int .)
    as              reduce using rule 206 (LIMIT -> offset int limit int .)
    like            reduce using rule 206 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 206 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 206 (LIMIT -> offset int limit int .)
    cadenaString    reduce using rule 206 (LIMIT -> offset int limit int .)
    id              reduce using rule 206 (LIMIT -> offset int limit int .)
    cadena          reduce using rule 206 (LIMIT -> offset int limit int .)
    in              reduce using rule 206 (LIMIT -> offset int limit int .)
    then            reduce using rule 206 (LIMIT -> offset int limit int .)
    when            reduce using rule 206 (LIMIT -> offset int limit int .)
    parc            reduce using rule 206 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 206 (LIMIT -> offset int limit int .)
    primary         reduce using rule 206 (LIMIT -> offset int limit int .)
    null            reduce using rule 206 (LIMIT -> offset int limit int .)
    unique          reduce using rule 206 (LIMIT -> offset int limit int .)
    references      reduce using rule 206 (LIMIT -> offset int limit int .)
    check           reduce using rule 206 (LIMIT -> offset int limit int .)
    default         reduce using rule 206 (LIMIT -> offset int limit int .)
    asc             reduce using rule 206 (LIMIT -> offset int limit int .)
    desc            reduce using rule 206 (LIMIT -> offset int limit int .)


state 806

    (208) LIMIT -> offset int limit all .

    ptcoma          reduce using rule 208 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 208 (LIMIT -> offset int limit all .)
    coma            reduce using rule 208 (LIMIT -> offset int limit all .)
    where           reduce using rule 208 (LIMIT -> offset int limit all .)
    group           reduce using rule 208 (LIMIT -> offset int limit all .)
    having          reduce using rule 208 (LIMIT -> offset int limit all .)
    union           reduce using rule 208 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 208 (LIMIT -> offset int limit all .)
    except          reduce using rule 208 (LIMIT -> offset int limit all .)
    order           reduce using rule 208 (LIMIT -> offset int limit all .)
    limit           reduce using rule 208 (LIMIT -> offset int limit all .)
    offset          reduce using rule 208 (LIMIT -> offset int limit all .)
    mas             reduce using rule 208 (LIMIT -> offset int limit all .)
    menos           reduce using rule 208 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 208 (LIMIT -> offset int limit all .)
    division        reduce using rule 208 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 208 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 208 (LIMIT -> offset int limit all .)
    and             reduce using rule 208 (LIMIT -> offset int limit all .)
    or              reduce using rule 208 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 208 (LIMIT -> offset int limit all .)
    menor           reduce using rule 208 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 208 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 208 (LIMIT -> offset int limit all .)
    igual           reduce using rule 208 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 208 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 208 (LIMIT -> offset int limit all .)
    between         reduce using rule 208 (LIMIT -> offset int limit all .)
    is              reduce using rule 208 (LIMIT -> offset int limit all .)
    not             reduce using rule 208 (LIMIT -> offset int limit all .)
    as              reduce using rule 208 (LIMIT -> offset int limit all .)
    like            reduce using rule 208 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 208 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 208 (LIMIT -> offset int limit all .)
    cadenaString    reduce using rule 208 (LIMIT -> offset int limit all .)
    id              reduce using rule 208 (LIMIT -> offset int limit all .)
    cadena          reduce using rule 208 (LIMIT -> offset int limit all .)
    in              reduce using rule 208 (LIMIT -> offset int limit all .)
    then            reduce using rule 208 (LIMIT -> offset int limit all .)
    when            reduce using rule 208 (LIMIT -> offset int limit all .)
    parc            reduce using rule 208 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 208 (LIMIT -> offset int limit all .)
    primary         reduce using rule 208 (LIMIT -> offset int limit all .)
    null            reduce using rule 208 (LIMIT -> offset int limit all .)
    unique          reduce using rule 208 (LIMIT -> offset int limit all .)
    references      reduce using rule 208 (LIMIT -> offset int limit all .)
    check           reduce using rule 208 (LIMIT -> offset int limit all .)
    default         reduce using rule 208 (LIMIT -> offset int limit all .)
    asc             reduce using rule 208 (LIMIT -> offset int limit all .)
    desc            reduce using rule 208 (LIMIT -> offset int limit all .)


state 807

    (183) OPCOLUMN -> constraint id check para CONDCHECK . parc

    parc            shift and go to state 813


state 808

    (187) OPCONST -> foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 814


state 809

    (139) OP -> add constraint id foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 815


state 810

    (138) OP -> add foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 816


state 811

    (68) DECLARACIONES -> id constant TIPO not null ASIG ptcoma .

    id              reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    end             reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    elsif           reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    else            reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    declare         reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    if              reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    raise           reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    begin           reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    execute         reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    return          reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    insert          reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    select          reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    update          reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    delete          reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    case            reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    when            reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    dolarn          reduce using rule 68 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)


state 812

    (111) FORMAT -> format para EXP coma LEXP parc .

    ptcoma          reduce using rule 111 (FORMAT -> format para EXP coma LEXP parc .)


state 813

    (183) OPCOLUMN -> constraint id check para CONDCHECK parc .

    constraint      reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    not             reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    primary         reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    null            reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    unique          reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    references      reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    check           reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    default         reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    parc            reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    coma            reduce using rule 183 (OPCOLUMN -> constraint id check para CONDCHECK parc .)


state 814

    (187) OPCONST -> foreign key para LEXP parc references id para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 817
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 815

    (139) OP -> add constraint id foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 818


state 816

    (138) OP -> add foreign key para LEXP parc references id para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 819
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 817

    (187) OPCONST -> foreign key para LEXP parc references id para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 820
    coma            shift and go to state 125


state 818

    (139) OP -> add constraint id foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 821


state 819

    (138) OP -> add foreign key para LEXP parc references id para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 822
    coma            shift and go to state 125


state 820

    (187) OPCONST -> foreign key para LEXP parc references id para LEXP parc .

    parc            reduce using rule 187 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)
    coma            reduce using rule 187 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)


state 821

    (139) OP -> add constraint id foreign key para LEXP parc references id para . LEXP parc
    (233) LEXP -> . LEXP coma EXP
    (234) LEXP -> . EXP
    (280) EXP -> . EXP mas EXP
    (281) EXP -> . EXP menos EXP
    (282) EXP -> . EXP multiplicacion EXP
    (283) EXP -> . EXP division EXP
    (284) EXP -> . EXP modulo EXP
    (285) EXP -> . EXP elevado EXP
    (286) EXP -> . EXP and EXP
    (287) EXP -> . EXP or EXP
    (288) EXP -> . EXP mayor EXP
    (289) EXP -> . EXP menor EXP
    (290) EXP -> . EXP mayor_igual EXP
    (291) EXP -> . EXP menor_igual EXP
    (292) EXP -> . EXP igual EXP
    (293) EXP -> . EXP diferente1 EXP
    (294) EXP -> . EXP diferente2 EXP
    (295) EXP -> . EXP between EXP
    (296) EXP -> . EXP is not null
    (297) EXP -> . EXP is not true
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is not unknown
    (300) EXP -> . EXP not like cadena
    (301) EXP -> . EXP is null
    (302) EXP -> . EXP is true
    (303) EXP -> . EXP is unknown
    (304) EXP -> . EXP as cadena
    (305) EXP -> . EXP as id
    (306) EXP -> . EXP as cadenaString
    (307) EXP -> . EXP like cadena
    (308) EXP -> . EXP is false
    (309) EXP -> . EXP isnull
    (310) EXP -> . EXP notnull
    (311) EXP -> . EXP cadenaString
    (312) EXP -> . EXP id
    (313) EXP -> . EXP cadena
    (314) EXP -> . mas EXP
    (315) EXP -> . menos EXP
    (316) EXP -> . not EXP
    (317) EXP -> . EXP not between EXP
    (318) EXP -> . EXP between symetric EXP
    (319) EXP -> . EXP in para LEXP parc
    (320) EXP -> . EXP not in para LEXP parc
    (321) EXP -> . EXP is not distinct r_from EXP
    (322) EXP -> . EXP is distinct r_from EXP
    (323) EXP -> . EXP not between symetric EXP
    (324) EXP -> . SELECT
    (325) EXP -> . para EXP parc
    (326) EXP -> . id para parc
    (327) EXP -> . id para LEXP parc
    (328) EXP -> . any para LEXP parc
    (329) EXP -> . all para LEXP parc
    (330) EXP -> . some para LEXP parc
    (331) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (332) EXP -> . cadena as TIPO
    (333) EXP -> . int
    (334) EXP -> . decimales
    (335) EXP -> . cadena
    (336) EXP -> . cadenaString
    (337) EXP -> . true
    (338) EXP -> . false
    (339) EXP -> . id
    (340) EXP -> . multiplicacion
    (341) EXP -> . null
    (342) EXP -> . idPunto
    (343) EXP -> . default
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (199) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (200) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 61
    menos           shift and go to state 62
    not             shift and go to state 64
    para            shift and go to state 71
    id              shift and go to state 69
    any             shift and go to state 73
    all             shift and go to state 74
    some            shift and go to state 75
    extract         shift and go to state 76
    cadena          shift and go to state 68
    int             shift and go to state 78
    decimales       shift and go to state 79
    cadenaString    shift and go to state 70
    true            shift and go to state 66
    false           shift and go to state 67
    multiplicacion  shift and go to state 63
    null            shift and go to state 65
    idPunto         shift and go to state 80
    default         shift and go to state 81
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 77
    interval        shift and go to state 84
    select          shift and go to state 25

    LEXP                           shift and go to state 823
    EXP                            shift and go to state 60
    SELECT                         shift and go to state 72

state 822

    (138) OP -> add foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 138 (OP -> add foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 138 (OP -> add foreign key para LEXP parc references id para LEXP parc .)


state 823

    (139) OP -> add constraint id foreign key para LEXP parc references id para LEXP . parc
    (233) LEXP -> LEXP . coma EXP

    parc            shift and go to state 824
    coma            shift and go to state 125


state 824

    (139) OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 139 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 139 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ptcoma in state 16 resolved as shift
WARNING: shift/reduce conflict for r_from in state 59 resolved as shift
WARNING: shift/reduce conflict for coma in state 59 resolved as shift
WARNING: shift/reduce conflict for where in state 59 resolved as shift
WARNING: shift/reduce conflict for mas in state 60 resolved as shift
WARNING: shift/reduce conflict for menos in state 60 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 60 resolved as shift
WARNING: shift/reduce conflict for division in state 60 resolved as shift
WARNING: shift/reduce conflict for modulo in state 60 resolved as shift
WARNING: shift/reduce conflict for elevado in state 60 resolved as shift
WARNING: shift/reduce conflict for and in state 60 resolved as shift
WARNING: shift/reduce conflict for or in state 60 resolved as shift
WARNING: shift/reduce conflict for mayor in state 60 resolved as shift
WARNING: shift/reduce conflict for menor in state 60 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 60 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 60 resolved as shift
WARNING: shift/reduce conflict for igual in state 60 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 60 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 60 resolved as shift
WARNING: shift/reduce conflict for between in state 60 resolved as shift
WARNING: shift/reduce conflict for is in state 60 resolved as shift
WARNING: shift/reduce conflict for not in state 60 resolved as shift
WARNING: shift/reduce conflict for as in state 60 resolved as shift
WARNING: shift/reduce conflict for like in state 60 resolved as shift
WARNING: shift/reduce conflict for isnull in state 60 resolved as shift
WARNING: shift/reduce conflict for notnull in state 60 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 60 resolved as shift
WARNING: shift/reduce conflict for id in state 60 resolved as shift
WARNING: shift/reduce conflict for cadena in state 60 resolved as shift
WARNING: shift/reduce conflict for in in state 60 resolved as shift
WARNING: shift/reduce conflict for as in state 68 resolved as shift
WARNING: shift/reduce conflict for mas in state 115 resolved as shift
WARNING: shift/reduce conflict for menos in state 115 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 115 resolved as shift
WARNING: shift/reduce conflict for division in state 115 resolved as shift
WARNING: shift/reduce conflict for modulo in state 115 resolved as shift
WARNING: shift/reduce conflict for elevado in state 115 resolved as shift
WARNING: shift/reduce conflict for and in state 115 resolved as shift
WARNING: shift/reduce conflict for or in state 115 resolved as shift
WARNING: shift/reduce conflict for mayor in state 115 resolved as shift
WARNING: shift/reduce conflict for menor in state 115 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 115 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 115 resolved as shift
WARNING: shift/reduce conflict for igual in state 115 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 115 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 115 resolved as shift
WARNING: shift/reduce conflict for between in state 115 resolved as shift
WARNING: shift/reduce conflict for is in state 115 resolved as shift
WARNING: shift/reduce conflict for not in state 115 resolved as shift
WARNING: shift/reduce conflict for as in state 115 resolved as shift
WARNING: shift/reduce conflict for like in state 115 resolved as shift
WARNING: shift/reduce conflict for isnull in state 115 resolved as shift
WARNING: shift/reduce conflict for notnull in state 115 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 115 resolved as shift
WARNING: shift/reduce conflict for id in state 115 resolved as shift
WARNING: shift/reduce conflict for cadena in state 115 resolved as shift
WARNING: shift/reduce conflict for in in state 115 resolved as shift
WARNING: shift/reduce conflict for group in state 124 resolved as shift
WARNING: shift/reduce conflict for coma in state 201 resolved as shift
WARNING: shift/reduce conflict for where in state 201 resolved as shift
WARNING: shift/reduce conflict for having in state 202 resolved as shift
WARNING: shift/reduce conflict for mas in state 204 resolved as shift
WARNING: shift/reduce conflict for menos in state 204 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 204 resolved as shift
WARNING: shift/reduce conflict for division in state 204 resolved as shift
WARNING: shift/reduce conflict for modulo in state 204 resolved as shift
WARNING: shift/reduce conflict for elevado in state 204 resolved as shift
WARNING: shift/reduce conflict for and in state 204 resolved as shift
WARNING: shift/reduce conflict for or in state 204 resolved as shift
WARNING: shift/reduce conflict for mayor in state 204 resolved as shift
WARNING: shift/reduce conflict for menor in state 204 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 204 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 204 resolved as shift
WARNING: shift/reduce conflict for igual in state 204 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 204 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 204 resolved as shift
WARNING: shift/reduce conflict for between in state 204 resolved as shift
WARNING: shift/reduce conflict for is in state 204 resolved as shift
WARNING: shift/reduce conflict for not in state 204 resolved as shift
WARNING: shift/reduce conflict for as in state 204 resolved as shift
WARNING: shift/reduce conflict for like in state 204 resolved as shift
WARNING: shift/reduce conflict for isnull in state 204 resolved as shift
WARNING: shift/reduce conflict for notnull in state 204 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 204 resolved as shift
WARNING: shift/reduce conflict for id in state 204 resolved as shift
WARNING: shift/reduce conflict for cadena in state 204 resolved as shift
WARNING: shift/reduce conflict for in in state 204 resolved as shift
WARNING: shift/reduce conflict for cadena in state 242 resolved as shift
WARNING: shift/reduce conflict for modulo in state 245 resolved as shift
WARNING: shift/reduce conflict for coma in state 332 resolved as shift
WARNING: shift/reduce conflict for where in state 332 resolved as shift
WARNING: shift/reduce conflict for group in state 333 resolved as shift
WARNING: shift/reduce conflict for union in state 334 resolved as shift
WARNING: shift/reduce conflict for intersect in state 334 resolved as shift
WARNING: shift/reduce conflict for except in state 334 resolved as shift
WARNING: shift/reduce conflict for id in state 432 resolved as shift
WARNING: shift/reduce conflict for group in state 454 resolved as shift
WARNING: shift/reduce conflict for having in state 455 resolved as shift
WARNING: shift/reduce conflict for order in state 456 resolved as shift
WARNING: shift/reduce conflict for mas in state 460 resolved as shift
WARNING: shift/reduce conflict for menos in state 460 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 460 resolved as shift
WARNING: shift/reduce conflict for division in state 460 resolved as shift
WARNING: shift/reduce conflict for modulo in state 460 resolved as shift
WARNING: shift/reduce conflict for elevado in state 460 resolved as shift
WARNING: shift/reduce conflict for and in state 460 resolved as shift
WARNING: shift/reduce conflict for or in state 460 resolved as shift
WARNING: shift/reduce conflict for mayor in state 460 resolved as shift
WARNING: shift/reduce conflict for menor in state 460 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 460 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 460 resolved as shift
WARNING: shift/reduce conflict for igual in state 460 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 460 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 460 resolved as shift
WARNING: shift/reduce conflict for between in state 460 resolved as shift
WARNING: shift/reduce conflict for is in state 460 resolved as shift
WARNING: shift/reduce conflict for not in state 460 resolved as shift
WARNING: shift/reduce conflict for as in state 460 resolved as shift
WARNING: shift/reduce conflict for like in state 460 resolved as shift
WARNING: shift/reduce conflict for isnull in state 460 resolved as shift
WARNING: shift/reduce conflict for notnull in state 460 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 460 resolved as shift
WARNING: shift/reduce conflict for id in state 460 resolved as shift
WARNING: shift/reduce conflict for cadena in state 460 resolved as shift
WARNING: shift/reduce conflict for in in state 460 resolved as shift
WARNING: shift/reduce conflict for coma in state 461 resolved as shift
WARNING: shift/reduce conflict for coma in state 526 resolved as shift
WARNING: shift/reduce conflict for as in state 542 resolved as shift
WARNING: shift/reduce conflict for having in state 549 resolved as shift
WARNING: shift/reduce conflict for union in state 550 resolved as shift
WARNING: shift/reduce conflict for intersect in state 550 resolved as shift
WARNING: shift/reduce conflict for except in state 550 resolved as shift
WARNING: shift/reduce conflict for limit in state 551 resolved as shift
WARNING: shift/reduce conflict for offset in state 551 resolved as shift
WARNING: shift/reduce conflict for coma in state 553 resolved as shift
WARNING: shift/reduce conflict for coma in state 555 resolved as shift
WARNING: shift/reduce conflict for coma in state 556 resolved as shift
WARNING: shift/reduce conflict for cadena in state 567 resolved as shift
WARNING: shift/reduce conflict for id in state 595 resolved as shift
WARNING: shift/reduce conflict for union in state 642 resolved as shift
WARNING: shift/reduce conflict for intersect in state 642 resolved as shift
WARNING: shift/reduce conflict for except in state 642 resolved as shift
WARNING: shift/reduce conflict for order in state 643 resolved as shift
WARNING: shift/reduce conflict for coma in state 648 resolved as shift
WARNING: shift/reduce conflict for not in state 663 resolved as shift
WARNING: shift/reduce conflict for order in state 722 resolved as shift
WARNING: shift/reduce conflict for limit in state 723 resolved as shift
WARNING: shift/reduce conflict for offset in state 723 resolved as shift
WARNING: shift/reduce conflict for offset in state 724 resolved as shift
WARNING: shift/reduce conflict for offset in state 725 resolved as shift
WARNING: shift/reduce conflict for limit in state 726 resolved as shift
WARNING: shift/reduce conflict for coma in state 727 resolved as shift
WARNING: shift/reduce conflict for asc in state 727 resolved as shift
WARNING: shift/reduce conflict for desc in state 727 resolved as shift
WARNING: shift/reduce conflict for parc in state 728 resolved as shift
WARNING: shift/reduce conflict for limit in state 772 resolved as shift
WARNING: shift/reduce conflict for offset in state 772 resolved as shift
