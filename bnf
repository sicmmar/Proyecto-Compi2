digraph ReporteBNF {
	graph [label="REPORTE GRAM√ÅTICA BNF (Grupo 14)"]
	node [shape=record]
	bnf [label=<<TABLE BORDER="0" COLOR="WHITE" CELLBORDER="1" CELLSPACING="0"><TR><TD>INIT ::= INSTRUCCIONES</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= DROPPROCEDURE ptcoma</TD></TR>
<TR><TD>DROPPROCEDURE ::= drop procedure sp_insertainventario</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= sp_insertainventario para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Laptop HP i5 4GB RAM'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 20</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'bodega zona 9'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Laptop HP'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 4</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= sp_insertainventario para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= ''</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 50</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA ZONA 12'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Mouse Inalambrico'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 3</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= sp_insertainventario para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Teclado Inalambrico Lenovo'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 100</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA CENTRAL'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Teclado Inalambrico'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 2</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= sp_insertainventario para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Laptop Lenovo T420 i7 8GB'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 200</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA CENTRAL'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Laptop Lenovo'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= FUNCIONES</TD></TR>
<TR><TD>FUNCIONES::= create function FUNCTION para LPARAM parc RETURNP  LCONTENIDOP LENGUAJE</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql ptcoma</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= RETURN ptcoma</TD></TR>
<TR><TD>RETURN::= return EXP</TD></TR>
<TR><TD>EXP ::= ide</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= CONDICIONIF ptcoma</TD></TR>
<TR><TD>CONDICIONIF ::= if EXP then LISTACONTENIDO  end if</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbinventario values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= descripcion</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= now</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= cantidad</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= idbodega</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= idproducto</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= ide</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  idbodega  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= fn_retornabodega para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= vbodega</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  idproducto  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= fn_retornaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= vproducto</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= 0</TD></TR>
<TR><TD>EXP ::= idev</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  idev  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>WHERE ::= where EXP</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= ide</TD></TR>
<TR><TD>EXP ::= idinventario</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= tbinventario</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= count para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= * </TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= idev TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= idbodega TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= idproducto TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>RETURNP ::= returns TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LPARAM ::= LPARAM coma descripcion TIPO</TD></TR>
<TR><TD>TIPO ::= varchar para 200 parc</TD></TR>
<TR><TD>LPARAM ::= LPARAM coma cantidad TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LPARAM ::= LPARAM coma Vbodega TIPO</TD></TR>
<TR><TD>TIPO ::= varchar para 100 parc</TD></TR>
<TR><TD>LPARAM ::= LPARAM coma Vproducto TIPO</TD></TR>
<TR><TD>TIPO ::= varchar para 100 parc</TD></TR>
<TR><TD>PARAM ::= ide TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= fn_retornabodega para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA ZONA 12'</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= fn_retornaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'Laptop Lenovo'</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= FUNCIONES</TD></TR>
<TR><TD>FUNCIONES::= create function FUNCTION para LPARAM parc RETURNP  LCONTENIDOP LENGUAJE</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql ptcoma</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= RETURN ptcoma</TD></TR>
<TR><TD>RETURN::= return EXP</TD></TR>
<TR><TD>EXP ::= idb</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  idb  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>WHERE ::= where EXP</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= vbodega</TD></TR>
<TR><TD>EXP ::= bodega</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= tbbodega</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= idbodega</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= idb TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>RETURNP ::= returns TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>PARAM ::= Vbodega TIPO</TD></TR>
<TR><TD>TIPO ::= varchar para 100 parc</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= FUNCIONES</TD></TR>
<TR><TD>FUNCIONES::= create function FUNCTION para LPARAM parc RETURNP  LCONTENIDOP LENGUAJE</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql ptcoma</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= RETURN ptcoma</TD></TR>
<TR><TD>RETURN::= return EXP</TD></TR>
<TR><TD>EXP ::= idp</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  idp  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>WHERE ::= where EXP</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= vproducto</TD></TR>
<TR><TD>EXP ::= producto</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= tbproducto</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= idproducto</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= idp TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>RETURNP ::= returns TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>PARAM ::= Vproducto TIPO</TD></TR>
<TR><TD>TIPO ::= varchar para 100 parc</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATETABLE</TD></TR>
<TR><TD>CREATETABLE ::= create table tbinventario para LDEF parc ptcoma</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= descripcion TIPO</TD></TR>
<TR><TD>TIPO ::= text</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= fechacarga TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= date</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= cantidad TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= idbodega TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= idproducto TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LDEF ::= COLDEF</TD></TR>
<TR><TD>COLDEF ::= idinventario TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= LOPCOLUMN OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= primary key</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_insertaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-06'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Monitor de 17 Lenovo'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 16</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_insertaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-06'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Monitor de 21'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 15</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_insertaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-06'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Audifonos con Microfono USB Lenovo'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 14</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_insertaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-06'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Bocina Inalambrica Sony'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 13</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= fn_mensaje para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'Crea funcion Nueva de Mensaje'</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= FUNCIONES</TD></TR>
<TR><TD>FUNCIONES::= create function FUNCTION para LPARAM parc RETURNP  LCONTENIDOP LENGUAJE</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql ptcoma</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= RETURN ptcoma</TD></TR>
<TR><TD>RETURN::= return EXP</TD></TR>
<TR><TD>EXP ::= texto</TD></TR>
<TR><TD>RETURNP ::= returns TIPO</TD></TR>
<TR><TD>TIPO ::= text</TD></TR>
<TR><TD>PARAM ::= texto TIPO</TD></TR>
<TR><TD>TIPO ::= text</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= myfuncion para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'Valida drop function'</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= DROPFUNC ptcoma</TD></TR>
<TR><TD>DROPFUNC ::= drop function if exists myFuncion</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_insertaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-06'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Monitor de 17'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 12</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_insertaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-06'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Bocina Inalambrica'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 11</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_insertaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-06'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Audifonos con Microfono USB'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 10</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_insertaproducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-06'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Bocina Inalambrica'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 9</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= PROCEDIMIENTOS</TD></TR>
<TR><TD>PROCEDIMIENTOS ::= create procedure sp_insertaproducto para LPARAM  parc LENGUAJE LCONTENIDOP</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= fecha</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= producto</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= llave</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql</TD></TR>
<TR><TD>LPARAM ::= LPARAM coma fecha TIPO</TD></TR>
<TR><TD>TIPO ::= date</TD></TR>
<TR><TD>LPARAM ::= LPARAM coma producto TIPO</TD></TR>
<TR><TD>TIPO ::= varchar para 100 parc</TD></TR>
<TR><TD>PARAM ::= llave TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATEINDEX ptcoma</TD></TR>
<TR><TD>CREATEINDEX ::= create index idx_bodega on tbbodega para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= estado</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= tbbodega</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= * </TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbCalificacion values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= validaregistros para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 4</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'tbbodega'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Valida Delete'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 5</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= DELETE ptcoma</TD></TR>
<TR><TD>DELETE ::= delete from id WHERE</TD></TR>
<TR><TD>WHERE ::= where EXP</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= 4</TD></TR>
<TR><TD>EXP ::= idbodega</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_validaupdate para parc</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= PROCEDIMIENTOS</TD></TR>
<TR><TD>PROCEDIMIENTOS ::= create procedure sp_validaupdate para  parc LENGUAJE LCONTENIDOP</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= UPDATE ptcoma</TD></TR>
<TR><TD>UPDATE ::= update tbbodega set LCAMPOS WHERE</TD></TR>
<TR><TD>WHERE ::= where EXP</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= 4</TD></TR>
<TR><TD>EXP ::= idbodega</TD></TR>
<TR><TD>LCAMPOS ::= bodega igual EXP</TD></TR>
<TR><TD>EXP ::= 'bodega zona 9'</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATEINDEX ptcoma</TD></TR>
<TR><TD>CREATEINDEX ::= create index idx_bodega on tbbodega para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= estado</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= bodega</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= DROP ptcoma</TD></TR>
<TR><TD>DROP ::= drop index idx_bodega</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATEINDEX ptcoma</TD></TR>
<TR><TD>CREATEINDEX ::= create index idx_bodega on tbbodega para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= estado</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= bodega</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbCalificacion values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= validaregistros para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 5</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'tbbodega'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Valida Store Procedure'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 4</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CALLPROCEDURE ptcoma</TD></TR>
<TR><TD>CALLPROCEDURE ::= execute sp_validainsert para parc</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= PROCEDIMIENTOS</TD></TR>
<TR><TD>PROCEDIMIENTOS ::= create procedure sp_validainsert para  parc LENGUAJE LCONTENIDOP</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbbodega para LEXP parc values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA ZONA 10'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 5</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= estado</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= bodega</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= idbodega</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbbodega para LEXP parc values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA ZONA 1'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 4</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= estado</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= bodega</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= idbodega</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbbodega para LEXP parc values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA ZONA 11'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 3</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= estado</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= bodega</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= idbodega</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbbodega para LEXP parc values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA ZONA 12'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 2</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= bodega</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= idbodega</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbbodega values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'BODEGA CENTRAL'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATEINDEX ptcoma</TD></TR>
<TR><TD>CREATEINDEX ::= create index nombreIndex on tbbodega para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= bodega</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATETABLE</TD></TR>
<TR><TD>CREATETABLE ::= create table tbbodega para LDEF parc ptcoma</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= estado TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= bodega TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= varchar para 100 parc</TD></TR>
<TR><TD>LDEF ::= COLDEF</TD></TR>
<TR><TD>COLDEF ::= idbodega TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= LOPCOLUMN OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= primary key</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbCalificacion values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= calculos para parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= ' Valida Funciones'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 3</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= FUNCIONES</TD></TR>
<TR><TD>FUNCIONES ::= create function CALCULOS para parc RETURNP LCONTENIDOP LENGUAJE</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql ptcoma</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= RETURN ptcoma</TD></TR>
<TR><TD>RETURN::= return EXP</TD></TR>
<TR><TD>EXP ::= valor</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= CONDICIONIF ptcoma</TD></TR>
<TR><TD>CONDICIONIF ::= if EXP then LISTACONTENIDO ELSEF  end if</TD></TR>
<TR><TD>ELSEF ::=  else  LISTACONTENIDO</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  VALOR dospuntos igual EXP</TD></TR>
<TR><TD>EXP ::= 10</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  VALOR dospuntos igual EXP</TD></TR>
<TR><TD>EXP ::= 20</TD></TR>
<TR><TD>EXP ::= EXP &#62; EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>EXP ::= valor</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  VALOR  igual EXP</TD></TR>
<TR><TD>EXP ::= EXP / EXP</TD></TR>
<TR><TD>EXP ::= acosd para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 0.5</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= EXP + EXP</TD></TR>
<TR><TD>EXP ::= absoluto</TD></TR>
<TR><TD>EXP ::= valor</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  ABSOLUTO  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= EXP * EXP</TD></TR>
<TR><TD>EXP ::= sqrt para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 225</TD></TR>
<TR><TD>EXP ::= absoluto</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  ABSOLUTO  igual EXP</TD></TR>
<TR><TD>EXP ::= abs para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= sinh para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= - EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  VALOR  igual EXP</TD></TR>
<TR><TD>EXP ::= EXP + EXP</TD></TR>
<TR><TD>EXP ::= length para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= substring para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 4</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'FASE2'</TD></TR>
<TR><TD>EXP ::= valor</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  VALOR  igual EXP</TD></TR>
<TR><TD>EXP ::= trunc para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= EXP * EXP</TD></TR>
<TR><TD>EXP ::= hora</TD></TR>
<TR><TD>EXP ::= seno</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  SENO  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= sin para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  hora  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= extract para FIELDS from timestamp '2001-02-16 20:38:40' parc</TD></TR>
<TR><TD>FIELDS ::= hour</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= ABSOLUTO TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= decimal para 10 coma 2 parc</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= VALOR TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= SENO TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= decimal para 10 coma 2 parc</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= hora TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>RETURNP ::= returns TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbCalificacion values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= validaregistros para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 8</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'tbProductoUp'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Update'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 2</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= UPDATE ptcoma</TD></TR>
<TR><TD>UPDATE ::= update tbProducto set LCAMPOS WHERE</TD></TR>
<TR><TD>WHERE ::= where EXP</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>EXP ::= estado</TD></TR>
<TR><TD>LCAMPOS ::= estado igual EXP</TD></TR>
<TR><TD>EXP ::= 2</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbCalificacion values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= validaregistros para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 8</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'tbProducto'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Create Table and Insert'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= FUNCIONES</TD></TR>
<TR><TD>FUNCIONES::= create function FUNCTION para LPARAM parc RETURNP  LCONTENIDOP LENGUAJE</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql ptcoma</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= RETURN ptcoma</TD></TR>
<TR><TD>RETURN::= return EXP</TD></TR>
<TR><TD>EXP ::= retorna</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= CONDICIONIF ptcoma</TD></TR>
<TR><TD>CONDICIONIF ::= if EXP then LISTACONTENIDO  end if</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= CONDICIONIF ptcoma</TD></TR>
<TR><TD>CONDICIONIF ::= if EXP then LISTACONTENIDO ELSEF  end if</TD></TR>
<TR><TD>ELSEF ::=  else  LISTACONTENIDO</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  retorna dospuntos igual EXP</TD></TR>
<TR><TD>EXP ::= 0</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  retorna dospuntos igual EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= resultado</TD></TR>
<TR><TD>EXP ::= cantidad</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  resultado  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= tbbodega</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= count para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= * </TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= 'tbbodega'</TD></TR>
<TR><TD>EXP ::= tabla</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= CONDICIONIF ptcoma</TD></TR>
<TR><TD>CONDICIONIF ::= if EXP then LISTACONTENIDO  end if</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= CONDICIONIF ptcoma</TD></TR>
<TR><TD>CONDICIONIF ::= if EXP then LISTACONTENIDO ELSEF  end if</TD></TR>
<TR><TD>ELSEF ::=  else  LISTACONTENIDO</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  retorna dospuntos igual EXP</TD></TR>
<TR><TD>EXP ::= 0</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  retorna dospuntos igual EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= resultado</TD></TR>
<TR><TD>EXP ::= cantidad</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  resultado  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>WHERE ::= where EXP</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= 2</TD></TR>
<TR><TD>EXP ::= estado</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= tbproducto</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= count para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= * </TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= 'tbProductoUp'</TD></TR>
<TR><TD>EXP ::= tabla</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= CONDICIONIF ptcoma</TD></TR>
<TR><TD>CONDICIONIF ::= if EXP then LISTACONTENIDO  end if</TD></TR>
<TR><TD>LISTACONTENIDO ::= LISTACONTENIDO CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= CONDICIONIF ptcoma</TD></TR>
<TR><TD>CONDICIONIF ::= if EXP then LISTACONTENIDO ELSEF  end if</TD></TR>
<TR><TD>ELSEF ::=  else  LISTACONTENIDO</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  retorna dospuntos igual EXP</TD></TR>
<TR><TD>EXP ::= 0</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  retorna dospuntos igual EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= resultado</TD></TR>
<TR><TD>EXP ::= cantidad</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= ASIGNCION ptcoma</TD></TR>
<TR><TD>ASIGNACION ::=  resultado  igual EXP</TD></TR>
<TR><TD>EXP ::= ( EXP )</TD></TR>
<TR><TD>EXP ::= SELECT</TD></TR>
<TR><TD>SELECT ::= select LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= tbproducto</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= count para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= * </TD></TR>
<TR><TD>EXP ::= EXP &#61; EXP</TD></TR>
<TR><TD>EXP ::= 'tbProducto'</TD></TR>
<TR><TD>EXP ::= tabla</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= declare LDEC</TD></TR>
<TR><TD>LDEC ::= LDEC DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= retorna TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LDEC ::= DECLARACIONES</TD></TR>
<TR><TD>DECLARACIONES ::= resultado TIPO  ASIG ptcoma</TD></TR>
<TR><TD>ASIG ::= </TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>RETURNP ::= returns TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LPARAM ::= LPARAM coma cantidad TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>PARAM ::= tabla TIPO</TD></TR>
<TR><TD>TIPO ::= varchar para 50 parc</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= myfuncion para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'Crea Funcion'</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= '2021-01-02'</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Laptop Samsung'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 8</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= now para parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Teclado Flexible USB'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 7</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= now para parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Laptop HP'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 6</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= now para parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'WIFI USB'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 5</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= now para parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Mouse Inalambrico'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 4</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= now para parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Teclado Inalambrico'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 3</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= now para parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Bateria para Laptop Lenovo T420'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 2</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= INSERT ptcoma</TD></TR>
<TR><TD>INSERT ::= insert into tbProducto values para LEXP parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= now para parc</TD></TR>
<TR><TD>LEXP ::= LEXP coma EXP</TD></TR>
<TR><TD>EXP ::= 'Laptop Lenovo'</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 1</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATEINDEX ptcoma</TD></TR>
<TR><TD>CREATEINDEX ::= create unique index idx_califica on tbCalificacion para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= idcalifica</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATETABLE</TD></TR>
<TR><TD>CREATETABLE ::= create table tbCalificacion para LDEF parc ptcoma</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= punteo TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= item TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= varchar para 100 parc</TD></TR>
<TR><TD>LDEF ::= COLDEF</TD></TR>
<TR><TD>COLDEF ::= idcalifica TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= LOPCOLUMN OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= primary key</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATEINDEX ptcoma</TD></TR>
<TR><TD>CREATEINDEX ::= create unique index idx_producto on tbProducto para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= idproducto</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATETABLE</TD></TR>
<TR><TD>CREATETABLE ::= create table tbProducto para LDEF parc ptcoma</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= estado TIPO</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= fechacreacion TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= date</TD></TR>
<TR><TD>LDEF ::= LDEF coma COLDEF</TD></TR>
<TR><TD>COLDEF ::= producto TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= varchar para 150 parc</TD></TR>
<TR><TD>LDEF ::= COLDEF</TD></TR>
<TR><TD>COLDEF ::= idproducto TIPO LOPCOLUMN</TD></TR>
<TR><TD>LOPCOLUMN ::= LOPCOLUMN OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= primary key</TD></TR>
<TR><TD>LOPCOLUMN ::= OPCOLUMN</TD></TR>
<TR><TD>OPCOLUMN ::= not null</TD></TR>
<TR><TD>TIPO ::= integer</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= SELECT ptcoma</TD></TR>
<TR><TD>SELECT ::= select distinct LEXP from LEXP WHERE  GROUP HAVING  COMBINING ORDER LIMIT</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= myfuncion para LEXP parc</TD></TR>
<TR><TD>LEXP ::= EXP</TD></TR>
<TR><TD>EXP ::= 'INICIO CALIFICACION FASE 2'</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= FUNCIONES</TD></TR>
<TR><TD>FUNCIONES::= create function FUNCTION para LPARAM parc RETURNP  LCONTENIDOP LENGUAJE</TD></TR>
<TR><TD>LENGUAJE ::= language plpgsql ptcoma</TD></TR>
<TR><TD>LCONTENIDOP ::= CONTENIDOP</TD></TR>
<TR><TD>CONTENIDOP ::=  as dolarn LISTACONTENIDO dolarn</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= BEGINEND ptcoma</TD></TR>
<TR><TD>BEGINEND ::= begin LISTACONTENIDO end</TD></TR>
<TR><TD>LISTACONTENIDO ::=  CONTENIDO</TD></TR>
<TR><TD>CONTENIDO ::= RETURN ptcoma</TD></TR>
<TR><TD>RETURN::= return EXP</TD></TR>
<TR><TD>EXP ::= texto</TD></TR>
<TR><TD>RETURNP ::= returns TIPO</TD></TR>
<TR><TD>TIPO ::= text</TD></TR>
<TR><TD>PARAM ::= texto TIPO</TD></TR>
<TR><TD>TIPO ::= text</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= use id ptcoma</TD></TR>
<TR><TD>INSTRUCCIONES ::= INSTRUCCION</TD></TR>
<TR><TD>INSTRUCCION ::= CREATEDB ptcoma</TD></TR>
<TR><TD>CREATEDB ::= create RD DBFase2</TD></TR>
<TR><TD>RD ::= databases</TD></TR>
</TABLE>>]
}
